!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_PROGRAM_AUTHOR	Darren Hiebert	/dhiebert@users.sourceforge.net/
!_TAG_PROGRAM_NAME	Exuberant Ctags	//
!_TAG_PROGRAM_URL	http://ctags.sourceforge.net	/official site/
!_TAG_PROGRAM_VERSION	5.9~svn20110310	//
APinDiffArea	def/defiPinCap.cpp	/^int defiPin::APinDiffArea(int i) const {$/;"	f	class:defiPin
APinDiffAreaAllocated_	def/defiPinCap.hpp	/^  int APinDiffAreaAllocated_;$/;"	m	class:defiPin
APinDiffAreaAllocated_	include/defiPinCap.hpp	/^  int APinDiffAreaAllocated_;$/;"	m	class:defiPin
APinDiffAreaLayer	def/defiPinCap.cpp	/^const char* defiPin::APinDiffAreaLayer(int i) const {$/;"	f	class:defiPin
APinDiffAreaLayer_	def/defiPinCap.hpp	/^  char** APinDiffAreaLayer_;             \/\/ 5.4 Layer$/;"	m	class:defiPin
APinDiffAreaLayer_	include/defiPinCap.hpp	/^  char** APinDiffAreaLayer_;             \/\/ 5.4 Layer$/;"	m	class:defiPin
APinDiffArea_	def/defiPinCap.hpp	/^  int* APinDiffArea_;                    \/\/ 5.4 AntennaPinDiffArea$/;"	m	class:defiPin
APinDiffArea_	include/defiPinCap.hpp	/^  int* APinDiffArea_;                    \/\/ 5.4 AntennaPinDiffArea$/;"	m	class:defiPin
APinGateArea	def/defiPinCap.cpp	/^int defiPinAntennaModel::APinGateArea(int i) const {$/;"	f	class:defiPinAntennaModel
APinGateAreaAllocated_	def/defiPinCap.hpp	/^  int APinGateAreaAllocated_;$/;"	m	class:defiPinAntennaModel
APinGateAreaAllocated_	include/defiPinCap.hpp	/^  int APinGateAreaAllocated_;$/;"	m	class:defiPinAntennaModel
APinGateAreaLayer	def/defiPinCap.cpp	/^const char* defiPinAntennaModel::APinGateAreaLayer(int i) const {$/;"	f	class:defiPinAntennaModel
APinGateAreaLayer_	def/defiPinCap.hpp	/^  char** APinGateAreaLayer_;             \/\/ 5.4 Layer$/;"	m	class:defiPinAntennaModel
APinGateAreaLayer_	include/defiPinCap.hpp	/^  char** APinGateAreaLayer_;             \/\/ 5.4 Layer$/;"	m	class:defiPinAntennaModel
APinGateArea_	def/defiPinCap.hpp	/^  int* APinGateArea_;                    \/\/ 5.4 AntennaPinGateArea$/;"	m	class:defiPinAntennaModel
APinGateArea_	include/defiPinCap.hpp	/^  int* APinGateArea_;                    \/\/ 5.4 AntennaPinGateArea$/;"	m	class:defiPinAntennaModel
APinMaxAreaCar	def/defiPinCap.cpp	/^int defiPinAntennaModel::APinMaxAreaCar(int i) const {$/;"	f	class:defiPinAntennaModel
APinMaxAreaCarAllocated_	def/defiPinCap.hpp	/^  int APinMaxAreaCarAllocated_;$/;"	m	class:defiPinAntennaModel
APinMaxAreaCarAllocated_	include/defiPinCap.hpp	/^  int APinMaxAreaCarAllocated_;$/;"	m	class:defiPinAntennaModel
APinMaxAreaCarLayer	def/defiPinCap.cpp	/^const char* defiPinAntennaModel::APinMaxAreaCarLayer(int i) const {$/;"	f	class:defiPinAntennaModel
APinMaxAreaCarLayer_	def/defiPinCap.hpp	/^  char** APinMaxAreaCarLayer_;           \/\/ 5.4 Layer$/;"	m	class:defiPinAntennaModel
APinMaxAreaCarLayer_	include/defiPinCap.hpp	/^  char** APinMaxAreaCarLayer_;           \/\/ 5.4 Layer$/;"	m	class:defiPinAntennaModel
APinMaxAreaCar_	def/defiPinCap.hpp	/^  int* APinMaxAreaCar_;                  \/\/ 5.4 AntennaPinMaxAreaCar$/;"	m	class:defiPinAntennaModel
APinMaxAreaCar_	include/defiPinCap.hpp	/^  int* APinMaxAreaCar_;                  \/\/ 5.4 AntennaPinMaxAreaCar$/;"	m	class:defiPinAntennaModel
APinMaxCutCar	def/defiPinCap.cpp	/^int defiPinAntennaModel::APinMaxCutCar(int i) const {$/;"	f	class:defiPinAntennaModel
APinMaxCutCarAllocated_	def/defiPinCap.hpp	/^  int APinMaxCutCarAllocated_;$/;"	m	class:defiPinAntennaModel
APinMaxCutCarAllocated_	include/defiPinCap.hpp	/^  int APinMaxCutCarAllocated_;$/;"	m	class:defiPinAntennaModel
APinMaxCutCarLayer	def/defiPinCap.cpp	/^const char* defiPinAntennaModel::APinMaxCutCarLayer(int i) const {$/;"	f	class:defiPinAntennaModel
APinMaxCutCarLayer_	def/defiPinCap.hpp	/^  char** APinMaxCutCarLayer_;            \/\/ 5.4 Layer$/;"	m	class:defiPinAntennaModel
APinMaxCutCarLayer_	include/defiPinCap.hpp	/^  char** APinMaxCutCarLayer_;            \/\/ 5.4 Layer$/;"	m	class:defiPinAntennaModel
APinMaxCutCar_	def/defiPinCap.hpp	/^  int* APinMaxCutCar_;                   \/\/ 5.4 AntennaPinMaxCutCar$/;"	m	class:defiPinAntennaModel
APinMaxCutCar_	include/defiPinCap.hpp	/^  int* APinMaxCutCar_;                   \/\/ 5.4 AntennaPinMaxCutCar$/;"	m	class:defiPinAntennaModel
APinMaxSideAreaCar	def/defiPinCap.cpp	/^int defiPinAntennaModel::APinMaxSideAreaCar(int i) const {$/;"	f	class:defiPinAntennaModel
APinMaxSideAreaCarAllocated_	def/defiPinCap.hpp	/^  int APinMaxSideAreaCarAllocated_;$/;"	m	class:defiPinAntennaModel
APinMaxSideAreaCarAllocated_	include/defiPinCap.hpp	/^  int APinMaxSideAreaCarAllocated_;$/;"	m	class:defiPinAntennaModel
APinMaxSideAreaCarLayer	def/defiPinCap.cpp	/^const char* defiPinAntennaModel::APinMaxSideAreaCarLayer(int i) const {$/;"	f	class:defiPinAntennaModel
APinMaxSideAreaCarLayer_	def/defiPinCap.hpp	/^  char** APinMaxSideAreaCarLayer_;       \/\/ 5.4 Layer$/;"	m	class:defiPinAntennaModel
APinMaxSideAreaCarLayer_	include/defiPinCap.hpp	/^  char** APinMaxSideAreaCarLayer_;       \/\/ 5.4 Layer$/;"	m	class:defiPinAntennaModel
APinMaxSideAreaCar_	def/defiPinCap.hpp	/^  int* APinMaxSideAreaCar_;              \/\/ 5.4 AntennaPinMaxSideAreaCar$/;"	m	class:defiPinAntennaModel
APinMaxSideAreaCar_	include/defiPinCap.hpp	/^  int* APinMaxSideAreaCar_;              \/\/ 5.4 AntennaPinMaxSideAreaCar$/;"	m	class:defiPinAntennaModel
APinPartialCutArea	def/defiPinCap.cpp	/^int defiPin::APinPartialCutArea(int i) const {$/;"	f	class:defiPin
APinPartialCutAreaAllocated_	def/defiPinCap.hpp	/^  int APinPartialCutAreaAllocated_;$/;"	m	class:defiPin
APinPartialCutAreaAllocated_	include/defiPinCap.hpp	/^  int APinPartialCutAreaAllocated_;$/;"	m	class:defiPin
APinPartialCutAreaLayer	def/defiPinCap.cpp	/^const char* defiPin::APinPartialCutAreaLayer(int i) const {$/;"	f	class:defiPin
APinPartialCutAreaLayer_	def/defiPinCap.hpp	/^  char** APinPartialCutAreaLayer_;       \/\/ 5.4 Layer$/;"	m	class:defiPin
APinPartialCutAreaLayer_	include/defiPinCap.hpp	/^  char** APinPartialCutAreaLayer_;       \/\/ 5.4 Layer$/;"	m	class:defiPin
APinPartialCutArea_	def/defiPinCap.hpp	/^  int* APinPartialCutArea_;              \/\/ 5.4 AntennaPinPartialCutArea$/;"	m	class:defiPin
APinPartialCutArea_	include/defiPinCap.hpp	/^  int* APinPartialCutArea_;              \/\/ 5.4 AntennaPinPartialCutArea$/;"	m	class:defiPin
APinPartialMetalArea	def/defiPinCap.cpp	/^int defiPin::APinPartialMetalArea(int i) const {$/;"	f	class:defiPin
APinPartialMetalAreaAllocated_	def/defiPinCap.hpp	/^  int APinPartialMetalAreaAllocated_;$/;"	m	class:defiPin
APinPartialMetalAreaAllocated_	include/defiPinCap.hpp	/^  int APinPartialMetalAreaAllocated_;$/;"	m	class:defiPin
APinPartialMetalAreaLayer	def/defiPinCap.cpp	/^const char* defiPin::APinPartialMetalAreaLayer(int i) const {$/;"	f	class:defiPin
APinPartialMetalAreaLayer_	def/defiPinCap.hpp	/^  char** APinPartialMetalAreaLayer_;     \/\/ 5.4 Layer$/;"	m	class:defiPin
APinPartialMetalAreaLayer_	include/defiPinCap.hpp	/^  char** APinPartialMetalAreaLayer_;     \/\/ 5.4 Layer$/;"	m	class:defiPin
APinPartialMetalArea_	def/defiPinCap.hpp	/^  int* APinPartialMetalArea_;            \/\/ 5.4 AntennaPinPartialMetalArea$/;"	m	class:defiPin
APinPartialMetalArea_	include/defiPinCap.hpp	/^  int* APinPartialMetalArea_;            \/\/ 5.4 AntennaPinPartialMetalArea$/;"	m	class:defiPin
APinPartialMetalSideArea	def/defiPinCap.cpp	/^int defiPin::APinPartialMetalSideArea(int i) const {$/;"	f	class:defiPin
APinPartialMetalSideAreaAllocated_	def/defiPinCap.hpp	/^  int APinPartialMetalSideAreaAllocated_;$/;"	m	class:defiPin
APinPartialMetalSideAreaAllocated_	include/defiPinCap.hpp	/^  int APinPartialMetalSideAreaAllocated_;$/;"	m	class:defiPin
APinPartialMetalSideAreaLayer	def/defiPinCap.cpp	/^const char* defiPin::APinPartialMetalSideAreaLayer(int i) const {$/;"	f	class:defiPin
APinPartialMetalSideAreaLayer_	def/defiPinCap.hpp	/^  char** APinPartialMetalSideAreaLayer_; \/\/ 5.4 Layer$/;"	m	class:defiPin
APinPartialMetalSideAreaLayer_	include/defiPinCap.hpp	/^  char** APinPartialMetalSideAreaLayer_; \/\/ 5.4 Layer$/;"	m	class:defiPin
APinPartialMetalSideArea_	def/defiPinCap.hpp	/^  int* APinPartialMetalSideArea_;        \/\/ 5.4 AntennaPinPartialMetalSideArea$/;"	m	class:defiPin
APinPartialMetalSideArea_	include/defiPinCap.hpp	/^  int* APinPartialMetalSideArea_;        \/\/ 5.4 AntennaPinPartialMetalSideArea$/;"	m	class:defiPin
ARCH	template.mk	/^    ARCH=hppa$/;"	m
ARCH	template.mk	/^    ARCH=ibmrs$/;"	m
ARCH	template.mk	/^    ARCH=lnx86 $/;"	m
ARCH	template.mk	/^    ARCH=sun4v$/;"	m
AddPathToNet	def/defrSettings.hpp	/^    int AddPathToNet;$/;"	m	class:defrSettings
AddPathToNet	include/defrSettings.hpp	/^    int AddPathToNet;$/;"	m	class:defrSettings
AllowComponentNets	def/defrSettings.hpp	/^    int AllowComponentNets;$/;"	m	class:defrSettings
AllowComponentNets	include/defrSettings.hpp	/^    int AllowComponentNets;$/;"	m	class:defrSettings
ArrayNameCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType ArrayNameCbk;$/;"	m	class:defrCallbacks
ArrayNameCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType ArrayNameCbk;$/;"	m	class:defrCallbacks
Assertion	def/defrData.hpp	/^    defiAssertion Assertion;$/;"	m	class:defrData
Assertion	include/defrData.hpp	/^    defiAssertion Assertion;$/;"	m	class:defrData
AssertionCbk	def/defrCallBacks.hpp	/^    defrAssertionCbkFnType AssertionCbk;$/;"	m	class:defrCallbacks
AssertionCbk	include/defrCallBacks.hpp	/^    defrAssertionCbkFnType AssertionCbk;$/;"	m	class:defrCallbacks
AssertionWarnings	def/defrSettings.hpp	/^    int AssertionWarnings;$/;"	m	class:defrSettings
AssertionWarnings	include/defrSettings.hpp	/^    int AssertionWarnings;$/;"	m	class:defrSettings
AssertionsEndCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType AssertionsEndCbk;$/;"	m	class:defrCallbacks
AssertionsEndCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType AssertionsEndCbk;$/;"	m	class:defrCallbacks
AssertionsStartCbk	def/defrCallBacks.hpp	/^    defrIntegerCbkFnType AssertionsStartCbk;$/;"	m	class:defrCallbacks
AssertionsStartCbk	include/defrCallBacks.hpp	/^    defrIntegerCbkFnType AssertionsStartCbk;$/;"	m	class:defrCallbacks
BEGIN_LEFDEF_PARSER_NAMESPACE	def/defiKRDefs.hpp	33;"	d
BEGIN_LEFDEF_PARSER_NAMESPACE	include/defiKRDefs.hpp	33;"	d
BINOBJS	template.mk	/^BINOBJS =	$(TMP4:.c=.o)$/;"	m
BINSRCS	defdiff/Makefile	/^BINSRCS =	\\$/;"	m
BINSRCS	defrw/Makefile	/^BINSRCS =	\\$/;"	m
BINSRCS	defwrite/Makefile	/^BINSRCS =	defwrite.cpp$/;"	m
BINTARGET	defdiff/Makefile	/^BINTARGET =	defdiff$/;"	m
BINTARGET	defrw/Makefile	/^BINTARGET =	defrw$/;"	m
BINTARGET	defwrite/Makefile	/^BINTARGET =	defwrite$/;"	m
BIN_LINK_FLAGS	template.mk	/^    BIN_LINK_FLAGS=-lPW$/;"	m
BUILD_ORDER	Makefile	/^BUILD_ORDER	= \\$/;"	m
Blockage	def/defrData.hpp	/^    defiBlockage Blockage;$/;"	m	class:defrData
Blockage	include/defrData.hpp	/^    defiBlockage Blockage;$/;"	m	class:defrData
BlockageCbk	def/defrCallBacks.hpp	/^    defrBlockageCbkFnType BlockageCbk;$/;"	m	class:defrCallbacks
BlockageCbk	include/defrCallBacks.hpp	/^    defrBlockageCbkFnType BlockageCbk;$/;"	m	class:defrCallbacks
BlockageEndCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType BlockageEndCbk;$/;"	m	class:defrCallbacks
BlockageEndCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType BlockageEndCbk;$/;"	m	class:defrCallbacks
BlockageStartCbk	def/defrCallBacks.hpp	/^    defrIntegerCbkFnType BlockageStartCbk;$/;"	m	class:defrCallbacks
BlockageStartCbk	include/defrCallBacks.hpp	/^    defrIntegerCbkFnType BlockageStartCbk;$/;"	m	class:defrCallbacks
BlockageWarnings	def/defrSettings.hpp	/^    int BlockageWarnings;$/;"	m	class:defrSettings
BlockageWarnings	include/defrSettings.hpp	/^    int BlockageWarnings;$/;"	m	class:defrSettings
BusBitCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType BusBitCbk;$/;"	m	class:defrCallbacks
BusBitCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType BusBitCbk;$/;"	m	class:defrCallbacks
CALLBACK	def/def.tab.cpp	96;"	d	file:
CBMAX	cdef/defrReader.h	41;"	d
CBMAX	def/defrReader.hpp	40;"	d
CBMAX	include/defrReader.h	41;"	d
CBMAX	include/defrReader.hpp	40;"	d
CC	template.mk	/^    CC=\/usr\/bin\/cc_r -Dibmrs$/;"	m
CC	template.mk	/^    CC=gcc$/;"	m
CDEFIALIAS_H	cdef/defiAlias.h	35;"	d
CDEFIASSERTION_H	cdef/defiAssertion.h	35;"	d
CDEFIASSERTION_H	include/defiAssertion.h	35;"	d
CDEFIBLOCKAGE_H	cdef/defiBlockage.h	35;"	d
CDEFIBLOCKAGE_H	include/defiBlockage.h	35;"	d
CDEFICOMPONENT_H	cdef/defiComponent.h	35;"	d
CDEFICOMPONENT_H	include/defiComponent.h	35;"	d
CDEFIDEBUG_H	cdef/defiDebug.h	35;"	d
CDEFIDEBUG_H	include/defiDebug.h	35;"	d
CDEFIFILL_H	cdef/defiFill.h	35;"	d
CDEFIFILL_H	include/defiFill.h	35;"	d
CDEFIFPC_H	cdef/defiFPC.h	35;"	d
CDEFIFPC_H	include/defiFPC.h	35;"	d
CDEFIGROUP_H	cdef/defiGroup.h	35;"	d
CDEFIGROUP_H	include/defiGroup.h	35;"	d
CDEFIIOTIMING_H	cdef/defiIOTiming.h	35;"	d
CDEFIIOTIMING_H	include/defiIOTiming.h	35;"	d
CDEFIMISC_H	cdef/defiMisc.h	35;"	d
CDEFIMISC_H	include/defiMisc.h	35;"	d
CDEFINET_H	cdef/defiNet.h	35;"	d
CDEFINET_H	include/defiNet.h	35;"	d
CDEFINONDEFAULT_H	cdef/defiNonDefault.h	35;"	d
CDEFINONDEFAULT_H	include/defiNonDefault.h	35;"	d
CDEFIPARTITION_H	cdef/defiPartition.h	35;"	d
CDEFIPARTITION_H	include/defiPartition.h	35;"	d
CDEFIPATH_H	cdef/defiPath.h	35;"	d
CDEFIPATH_H	include/defiPath.h	35;"	d
CDEFIPINCAP_H	cdef/defiPinCap.h	35;"	d
CDEFIPINCAP_H	include/defiPinCap.h	35;"	d
CDEFIPINPROP_H	cdef/defiPinProp.h	35;"	d
CDEFIPINPROP_H	include/defiPinProp.h	35;"	d
CDEFIPROPTYPE_H	cdef/defiPropType.h	35;"	d
CDEFIPROPTYPE_H	include/defiPropType.h	35;"	d
CDEFIPROP_H	cdef/defiProp.h	35;"	d
CDEFIPROP_H	include/defiProp.h	35;"	d
CDEFIREGION_H	cdef/defiRegion.h	35;"	d
CDEFIREGION_H	include/defiRegion.h	35;"	d
CDEFIROWTRACK_H	cdef/defiRowTrack.h	35;"	d
CDEFIROWTRACK_H	include/defiRowTrack.h	35;"	d
CDEFISCANCHAIN_H	cdef/defiScanchain.h	35;"	d
CDEFISCANCHAIN_H	include/defiScanchain.h	35;"	d
CDEFISITE_H	cdef/defiSite.h	35;"	d
CDEFISITE_H	include/defiSite.h	35;"	d
CDEFISLOT_H	cdef/defiSlot.h	35;"	d
CDEFISLOT_H	include/defiSlot.h	35;"	d
CDEFITIMINGDISABLE_H	cdef/defiTimingDisable.h	35;"	d
CDEFITIMINGDISABLE_H	include/defiTimingDisable.h	35;"	d
CDEFIUSER_H	cdef/defiUser.h	45;"	d
CDEFIUSER_H	include/defiUser.h	45;"	d
CDEFIVIA_H	cdef/defiVia.h	35;"	d
CDEFIVIA_H	include/defiVia.h	35;"	d
CDEFRREADER_H	cdef/defrReader.h	35;"	d
CDEFRREADER_H	include/defrReader.h	35;"	d
CDEFWWRITERCALLS_H	cdef/defwWriterCalls.h	35;"	d
CDEFWWRITERCALLS_H	include/defwWriterCalls.h	35;"	d
CDEFWWRITER_H	cdef/defwWriter.h	35;"	d
CDEFWWRITER_H	include/defwWriter.h	35;"	d
CHECK_DEF_STATUS	def/defwWriterCalls.cpp	109;"	d	file:
CHECK_STATUS	defwrite/defwrite.cpp	43;"	d	file:
CHECK_STATUS	defwrite/defwriteCbs.cpp	44;"	d	file:
CHKERR	def/def.tab.cpp	109;"	d	file:
CHKPROPTYPE	def/def.tab.cpp	114;"	d	file:
CLEFDEFZIP_H	cdefzlib/defzlib.h	26;"	d
CLEFDEFZIP_H	include/defzlib.h	26;"	d
CLEFITYPEDEFS_H	cdef/defiTypedefs.h	35;"	d
CLEFITYPEDEFS_H	include/defiTypedefs.h	35;"	d
COVER	def/def.tab.cpp	138;"	d	file:
CURRENT_VERSION	def/defrData.hpp	42;"	d
CURRENT_VERSION	include/defrData.hpp	42;"	d
CXX	template.mk	/^    CXX=CC$/;"	m
CXX	template.mk	/^    CXX=\/opt\/aCC\/bin\/aCC$/;"	m
CXX	template.mk	/^    CXX=\/usr\/bin\/xlC_r -+ -Dibmrs$/;"	m
CXX	template.mk	/^    CXX=g++$/;"	m
CXXFLAGS	template.mk	/^    CXXFLAGS=+DAportable -AA$/;"	m
CXXFLAGS	template.mk	/^    CXXFLAGS=-g$/;"	m
CannotOccupy	def/defrData.hpp	/^    defiSite CannotOccupy;$/;"	m	class:defrData
CannotOccupy	include/defrData.hpp	/^    defiSite CannotOccupy;$/;"	m	class:defrData
CannotOccupyCbk	def/defrCallBacks.hpp	/^    defrSiteCbkFnType CannotOccupyCbk;$/;"	m	class:defrCallbacks
CannotOccupyCbk	include/defrCallBacks.hpp	/^    defrSiteCbkFnType CannotOccupyCbk;$/;"	m	class:defrCallbacks
Canplace	def/defrData.hpp	/^    defiSite Canplace;$/;"	m	class:defrData
Canplace	include/defrData.hpp	/^    defiSite Canplace;$/;"	m	class:defrData
CanplaceCbk	def/defrCallBacks.hpp	/^    defrSiteCbkFnType CanplaceCbk;$/;"	m	class:defrCallbacks
CanplaceCbk	include/defrCallBacks.hpp	/^    defrSiteCbkFnType CanplaceCbk;$/;"	m	class:defrCallbacks
CaseSensitiveCbk	def/defrCallBacks.hpp	/^    defrIntegerCbkFnType CaseSensitiveCbk;$/;"	m	class:defrCallbacks
CaseSensitiveCbk	include/defrCallBacks.hpp	/^    defrIntegerCbkFnType CaseSensitiveCbk;$/;"	m	class:defrCallbacks
CaseSensitiveWarnings	def/defrSettings.hpp	/^    int CaseSensitiveWarnings;$/;"	m	class:defrSettings
CaseSensitiveWarnings	include/defrSettings.hpp	/^    int CaseSensitiveWarnings;$/;"	m	class:defrSettings
Clear	def/defiPropType.cpp	/^void defiPropType::Clear() {$/;"	f	class:defiPropType
CommentChar	def/defrSettings.hpp	/^    char CommentChar;$/;"	m	class:defrSettings
CommentChar	include/defrSettings.hpp	/^    char CommentChar;$/;"	m	class:defrSettings
CompPinProp	def/defrSettings.hpp	/^    defiPropType    CompPinProp;$/;"	m	class:defrSession
CompPinProp	include/defrSettings.hpp	/^    defiPropType    CompPinProp;$/;"	m	class:defrSession
CompProp	def/defrSettings.hpp	/^    defiPropType    CompProp;$/;"	m	class:defrSession
CompProp	include/defrSettings.hpp	/^    defiPropType    CompProp;$/;"	m	class:defrSession
Component	def/defrData.hpp	/^    defiComponent Component;$/;"	m	class:defrData
Component	include/defrData.hpp	/^    defiComponent Component;$/;"	m	class:defrData
ComponentCbk	def/defrCallBacks.hpp	/^    defrComponentCbkFnType ComponentCbk;$/;"	m	class:defrCallbacks
ComponentCbk	include/defrCallBacks.hpp	/^    defrComponentCbkFnType ComponentCbk;$/;"	m	class:defrCallbacks
ComponentEndCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType ComponentEndCbk;$/;"	m	class:defrCallbacks
ComponentEndCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType ComponentEndCbk;$/;"	m	class:defrCallbacks
ComponentExtCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType ComponentExtCbk;$/;"	m	class:defrCallbacks
ComponentExtCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType ComponentExtCbk;$/;"	m	class:defrCallbacks
ComponentMaskShiftLayer	def/defrData.hpp	/^    defiComponentMaskShiftLayer ComponentMaskShiftLayer;$/;"	m	class:defrData
ComponentMaskShiftLayer	include/defrData.hpp	/^    defiComponentMaskShiftLayer ComponentMaskShiftLayer;$/;"	m	class:defrData
ComponentMaskShiftLayerCbk	def/defrCallBacks.hpp	/^    defrComponentMaskShiftLayerCbkFnType ComponentMaskShiftLayerCbk;$/;"	m	class:defrCallbacks
ComponentMaskShiftLayerCbk	include/defrCallBacks.hpp	/^    defrComponentMaskShiftLayerCbkFnType ComponentMaskShiftLayerCbk;$/;"	m	class:defrCallbacks
ComponentStartCbk	def/defrCallBacks.hpp	/^    defrIntegerCbkFnType ComponentStartCbk;$/;"	m	class:defrCallbacks
ComponentStartCbk	include/defrCallBacks.hpp	/^    defrIntegerCbkFnType ComponentStartCbk;$/;"	m	class:defrCallbacks
ComponentWarnings	def/defrSettings.hpp	/^    int ComponentWarnings;$/;"	m	class:defrSettings
ComponentWarnings	include/defrSettings.hpp	/^    int ComponentWarnings;$/;"	m	class:defrSettings
ConstraintCbk	def/defrCallBacks.hpp	/^    defrAssertionCbkFnType ConstraintCbk;$/;"	m	class:defrCallbacks
ConstraintCbk	include/defrCallBacks.hpp	/^    defrAssertionCbkFnType ConstraintCbk;$/;"	m	class:defrCallbacks
ConstraintWarnings	def/defrSettings.hpp	/^    int ConstraintWarnings;$/;"	m	class:defrSettings
ConstraintWarnings	include/defrSettings.hpp	/^    int ConstraintWarnings;$/;"	m	class:defrSettings
ConstraintsEndCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType ConstraintsEndCbk;$/;"	m	class:defrCallbacks
ConstraintsEndCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType ConstraintsEndCbk;$/;"	m	class:defrCallbacks
ConstraintsStartCbk	def/defrCallBacks.hpp	/^    defrIntegerCbkFnType ConstraintsStartCbk;$/;"	m	class:defrCallbacks
ConstraintsStartCbk	include/defrCallBacks.hpp	/^    defrIntegerCbkFnType ConstraintsStartCbk;$/;"	m	class:defrCallbacks
ContextErrorLogFunction	def/defrSettings.hpp	/^    DEFI_CONTEXT_LOG_FUNCTION ContextErrorLogFunction;$/;"	m	class:defrSettings
ContextErrorLogFunction	include/defrSettings.hpp	/^    DEFI_CONTEXT_LOG_FUNCTION ContextErrorLogFunction;$/;"	m	class:defrSettings
ContextLineNumberFunction	def/defrSettings.hpp	/^    DEFI_CONTEXT_LINE_NUMBER_FUNCTION ContextLineNumberFunction;$/;"	m	class:defrSettings
ContextLineNumberFunction	include/defrSettings.hpp	/^    DEFI_CONTEXT_LINE_NUMBER_FUNCTION ContextLineNumberFunction;$/;"	m	class:defrSettings
ContextLongLineNumberFunction	def/defrSettings.hpp	/^    DEFI_CONTEXT_LONG_LINE_NUMBER_FUNCTION ContextLongLineNumberFunction;$/;"	m	class:defrSettings
ContextLongLineNumberFunction	include/defrSettings.hpp	/^    DEFI_CONTEXT_LONG_LINE_NUMBER_FUNCTION ContextLongLineNumberFunction;$/;"	m	class:defrSettings
ContextWarningLogFunction	def/defrSettings.hpp	/^    DEFI_CONTEXT_WARNING_LOG_FUNCTION ContextWarningLogFunction;$/;"	m	class:defrSettings
ContextWarningLogFunction	include/defrSettings.hpp	/^    DEFI_CONTEXT_WARNING_LOG_FUNCTION ContextWarningLogFunction;$/;"	m	class:defrSettings
DEFCASE	cdef/xdefiDebug.cpp	/^const char* DEFCASE (const char*  ch) {$/;"	f
DEFCASE	def/def_keywords.cpp	/^defrData::DEFCASE(const char* ch)$/;"	f	class:defrData
DEFCASE	def/defiDebug.cpp	/^const char* DEFCASE(const char* ch, defrData *defData) {$/;"	f
DEFEmsMsgTable	cdef/defMsgTable.h	/^emsError_t DEFEmsMsgTable[] =$/;"	v
DEFIPATH_DONE	cdef/defiPath.h	/^  DEFIPATH_DONE = 0,$/;"	e	enum:defiPath_e
DEFIPATH_DONE	def/defiPath.hpp	/^  DEFIPATH_DONE = 0,$/;"	e	enum:defiPath_e
DEFIPATH_DONE	include/defiPath.h	/^  DEFIPATH_DONE = 0,$/;"	e	enum:defiPath_e
DEFIPATH_DONE	include/defiPath.hpp	/^  DEFIPATH_DONE = 0,$/;"	e	enum:defiPath_e
DEFIPATH_FLUSHPOINT	cdef/defiPath.h	/^  DEFIPATH_FLUSHPOINT = 6,$/;"	e	enum:defiPath_e
DEFIPATH_FLUSHPOINT	def/defiPath.hpp	/^  DEFIPATH_FLUSHPOINT,$/;"	e	enum:defiPath_e
DEFIPATH_FLUSHPOINT	include/defiPath.h	/^  DEFIPATH_FLUSHPOINT = 6,$/;"	e	enum:defiPath_e
DEFIPATH_FLUSHPOINT	include/defiPath.hpp	/^  DEFIPATH_FLUSHPOINT,$/;"	e	enum:defiPath_e
DEFIPATH_LAYER	cdef/defiPath.h	/^  DEFIPATH_LAYER = 1,$/;"	e	enum:defiPath_e
DEFIPATH_LAYER	def/defiPath.hpp	/^  DEFIPATH_LAYER,$/;"	e	enum:defiPath_e
DEFIPATH_LAYER	include/defiPath.h	/^  DEFIPATH_LAYER = 1,$/;"	e	enum:defiPath_e
DEFIPATH_LAYER	include/defiPath.hpp	/^  DEFIPATH_LAYER,$/;"	e	enum:defiPath_e
DEFIPATH_MASK	cdef/defiPath.h	/^  DEFIPATH_MASK = 14,$/;"	e	enum:defiPath_e
DEFIPATH_MASK	def/defiPath.hpp	/^  DEFIPATH_MASK,$/;"	e	enum:defiPath_e
DEFIPATH_MASK	include/defiPath.h	/^  DEFIPATH_MASK = 14,$/;"	e	enum:defiPath_e
DEFIPATH_MASK	include/defiPath.hpp	/^  DEFIPATH_MASK,$/;"	e	enum:defiPath_e
DEFIPATH_POINT	cdef/defiPath.h	/^  DEFIPATH_POINT = 5,$/;"	e	enum:defiPath_e
DEFIPATH_POINT	def/defiPath.hpp	/^  DEFIPATH_POINT,$/;"	e	enum:defiPath_e
DEFIPATH_POINT	include/defiPath.h	/^  DEFIPATH_POINT = 5,$/;"	e	enum:defiPath_e
DEFIPATH_POINT	include/defiPath.hpp	/^  DEFIPATH_POINT,$/;"	e	enum:defiPath_e
DEFIPATH_RECT	cdef/defiPath.h	/^  DEFIPATH_RECT = 12,$/;"	e	enum:defiPath_e
DEFIPATH_RECT	def/defiPath.hpp	/^  DEFIPATH_RECT,$/;"	e	enum:defiPath_e
DEFIPATH_RECT	include/defiPath.h	/^  DEFIPATH_RECT = 12,$/;"	e	enum:defiPath_e
DEFIPATH_RECT	include/defiPath.hpp	/^  DEFIPATH_RECT,$/;"	e	enum:defiPath_e
DEFIPATH_SHAPE	cdef/defiPath.h	/^  DEFIPATH_SHAPE = 8,$/;"	e	enum:defiPath_e
DEFIPATH_SHAPE	def/defiPath.hpp	/^  DEFIPATH_SHAPE,$/;"	e	enum:defiPath_e
DEFIPATH_SHAPE	include/defiPath.h	/^  DEFIPATH_SHAPE = 8,$/;"	e	enum:defiPath_e
DEFIPATH_SHAPE	include/defiPath.hpp	/^  DEFIPATH_SHAPE,$/;"	e	enum:defiPath_e
DEFIPATH_STYLE	cdef/defiPath.h	/^  DEFIPATH_STYLE = 9,$/;"	e	enum:defiPath_e
DEFIPATH_STYLE	def/defiPath.hpp	/^  DEFIPATH_STYLE,$/;"	e	enum:defiPath_e
DEFIPATH_STYLE	include/defiPath.h	/^  DEFIPATH_STYLE = 9,$/;"	e	enum:defiPath_e
DEFIPATH_STYLE	include/defiPath.hpp	/^  DEFIPATH_STYLE,$/;"	e	enum:defiPath_e
DEFIPATH_TAPER	cdef/defiPath.h	/^  DEFIPATH_TAPER = 7,$/;"	e	enum:defiPath_e
DEFIPATH_TAPER	def/defiPath.hpp	/^  DEFIPATH_TAPER,$/;"	e	enum:defiPath_e
DEFIPATH_TAPER	include/defiPath.h	/^  DEFIPATH_TAPER = 7,$/;"	e	enum:defiPath_e
DEFIPATH_TAPER	include/defiPath.hpp	/^  DEFIPATH_TAPER,$/;"	e	enum:defiPath_e
DEFIPATH_TAPERRULE	cdef/defiPath.h	/^  DEFIPATH_TAPERRULE = 10,$/;"	e	enum:defiPath_e
DEFIPATH_TAPERRULE	def/defiPath.hpp	/^  DEFIPATH_TAPERRULE,$/;"	e	enum:defiPath_e
DEFIPATH_TAPERRULE	include/defiPath.h	/^  DEFIPATH_TAPERRULE = 10,$/;"	e	enum:defiPath_e
DEFIPATH_TAPERRULE	include/defiPath.hpp	/^  DEFIPATH_TAPERRULE,$/;"	e	enum:defiPath_e
DEFIPATH_VIA	cdef/defiPath.h	/^  DEFIPATH_VIA = 2,$/;"	e	enum:defiPath_e
DEFIPATH_VIA	def/defiPath.hpp	/^  DEFIPATH_VIA,$/;"	e	enum:defiPath_e
DEFIPATH_VIA	include/defiPath.h	/^  DEFIPATH_VIA = 2,$/;"	e	enum:defiPath_e
DEFIPATH_VIA	include/defiPath.hpp	/^  DEFIPATH_VIA,$/;"	e	enum:defiPath_e
DEFIPATH_VIADATA	cdef/defiPath.h	/^  DEFIPATH_VIADATA = 11,$/;"	e	enum:defiPath_e
DEFIPATH_VIADATA	def/defiPath.hpp	/^  DEFIPATH_VIADATA,$/;"	e	enum:defiPath_e
DEFIPATH_VIADATA	include/defiPath.h	/^  DEFIPATH_VIADATA = 11,$/;"	e	enum:defiPath_e
DEFIPATH_VIADATA	include/defiPath.hpp	/^  DEFIPATH_VIADATA,$/;"	e	enum:defiPath_e
DEFIPATH_VIAMASK	cdef/defiPath.h	/^  DEFIPATH_VIAMASK = 15$/;"	e	enum:defiPath_e
DEFIPATH_VIAMASK	def/defiPath.hpp	/^  DEFIPATH_VIAMASK$/;"	e	enum:defiPath_e
DEFIPATH_VIAMASK	include/defiPath.h	/^  DEFIPATH_VIAMASK = 15$/;"	e	enum:defiPath_e
DEFIPATH_VIAMASK	include/defiPath.hpp	/^  DEFIPATH_VIAMASK$/;"	e	enum:defiPath_e
DEFIPATH_VIAROTATION	cdef/defiPath.h	/^  DEFIPATH_VIAROTATION = 3,$/;"	e	enum:defiPath_e
DEFIPATH_VIAROTATION	def/defiPath.hpp	/^  DEFIPATH_VIAROTATION,$/;"	e	enum:defiPath_e
DEFIPATH_VIAROTATION	include/defiPath.h	/^  DEFIPATH_VIAROTATION = 3,$/;"	e	enum:defiPath_e
DEFIPATH_VIAROTATION	include/defiPath.hpp	/^  DEFIPATH_VIAROTATION,$/;"	e	enum:defiPath_e
DEFIPATH_VIRTUALPOINT	cdef/defiPath.h	/^  DEFIPATH_VIRTUALPOINT = 13,$/;"	e	enum:defiPath_e
DEFIPATH_VIRTUALPOINT	def/defiPath.hpp	/^  DEFIPATH_VIRTUALPOINT,$/;"	e	enum:defiPath_e
DEFIPATH_VIRTUALPOINT	include/defiPath.h	/^  DEFIPATH_VIRTUALPOINT = 13,$/;"	e	enum:defiPath_e
DEFIPATH_VIRTUALPOINT	include/defiPath.hpp	/^  DEFIPATH_VIRTUALPOINT,$/;"	e	enum:defiPath_e
DEFIPATH_WIDTH	cdef/defiPath.h	/^  DEFIPATH_WIDTH = 4,$/;"	e	enum:defiPath_e
DEFIPATH_WIDTH	def/defiPath.hpp	/^  DEFIPATH_WIDTH,$/;"	e	enum:defiPath_e
DEFIPATH_WIDTH	include/defiPath.h	/^  DEFIPATH_WIDTH = 4,$/;"	e	enum:defiPath_e
DEFIPATH_WIDTH	include/defiPath.hpp	/^  DEFIPATH_WIDTH,$/;"	e	enum:defiPath_e
DEFI_COMPONENT_COVER	cdef/defiComponent.h	45;"	d
DEFI_COMPONENT_COVER	def/defiComponent.hpp	45;"	d
DEFI_COMPONENT_COVER	include/defiComponent.h	45;"	d
DEFI_COMPONENT_COVER	include/defiComponent.hpp	45;"	d
DEFI_COMPONENT_FIXED	cdef/defiComponent.h	44;"	d
DEFI_COMPONENT_FIXED	def/defiComponent.hpp	44;"	d
DEFI_COMPONENT_FIXED	include/defiComponent.h	44;"	d
DEFI_COMPONENT_FIXED	include/defiComponent.hpp	44;"	d
DEFI_COMPONENT_PLACED	cdef/defiComponent.h	43;"	d
DEFI_COMPONENT_PLACED	def/defiComponent.hpp	43;"	d
DEFI_COMPONENT_PLACED	include/defiComponent.h	43;"	d
DEFI_COMPONENT_PLACED	include/defiComponent.hpp	43;"	d
DEFI_COMPONENT_UNPLACED	cdef/defiComponent.h	42;"	d
DEFI_COMPONENT_UNPLACED	def/defiComponent.hpp	42;"	d
DEFI_COMPONENT_UNPLACED	include/defiComponent.h	42;"	d
DEFI_COMPONENT_UNPLACED	include/defiComponent.hpp	42;"	d
DEFI_CONTEXT_LINE_NUMBER_FUNCTION	def/defrReader.hpp	/^typedef void (*DEFI_CONTEXT_LINE_NUMBER_FUNCTION)  (defiUserData userData, int);$/;"	t
DEFI_CONTEXT_LINE_NUMBER_FUNCTION	include/defrReader.hpp	/^typedef void (*DEFI_CONTEXT_LINE_NUMBER_FUNCTION)  (defiUserData userData, int);$/;"	t
DEFI_CONTEXT_LOG_FUNCTION	def/defrReader.hpp	/^    typedef void (*DEFI_CONTEXT_LOG_FUNCTION) (defiUserData userData, const char*);$/;"	t
DEFI_CONTEXT_LOG_FUNCTION	include/defrReader.hpp	/^    typedef void (*DEFI_CONTEXT_LOG_FUNCTION) (defiUserData userData, const char*);$/;"	t
DEFI_CONTEXT_LONG_LINE_NUMBER_FUNCTION	def/defrReader.hpp	/^typedef void (*DEFI_CONTEXT_LONG_LINE_NUMBER_FUNCTION)  (defiUserData userData, long long);$/;"	t
DEFI_CONTEXT_LONG_LINE_NUMBER_FUNCTION	include/defrReader.hpp	/^typedef void (*DEFI_CONTEXT_LONG_LINE_NUMBER_FUNCTION)  (defiUserData userData, long long);$/;"	t
DEFI_CONTEXT_WARNING_LOG_FUNCTION	def/defrReader.hpp	/^    typedef void (*DEFI_CONTEXT_WARNING_LOG_FUNCTION) (defiUserData userData, const char*);$/;"	t
DEFI_CONTEXT_WARNING_LOG_FUNCTION	include/defrReader.hpp	/^    typedef void (*DEFI_CONTEXT_WARNING_LOG_FUNCTION) (defiUserData userData, const char*);$/;"	t
DEFI_DEFS_H	def/defiDefs.hpp	33;"	d
DEFI_DEFS_H	include/defiDefs.hpp	33;"	d
DEFI_FREE_FUNCTION	cdef/defrReader.h	/^typedef void (*DEFI_FREE_FUNCTION) (void *);$/;"	t
DEFI_FREE_FUNCTION	def/defrReader.hpp	/^typedef void (*DEFI_FREE_FUNCTION) (void *);$/;"	t
DEFI_FREE_FUNCTION	include/defrReader.h	/^typedef void (*DEFI_FREE_FUNCTION) (void *);$/;"	t
DEFI_FREE_FUNCTION	include/defrReader.hpp	/^typedef void (*DEFI_FREE_FUNCTION) (void *);$/;"	t
DEFI_LINE_NUMBER_FUNCTION	cdef/defrReader.h	/^typedef void (*DEFI_LINE_NUMBER_FUNCTION)  (int);$/;"	t
DEFI_LINE_NUMBER_FUNCTION	def/defrReader.hpp	/^typedef void (*DEFI_LINE_NUMBER_FUNCTION)  (int);$/;"	t
DEFI_LINE_NUMBER_FUNCTION	include/defrReader.h	/^typedef void (*DEFI_LINE_NUMBER_FUNCTION)  (int);$/;"	t
DEFI_LINE_NUMBER_FUNCTION	include/defrReader.hpp	/^typedef void (*DEFI_LINE_NUMBER_FUNCTION)  (int);$/;"	t
DEFI_LOG_FUNCTION	cdef/defrReader.h	/^    typedef void (*DEFI_LOG_FUNCTION) (const char*);$/;"	t
DEFI_LOG_FUNCTION	cdef/defwWriterCalls.h	/^    typedef void (*DEFI_LOG_FUNCTION) (const char*);$/;"	t
DEFI_LOG_FUNCTION	def/defrReader.hpp	/^    typedef void (*DEFI_LOG_FUNCTION) (const char*);$/;"	t
DEFI_LOG_FUNCTION	def/defwWriterCalls.hpp	/^    typedef void (*DEFI_LOG_FUNCTION) (const char*);$/;"	t
DEFI_LOG_FUNCTION	include/defrReader.h	/^    typedef void (*DEFI_LOG_FUNCTION) (const char*);$/;"	t
DEFI_LOG_FUNCTION	include/defrReader.hpp	/^    typedef void (*DEFI_LOG_FUNCTION) (const char*);$/;"	t
DEFI_LOG_FUNCTION	include/defwWriterCalls.h	/^    typedef void (*DEFI_LOG_FUNCTION) (const char*);$/;"	t
DEFI_LOG_FUNCTION	include/defwWriterCalls.hpp	/^    typedef void (*DEFI_LOG_FUNCTION) (const char*);$/;"	t
DEFI_LONG_LINE_NUMBER_FUNCTION	cdef/defrReader.h	/^typedef void (*DEFI_LONG_LINE_NUMBER_FUNCTION)  (long long);$/;"	t
DEFI_LONG_LINE_NUMBER_FUNCTION	def/defrReader.hpp	/^typedef void (*DEFI_LONG_LINE_NUMBER_FUNCTION)  (long long);$/;"	t
DEFI_LONG_LINE_NUMBER_FUNCTION	include/defrReader.h	/^typedef void (*DEFI_LONG_LINE_NUMBER_FUNCTION)  (long long);$/;"	t
DEFI_LONG_LINE_NUMBER_FUNCTION	include/defrReader.hpp	/^typedef void (*DEFI_LONG_LINE_NUMBER_FUNCTION)  (long long);$/;"	t
DEFI_MAGIC_COMMENT_FOUND_FUNCTION	cdef/defrReader.h	/^typedef void (*DEFI_MAGIC_COMMENT_FOUND_FUNCTION) ();$/;"	t
DEFI_MAGIC_COMMENT_FOUND_FUNCTION	def/defrReader.hpp	/^typedef void (*DEFI_MAGIC_COMMENT_FOUND_FUNCTION) ();$/;"	t
DEFI_MAGIC_COMMENT_FOUND_FUNCTION	include/defrReader.h	/^typedef void (*DEFI_MAGIC_COMMENT_FOUND_FUNCTION) ();$/;"	t
DEFI_MAGIC_COMMENT_FOUND_FUNCTION	include/defrReader.hpp	/^typedef void (*DEFI_MAGIC_COMMENT_FOUND_FUNCTION) ();$/;"	t
DEFI_MALLOC_FUNCTION	cdef/defrReader.h	/^typedef void* (*DEFI_MALLOC_FUNCTION) (size_t);$/;"	t
DEFI_MALLOC_FUNCTION	def/defrReader.hpp	/^typedef void* (*DEFI_MALLOC_FUNCTION) (size_t);$/;"	t
DEFI_MALLOC_FUNCTION	include/defrReader.h	/^typedef void* (*DEFI_MALLOC_FUNCTION) (size_t);$/;"	t
DEFI_MALLOC_FUNCTION	include/defrReader.hpp	/^typedef void* (*DEFI_MALLOC_FUNCTION) (size_t);$/;"	t
DEFI_READ_FUNCTION	cdef/defrReader.h	/^typedef size_t (*DEFI_READ_FUNCTION)  (FILE*, char*, size_t);$/;"	t
DEFI_READ_FUNCTION	def/defrReader.hpp	/^typedef size_t (*DEFI_READ_FUNCTION)  (FILE*, char*, size_t);$/;"	t
DEFI_READ_FUNCTION	include/defrReader.h	/^typedef size_t (*DEFI_READ_FUNCTION)  (FILE*, char*, size_t);$/;"	t
DEFI_READ_FUNCTION	include/defrReader.hpp	/^typedef size_t (*DEFI_READ_FUNCTION)  (FILE*, char*, size_t);$/;"	t
DEFI_REALLOC_FUNCTION	cdef/defrReader.h	/^typedef void* (*DEFI_REALLOC_FUNCTION) (void*, size_t);$/;"	t
DEFI_REALLOC_FUNCTION	def/defrReader.hpp	/^typedef void* (*DEFI_REALLOC_FUNCTION) (void*, size_t);$/;"	t
DEFI_REALLOC_FUNCTION	include/defrReader.h	/^typedef void* (*DEFI_REALLOC_FUNCTION) (void*, size_t);$/;"	t
DEFI_REALLOC_FUNCTION	include/defrReader.hpp	/^typedef void* (*DEFI_REALLOC_FUNCTION) (void*, size_t);$/;"	t
DEFI_USER_H	def/defiUser.hpp	41;"	d
DEFI_USER_H	include/defiUser.hpp	41;"	d
DEFI_WARNING_LOG_FUNCTION	cdef/defrReader.h	/^    typedef void (*DEFI_WARNING_LOG_FUNCTION) (const char*);$/;"	t
DEFI_WARNING_LOG_FUNCTION	cdef/defwWriterCalls.h	/^    typedef void (*DEFI_WARNING_LOG_FUNCTION)(const char*);$/;"	t
DEFI_WARNING_LOG_FUNCTION	def/defrReader.hpp	/^    typedef void (*DEFI_WARNING_LOG_FUNCTION) (const char*);$/;"	t
DEFI_WARNING_LOG_FUNCTION	def/defwWriterCalls.hpp	/^    typedef void (*DEFI_WARNING_LOG_FUNCTION)(const char*);$/;"	t
DEFI_WARNING_LOG_FUNCTION	include/defrReader.h	/^    typedef void (*DEFI_WARNING_LOG_FUNCTION) (const char*);$/;"	t
DEFI_WARNING_LOG_FUNCTION	include/defrReader.hpp	/^    typedef void (*DEFI_WARNING_LOG_FUNCTION) (const char*);$/;"	t
DEFI_WARNING_LOG_FUNCTION	include/defwWriterCalls.h	/^    typedef void (*DEFI_WARNING_LOG_FUNCTION)(const char*);$/;"	t
DEFI_WARNING_LOG_FUNCTION	include/defwWriterCalls.hpp	/^    typedef void (*DEFI_WARNING_LOG_FUNCTION)(const char*);$/;"	t
DEFI_WRITER_H	def/defwWriterCalls.hpp	31;"	d
DEFI_WRITER_H	include/defwWriterCalls.hpp	31;"	d
DEFRCALLBACKS_H	def/defrCallBacks.hpp	31;"	d
DEFRCALLBACKS_H	include/defrCallBacks.hpp	31;"	d
DEFRREADER_H	def/defrReader.hpp	31;"	d
DEFRREADER_H	include/defrReader.hpp	31;"	d
DEFW_ALREADY_DEFINED	cdef/defwWriter.h	45;"	d
DEFW_ALREADY_DEFINED	def/defwWriter.hpp	47;"	d
DEFW_ALREADY_DEFINED	include/defwWriter.h	45;"	d
DEFW_ALREADY_DEFINED	include/defwWriter.hpp	47;"	d
DEFW_ARRAY	def/defwWriter.cpp	60;"	d	file:
DEFW_BAD_DATA	cdef/defwWriter.h	44;"	d
DEFW_BAD_DATA	def/defwWriter.hpp	46;"	d
DEFW_BAD_DATA	include/defwWriter.h	44;"	d
DEFW_BAD_DATA	include/defwWriter.hpp	46;"	d
DEFW_BAD_ORDER	cdef/defwWriter.h	43;"	d
DEFW_BAD_ORDER	def/defwWriter.hpp	45;"	d
DEFW_BAD_ORDER	include/defwWriter.h	43;"	d
DEFW_BAD_ORDER	include/defwWriter.hpp	45;"	d
DEFW_BEGINEXT	def/defwWriter.cpp	149;"	d	file:
DEFW_BEGINEXT_END	def/defwWriter.cpp	150;"	d	file:
DEFW_BEGINEXT_START	def/defwWriter.cpp	148;"	d	file:
DEFW_BLOCKAGE_END	def/defwWriter.cpp	100;"	d	file:
DEFW_BLOCKAGE_LAYER	def/defwWriter.cpp	96;"	d	file:
DEFW_BLOCKAGE_MASK	def/defwWriter.cpp	153;"	d	file:
DEFW_BLOCKAGE_PLACE	def/defwWriter.cpp	97;"	d	file:
DEFW_BLOCKAGE_POLYGON	def/defwWriter.cpp	99;"	d	file:
DEFW_BLOCKAGE_RECT	def/defwWriter.cpp	98;"	d	file:
DEFW_BLOCKAGE_START	def/defwWriter.cpp	95;"	d	file:
DEFW_BUSBIT	def/defwWriter.cpp	57;"	d	file:
DEFW_CANNOTOCCUPY	def/defwWriter.cpp	75;"	d	file:
DEFW_CANPLACE	def/defwWriter.cpp	74;"	d	file:
DEFW_CASESENSITIVE	def/defwWriter.cpp	55;"	d	file:
DEFW_COMPONENT	def/defwWriter.cpp	86;"	d	file:
DEFW_COMPONENT_END	def/defwWriter.cpp	87;"	d	file:
DEFW_COMPONENT_MASKSHIFTLAYERS	def/defwWriter.cpp	84;"	d	file:
DEFW_COMPONENT_START	def/defwWriter.cpp	85;"	d	file:
DEFW_DEFAULTCAP	def/defwWriter.cpp	72;"	d	file:
DEFW_DEFAULTCAP_END	def/defwWriter.cpp	73;"	d	file:
DEFW_DEFAULTCAP_START	def/defwWriter.cpp	71;"	d	file:
DEFW_DESIGN	def/defwWriter.cpp	58;"	d	file:
DEFW_DIE_AREA	def/defwWriter.cpp	67;"	d	file:
DEFW_DIVIDER	def/defwWriter.cpp	56;"	d	file:
DEFW_DONE	def/defwWriter.cpp	157;"	d	file:
DEFW_END	def/defwWriter.cpp	155;"	d	file:
DEFW_FILL_END	def/defwWriter.cpp	141;"	d	file:
DEFW_FILL_LAYER	def/defwWriter.cpp	137;"	d	file:
DEFW_FILL_LAYERMASK	def/defwWriter.cpp	151;"	d	file:
DEFW_FILL_OPC	def/defwWriter.cpp	139;"	d	file:
DEFW_FILL_RECT	def/defwWriter.cpp	140;"	d	file:
DEFW_FILL_START	def/defwWriter.cpp	136;"	d	file:
DEFW_FILL_VIA	def/defwWriter.cpp	138;"	d	file:
DEFW_FILL_VIAMASK	def/defwWriter.cpp	152;"	d	file:
DEFW_FLOORPLAN	def/defwWriter.cpp	61;"	d	file:
DEFW_FPC	def/defwWriter.cpp	125;"	d	file:
DEFW_FPC_END	def/defwWriter.cpp	128;"	d	file:
DEFW_FPC_OPER	def/defwWriter.cpp	126;"	d	file:
DEFW_FPC_OPER_SUM	def/defwWriter.cpp	127;"	d	file:
DEFW_FPC_START	def/defwWriter.cpp	124;"	d	file:
DEFW_GCELL_GRID	def/defwWriter.cpp	70;"	d	file:
DEFW_GROUP	def/defwWriter.cpp	130;"	d	file:
DEFW_GROUP_END	def/defwWriter.cpp	131;"	d	file:
DEFW_GROUP_START	def/defwWriter.cpp	129;"	d	file:
DEFW_HISTORY	def/defwWriter.cpp	63;"	d	file:
DEFW_INIT	def/defwWriter.cpp	53;"	d	file:
DEFW_IOTIMING	def/defwWriter.cpp	117;"	d	file:
DEFW_IOTIMING_END	def/defwWriter.cpp	118;"	d	file:
DEFW_IOTIMING_START	def/defwWriter.cpp	116;"	d	file:
DEFW_NDR	def/defwWriter.cpp	143;"	d	file:
DEFW_NDR_END	def/defwWriter.cpp	144;"	d	file:
DEFW_NDR_START	def/defwWriter.cpp	142;"	d	file:
DEFW_NET	def/defwWriter.cpp	110;"	d	file:
DEFW_NET_END	def/defwWriter.cpp	113;"	d	file:
DEFW_NET_ENDNET	def/defwWriter.cpp	112;"	d	file:
DEFW_NET_OPTIONS	def/defwWriter.cpp	111;"	d	file:
DEFW_NET_START	def/defwWriter.cpp	109;"	d	file:
DEFW_NOSHIELD	def/defwWriter.cpp	115;"	d	file:
DEFW_OBSOLETE	cdef/defwWriter.h	47;"	d
DEFW_OBSOLETE	def/defwWriter.hpp	49;"	d
DEFW_OBSOLETE	include/defwWriter.h	47;"	d
DEFW_OBSOLETE	include/defwWriter.hpp	49;"	d
DEFW_OK	cdef/defwWriter.h	41;"	d
DEFW_OK	def/defwWriter.hpp	43;"	d
DEFW_OK	include/defwWriter.h	41;"	d
DEFW_OK	include/defwWriter.hpp	43;"	d
DEFW_PATH	def/defwWriter.cpp	107;"	d	file:
DEFW_PATH_START	def/defwWriter.cpp	106;"	d	file:
DEFW_PIN	def/defwWriter.cpp	89;"	d	file:
DEFW_PINPROP	def/defwWriter.cpp	93;"	d	file:
DEFW_PINPROP_END	def/defwWriter.cpp	94;"	d	file:
DEFW_PINPROP_START	def/defwWriter.cpp	92;"	d	file:
DEFW_PIN_END	def/defwWriter.cpp	91;"	d	file:
DEFW_PIN_PORT	def/defwWriter.cpp	90;"	d	file:
DEFW_PIN_START	def/defwWriter.cpp	88;"	d	file:
DEFW_PROP	def/defwWriter.cpp	65;"	d	file:
DEFW_PROP_END	def/defwWriter.cpp	66;"	d	file:
DEFW_PROP_START	def/defwWriter.cpp	64;"	d	file:
DEFW_REGION	def/defwWriter.cpp	82;"	d	file:
DEFW_REGION_END	def/defwWriter.cpp	83;"	d	file:
DEFW_REGION_START	def/defwWriter.cpp	81;"	d	file:
DEFW_ROW	def/defwWriter.cpp	68;"	d	file:
DEFW_SCANCHAIN	def/defwWriter.cpp	120;"	d	file:
DEFW_SCANCHAIN_END	def/defwWriter.cpp	123;"	d	file:
DEFW_SCANCHAIN_START	def/defwWriter.cpp	119;"	d	file:
DEFW_SCAN_FLOATING	def/defwWriter.cpp	121;"	d	file:
DEFW_SCAN_ORDERED	def/defwWriter.cpp	122;"	d	file:
DEFW_SHIELD	def/defwWriter.cpp	108;"	d	file:
DEFW_SLOT_END	def/defwWriter.cpp	135;"	d	file:
DEFW_SLOT_LAYER	def/defwWriter.cpp	133;"	d	file:
DEFW_SLOT_RECT	def/defwWriter.cpp	134;"	d	file:
DEFW_SLOT_START	def/defwWriter.cpp	132;"	d	file:
DEFW_SNET	def/defwWriter.cpp	102;"	d	file:
DEFW_SNET_END	def/defwWriter.cpp	105;"	d	file:
DEFW_SNET_ENDNET	def/defwWriter.cpp	104;"	d	file:
DEFW_SNET_OPTIONS	def/defwWriter.cpp	103;"	d	file:
DEFW_SNET_START	def/defwWriter.cpp	101;"	d	file:
DEFW_STYLES	def/defwWriter.cpp	146;"	d	file:
DEFW_STYLES_END	def/defwWriter.cpp	147;"	d	file:
DEFW_STYLES_START	def/defwWriter.cpp	145;"	d	file:
DEFW_SUBNET	def/defwWriter.cpp	114;"	d	file:
DEFW_TECHNOLOGY	def/defwWriter.cpp	59;"	d	file:
DEFW_TOO_MANY_STMS	cdef/defwWriter.h	48;"	d
DEFW_TOO_MANY_STMS	def/defwWriter.hpp	50;"	d
DEFW_TOO_MANY_STMS	include/defwWriter.h	48;"	d
DEFW_TOO_MANY_STMS	include/defwWriter.hpp	50;"	d
DEFW_TRACKS	def/defwWriter.cpp	69;"	d	file:
DEFW_UNINIT	def/defwWriter.cpp	52;"	d	file:
DEFW_UNINITIALIZED	cdef/defwWriter.h	42;"	d
DEFW_UNINITIALIZED	def/defwWriter.hpp	44;"	d
DEFW_UNINITIALIZED	include/defwWriter.h	42;"	d
DEFW_UNINITIALIZED	include/defwWriter.hpp	44;"	d
DEFW_UNITS	def/defwWriter.cpp	62;"	d	file:
DEFW_VERSION	def/defwWriter.cpp	54;"	d	file:
DEFW_VIA	def/defwWriter.cpp	77;"	d	file:
DEFW_VIAONE_END	def/defwWriter.cpp	79;"	d	file:
DEFW_VIAVIARULE	def/defwWriter.cpp	78;"	d	file:
DEFW_VIA_END	def/defwWriter.cpp	80;"	d	file:
DEFW_VIA_START	def/defwWriter.cpp	76;"	d	file:
DEFW_WRITER_H	def/defwWriter.hpp	31;"	d
DEFW_WRITER_H	include/defwWriter.hpp	31;"	d
DEFW_WRONG_VERSION	cdef/defwWriter.h	46;"	d
DEFW_WRONG_VERSION	def/defwWriter.hpp	48;"	d
DEFW_WRONG_VERSION	include/defwWriter.h	46;"	d
DEFW_WRONG_VERSION	include/defwWriter.hpp	48;"	d
DEF_BISON_SRCS	cdef/Makefile	/^DEF_BISON_SRCS  = def.y$/;"	m
DEF_BISON_SRCS	def/Makefile	/^DEF_BISON_SRCS  = def.y$/;"	m
DEF_DEBUG_IDS	def/defrSettings.hpp	39;"	d
DEF_DEBUG_IDS	include/defrSettings.hpp	39;"	d
DEF_INIT	def/defrReader.cpp	48;"	d	file:
DEF_MAX_INT	def/def.tab.cpp	80;"	d	file:
DEF_MSGS	cdef/defrReader.h	40;"	d
DEF_MSGS	def/defrReader.hpp	39;"	d
DEF_MSGS	include/defrReader.h	40;"	d
DEF_MSGS	include/defrReader.hpp	39;"	d
DEF_ORIENT_E	def/defiUtil.hpp	41;"	d
DEF_ORIENT_E	include/defiUtil.hpp	41;"	d
DEF_ORIENT_FE	def/defiUtil.hpp	45;"	d
DEF_ORIENT_FE	include/defiUtil.hpp	45;"	d
DEF_ORIENT_FN	def/defiUtil.hpp	42;"	d
DEF_ORIENT_FN	include/defiUtil.hpp	42;"	d
DEF_ORIENT_FS	def/defiUtil.hpp	44;"	d
DEF_ORIENT_FS	include/defiUtil.hpp	44;"	d
DEF_ORIENT_FW	def/defiUtil.hpp	43;"	d
DEF_ORIENT_FW	include/defiUtil.hpp	43;"	d
DEF_ORIENT_N	def/defiUtil.hpp	38;"	d
DEF_ORIENT_N	include/defiUtil.hpp	38;"	d
DEF_ORIENT_S	def/defiUtil.hpp	40;"	d
DEF_ORIENT_S	include/defiUtil.hpp	40;"	d
DEF_ORIENT_W	def/defiUtil.hpp	39;"	d
DEF_ORIENT_W	include/defiUtil.hpp	39;"	d
DEF_TABNAME	cdef/Makefile	/^DEF_TABNAME     = def$/;"	m
DEF_TABNAME	def/Makefile	/^DEF_TABNAME     = def$/;"	m
DEF_TABNAME	defzlib/Makefile	/^DEF_TABNAME     = defzlib$/;"	m
DIFFDEFRW_H	defdiff/diffDefRW.hpp	31;"	d
DIRNAME	cdefzlib/Makefile	/^DIRNAME = cdefzlib$/;"	m
Data	def/defiAlias.cpp	/^const char* defiAlias_itr::Data() {$/;"	f	class:defiAlias_itr
DefGetToken	def/def_keywords.cpp	/^defrData::DefGetToken(char **buffer, int *bufferSize)$/;"	f	class:defrData
DefGetTokenFromStack	def/def_keywords.cpp	/^defrData::DefGetTokenFromStack(char *s) {$/;"	f	class:defrData
DefaultCapCbk	def/defrCallBacks.hpp	/^    defrIntegerCbkFnType DefaultCapCbk;$/;"	m	class:defrCallbacks
DefaultCapCbk	include/defrCallBacks.hpp	/^    defrIntegerCbkFnType DefaultCapCbk;$/;"	m	class:defrCallbacks
DefaultCapWarnings	def/defrSettings.hpp	/^    int DefaultCapWarnings;$/;"	m	class:defrSettings
DefaultCapWarnings	include/defrSettings.hpp	/^    int DefaultCapWarnings;$/;"	m	class:defrSettings
DesignCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType DesignCbk;$/;"	m	class:defrCallbacks
DesignCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType DesignCbk;$/;"	m	class:defrCallbacks
DesignEndCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType DesignEndCbk;$/;"	m	class:defrCallbacks
DesignEndCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType DesignEndCbk;$/;"	m	class:defrCallbacks
DesignProp	def/defrSettings.hpp	/^    defiPropType    DesignProp;$/;"	m	class:defrSession
DesignProp	include/defrSettings.hpp	/^    defiPropType    DesignProp;$/;"	m	class:defrSession
Destroy	def/defiAlias.cpp	/^void defiAlias_itr::Destroy() {$/;"	f	class:defiAlias_itr
Destroy	def/defiAssertion.cpp	/^void defiAssertion::Destroy() {$/;"	f	class:defiAssertion
Destroy	def/defiBlockage.cpp	/^void defiBlockage::Destroy() {$/;"	f	class:defiBlockage
Destroy	def/defiComponent.cpp	/^void defiComponent::Destroy() {$/;"	f	class:defiComponent
Destroy	def/defiComponent.cpp	/^void defiComponentMaskShiftLayer::Destroy() {$/;"	f	class:defiComponentMaskShiftLayer
Destroy	def/defiFPC.cpp	/^void defiFPC::Destroy() {$/;"	f	class:defiFPC
Destroy	def/defiFill.cpp	/^void defiFill::Destroy() {$/;"	f	class:defiFill
Destroy	def/defiGroup.cpp	/^void defiGroup::Destroy() {$/;"	f	class:defiGroup
Destroy	def/defiIOTiming.cpp	/^void defiIOTiming::Destroy() {$/;"	f	class:defiIOTiming
Destroy	def/defiMisc.cpp	/^void defiGeometries::Destroy() {$/;"	f	class:defiGeometries
Destroy	def/defiMisc.cpp	/^void defiStyles::Destroy() {$/;"	f	class:defiStyles
Destroy	def/defiNet.cpp	/^void defiNet::Destroy() {$/;"	f	class:defiNet
Destroy	def/defiNet.cpp	/^void defiShield::Destroy() {$/;"	f	class:defiShield
Destroy	def/defiNet.cpp	/^void defiSubnet::Destroy() {$/;"	f	class:defiSubnet
Destroy	def/defiNet.cpp	/^void defiVpin::Destroy() {$/;"	f	class:defiVpin
Destroy	def/defiNet.cpp	/^void defiWire::Destroy() {$/;"	f	class:defiWire
Destroy	def/defiNonDefault.cpp	/^void defiNonDefault::Destroy() {$/;"	f	class:defiNonDefault
Destroy	def/defiPartition.cpp	/^void defiPartition::Destroy() {$/;"	f	class:defiPartition
Destroy	def/defiPath.cpp	/^void defiPath::Destroy() {$/;"	f	class:defiPath
Destroy	def/defiPinCap.cpp	/^void defiPin::Destroy() {$/;"	f	class:defiPin
Destroy	def/defiPinCap.cpp	/^void defiPinAntennaModel::Destroy() {$/;"	f	class:defiPinAntennaModel
Destroy	def/defiPinProp.cpp	/^void defiPinProp::Destroy() {$/;"	f	class:defiPinProp
Destroy	def/defiProp.cpp	/^void defiProp::Destroy() {$/;"	f	class:defiProp
Destroy	def/defiPropType.cpp	/^void defiPropType::Destroy() {$/;"	f	class:defiPropType
Destroy	def/defiRegion.cpp	/^void defiRegion::Destroy() {$/;"	f	class:defiRegion
Destroy	def/defiRowTrack.cpp	/^void defiGcellGrid::Destroy() {$/;"	f	class:defiGcellGrid
Destroy	def/defiRowTrack.cpp	/^void defiRow::Destroy() {$/;"	f	class:defiRow
Destroy	def/defiRowTrack.cpp	/^void defiTrack::Destroy() {$/;"	f	class:defiTrack
Destroy	def/defiScanchain.cpp	/^void defiOrdered::Destroy() {$/;"	f	class:defiOrdered
Destroy	def/defiScanchain.cpp	/^void defiScanchain::Destroy() {$/;"	f	class:defiScanchain
Destroy	def/defiSite.cpp	/^void defiBox::Destroy() {$/;"	f	class:defiBox
Destroy	def/defiSite.cpp	/^void defiSite::Destroy() {$/;"	f	class:defiSite
Destroy	def/defiSlot.cpp	/^void defiSlot::Destroy() {$/;"	f	class:defiSlot
Destroy	def/defiTimingDisable.cpp	/^void defiTimingDisable::Destroy() {$/;"	f	class:defiTimingDisable
Destroy	def/defiVia.cpp	/^void defiVia::Destroy() {$/;"	f	class:defiVia
DieArea	def/defrData.hpp	/^    defiBox DieArea;$/;"	m	class:defrData
DieArea	include/defrData.hpp	/^    defiBox DieArea;$/;"	m	class:defrData
DieAreaCbk	def/defrCallBacks.hpp	/^    defrBoxCbkFnType DieAreaCbk;$/;"	m	class:defrCallbacks
DieAreaCbk	include/defrCallBacks.hpp	/^    defrBoxCbkFnType DieAreaCbk;$/;"	m	class:defrCallbacks
DisPropStrProcess	def/defrSettings.hpp	/^    int DisPropStrProcess; $/;"	m	class:defrSettings
DisPropStrProcess	include/defrSettings.hpp	/^    int DisPropStrProcess; $/;"	m	class:defrSettings
DividerCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType DividerCbk;$/;"	m	class:defrCallbacks
DividerCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType DividerCbk;$/;"	m	class:defrCallbacks
EEQ	def/defiComponent.cpp	/^const char* defiComponent::EEQ() const {$/;"	f	class:defiComponent
EEQSize_	def/defiComponent.hpp	/^  int EEQSize_;         \/\/ allocated size of eeq$/;"	m	class:defiComponent
EEQSize_	include/defiComponent.hpp	/^  int EEQSize_;         \/\/ allocated size of eeq$/;"	m	class:defiComponent
EEQ_	def/defiComponent.hpp	/^  char* EEQ_;$/;"	m	class:defiComponent
EEQ_	include/defiComponent.hpp	/^  char* EEQ_;$/;"	m	class:defiComponent
END_LEFDEF_PARSER_NAMESPACE	def/defiKRDefs.hpp	34;"	d
END_LEFDEF_PARSER_NAMESPACE	include/defiKRDefs.hpp	34;"	d
EXIT_SUCCESS	def/def.tab.cpp	585;"	d	file:
EXIT_SUCCESS	def/def.tab.cpp	613;"	d	file:
EXTERN	cdef/defiTypedefs.h	38;"	d
EXTERN	cdef/xdefiAssertion.cpp	34;"	d	file:
EXTERN	cdef/xdefiBlockage.cpp	34;"	d	file:
EXTERN	cdef/xdefiComponent.cpp	34;"	d	file:
EXTERN	cdef/xdefiDebug.cpp	34;"	d	file:
EXTERN	cdef/xdefiFPC.cpp	34;"	d	file:
EXTERN	cdef/xdefiFill.cpp	34;"	d	file:
EXTERN	cdef/xdefiGroup.cpp	34;"	d	file:
EXTERN	cdef/xdefiIOTiming.cpp	34;"	d	file:
EXTERN	cdef/xdefiMisc.cpp	34;"	d	file:
EXTERN	cdef/xdefiNet.cpp	34;"	d	file:
EXTERN	cdef/xdefiNonDefault.cpp	34;"	d	file:
EXTERN	cdef/xdefiPartition.cpp	34;"	d	file:
EXTERN	cdef/xdefiPath.cpp	34;"	d	file:
EXTERN	cdef/xdefiPinCap.cpp	34;"	d	file:
EXTERN	cdef/xdefiPinProp.cpp	34;"	d	file:
EXTERN	cdef/xdefiProp.cpp	34;"	d	file:
EXTERN	cdef/xdefiPropType.cpp	34;"	d	file:
EXTERN	cdef/xdefiRegion.cpp	34;"	d	file:
EXTERN	cdef/xdefiRowTrack.cpp	34;"	d	file:
EXTERN	cdef/xdefiScanchain.cpp	34;"	d	file:
EXTERN	cdef/xdefiSite.cpp	34;"	d	file:
EXTERN	cdef/xdefiSlot.cpp	34;"	d	file:
EXTERN	cdef/xdefiTimingDisable.cpp	34;"	d	file:
EXTERN	cdef/xdefiVia.cpp	34;"	d	file:
EXTERN	cdef/xdefrReader.cpp	34;"	d	file:
EXTERN	cdef/xdefwWriter.cpp	34;"	d	file:
EXTERN	cdef/xdefwWriterCalls.cpp	34;"	d	file:
EXTERN	include/defiTypedefs.h	38;"	d
ErrorLogFunction	def/defrSettings.hpp	/^    DEFI_LOG_FUNCTION ErrorLogFunction;$/;"	m	class:defrSettings
ErrorLogFunction	include/defrSettings.hpp	/^    DEFI_LOG_FUNCTION ErrorLogFunction;$/;"	m	class:defrSettings
ExtensionCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType ExtensionCbk;$/;"	m	class:defrCallbacks
ExtensionCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType ExtensionCbk;$/;"	m	class:defrCallbacks
FALSE	def/defiDefs.hpp	49;"	d
FALSE	include/defiDefs.hpp	49;"	d
FIXED	def/def.tab.cpp	137;"	d	file:
FPC	def/defrData.hpp	/^    defiFPC FPC;$/;"	m	class:defrData
FPC	include/defrData.hpp	/^    defiFPC FPC;$/;"	m	class:defrData
FPCCbk	def/defrCallBacks.hpp	/^    defrFPCCbkFnType FPCCbk;$/;"	m	class:defrCallbacks
FPCCbk	include/defrCallBacks.hpp	/^    defrFPCCbkFnType FPCCbk;$/;"	m	class:defrCallbacks
FPCEndCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType FPCEndCbk;$/;"	m	class:defrCallbacks
FPCEndCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType FPCEndCbk;$/;"	m	class:defrCallbacks
FPCStartCbk	def/defrCallBacks.hpp	/^    defrIntegerCbkFnType FPCStartCbk;$/;"	m	class:defrCallbacks
FPCStartCbk	include/defrCallBacks.hpp	/^    defrIntegerCbkFnType FPCStartCbk;$/;"	m	class:defrCallbacks
File	def/defrData.hpp	/^    FILE* File;$/;"	m	class:defrData
File	include/defrData.hpp	/^    FILE* File;$/;"	m	class:defrData
FileName	def/defrSettings.hpp	/^    char*           FileName;$/;"	m	class:defrSession
FileName	include/defrSettings.hpp	/^    char*           FileName;$/;"	m	class:defrSession
Fill	def/defrData.hpp	/^    defiFill Fill;$/;"	m	class:defrData
Fill	include/defrData.hpp	/^    defiFill Fill;$/;"	m	class:defrData
FillCbk	def/defrCallBacks.hpp	/^    defrFillCbkFnType FillCbk;$/;"	m	class:defrCallbacks
FillCbk	include/defrCallBacks.hpp	/^    defrFillCbkFnType FillCbk;$/;"	m	class:defrCallbacks
FillEndCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType FillEndCbk;$/;"	m	class:defrCallbacks
FillEndCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType FillEndCbk;$/;"	m	class:defrCallbacks
FillStartCbk	def/defrCallBacks.hpp	/^    defrIntegerCbkFnType FillStartCbk;$/;"	m	class:defrCallbacks
FillStartCbk	include/defrCallBacks.hpp	/^    defrIntegerCbkFnType FillStartCbk;$/;"	m	class:defrCallbacks
FillWarnings	def/defrSettings.hpp	/^    int FillWarnings;$/;"	m	class:defrSettings
FillWarnings	include/defrSettings.hpp	/^    int FillWarnings;$/;"	m	class:defrSettings
FloorPlanNameCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType FloorPlanNameCbk;$/;"	m	class:defrCallbacks
FloorPlanNameCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType FloorPlanNameCbk;$/;"	m	class:defrCallbacks
ForiSize_	def/defiComponent.hpp	/^  int ForiSize_;        \/\/ allocate size of foreign ori$/;"	m	class:defiComponent
ForiSize_	include/defiComponent.hpp	/^  int ForiSize_;        \/\/ allocate size of foreign ori$/;"	m	class:defiComponent
Fori_	def/defiComponent.hpp	/^  int Fori_;            \/\/ foreign ori$/;"	m	class:defiComponent
Fori_	include/defiComponent.hpp	/^  int Fori_;            \/\/ foreign ori$/;"	m	class:defiComponent
FreeFunction	def/defrSettings.hpp	/^    DEFI_FREE_FUNCTION FreeFunction;$/;"	m	class:defrSettings
FreeFunction	include/defrSettings.hpp	/^    DEFI_FREE_FUNCTION FreeFunction;$/;"	m	class:defrSettings
Fx_	def/defiComponent.hpp	/^  int Fx_, Fy_;         \/\/ foreign loc$/;"	m	class:defiComponent
Fx_	include/defiComponent.hpp	/^  int Fx_, Fy_;         \/\/ foreign loc$/;"	m	class:defiComponent
Fy_	def/defiComponent.hpp	/^  int Fx_, Fy_;         \/\/ foreign loc$/;"	m	class:defiComponent
Fy_	include/defiComponent.hpp	/^  int Fx_, Fy_;         \/\/ foreign loc$/;"	m	class:defiComponent
GETC	def/def_keywords.cpp	/^ defrData::GETC() {$/;"	f	class:defrData
GcellGrid	def/defrData.hpp	/^    defiGcellGrid GcellGrid;$/;"	m	class:defrData
GcellGrid	include/defrData.hpp	/^    defiGcellGrid GcellGrid;$/;"	m	class:defrData
GcellGridCbk	def/defrCallBacks.hpp	/^    defrGcellGridCbkFnType GcellGridCbk;$/;"	m	class:defrCallbacks
GcellGridCbk	include/defrCallBacks.hpp	/^    defrGcellGridCbkFnType GcellGridCbk;$/;"	m	class:defrCallbacks
GcellGridWarnings	def/defrSettings.hpp	/^    int GcellGridWarnings;$/;"	m	class:defrSettings
GcellGridWarnings	include/defrSettings.hpp	/^    int GcellGridWarnings;$/;"	m	class:defrSettings
Geometries	def/defrData.hpp	/^    defiGeometries Geometries;$/;"	m	class:defrData
Geometries	include/defrData.hpp	/^    defiGeometries Geometries;$/;"	m	class:defrData
Group	def/defrData.hpp	/^    defiGroup Group;$/;"	m	class:defrData
Group	include/defrData.hpp	/^    defiGroup Group;$/;"	m	class:defrData
GroupCbk	def/defrCallBacks.hpp	/^    defrGroupCbkFnType GroupCbk;$/;"	m	class:defrCallbacks
GroupCbk	include/defrCallBacks.hpp	/^    defrGroupCbkFnType GroupCbk;$/;"	m	class:defrCallbacks
GroupExtCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType GroupExtCbk;$/;"	m	class:defrCallbacks
GroupExtCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType GroupExtCbk;$/;"	m	class:defrCallbacks
GroupMemberCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType GroupMemberCbk;$/;"	m	class:defrCallbacks
GroupMemberCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType GroupMemberCbk;$/;"	m	class:defrCallbacks
GroupNameCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType GroupNameCbk;$/;"	m	class:defrCallbacks
GroupNameCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType GroupNameCbk;$/;"	m	class:defrCallbacks
GroupProp	def/defrSettings.hpp	/^    defiPropType    GroupProp;$/;"	m	class:defrSession
GroupProp	include/defrSettings.hpp	/^    defiPropType    GroupProp;$/;"	m	class:defrSession
GroupsEndCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType GroupsEndCbk;$/;"	m	class:defrCallbacks
GroupsEndCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType GroupsEndCbk;$/;"	m	class:defrCallbacks
GroupsStartCbk	def/defrCallBacks.hpp	/^    defrIntegerCbkFnType GroupsStartCbk;$/;"	m	class:defrCallbacks
GroupsStartCbk	include/defrCallBacks.hpp	/^    defrIntegerCbkFnType GroupsStartCbk;$/;"	m	class:defrCallbacks
HEADERS	def/Makefile	/^HEADERS =	 \\$/;"	m
HEADERS	defdiff/Makefile	/^HEADERS =	\\$/;"	m
HEADERS	defrw/Makefile	/^HEADERS =$/;"	m
HEADERS	defwrite/Makefile	/^HEADERS =$/;"	m
HistoryCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType HistoryCbk;$/;"	m	class:defrCallbacks
HistoryCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType HistoryCbk;$/;"	m	class:defrCallbacks
History_text	def/defrData.hpp	/^    std::vector<char>  History_text; $/;"	m	class:defrData
History_text	include/defrData.hpp	/^    std::vector<char>  History_text; $/;"	m	class:defrData
INSTALLED_BIN	template.mk	/^INSTALLED_BIN = ..\/bin\/$(BINTARGET)$/;"	m
INSTALLED_HDRS	template.mk	/^INSTALLED_HDRS = $(PUBLIC_HDRS:%=..\/include\/%)$/;"	m
INSTALLED_LIB	template.mk	/^INSTALLED_LIB = ..\/lib\/$(LIBTARGET)$/;"	m
IN_BUF_SIZE	def/defrData.hpp	44;"	d
IN_BUF_SIZE	include/defrData.hpp	44;"	d
IOTiming	def/defrData.hpp	/^    defiIOTiming IOTiming;$/;"	m	class:defrData
IOTiming	include/defrData.hpp	/^    defiIOTiming IOTiming;$/;"	m	class:defrData
IOTimingCbk	def/defrCallBacks.hpp	/^    defrIOTimingCbkFnType IOTimingCbk;$/;"	m	class:defrCallbacks
IOTimingCbk	include/defrCallBacks.hpp	/^    defrIOTimingCbkFnType IOTimingCbk;$/;"	m	class:defrCallbacks
IOTimingWarnings	def/defrSettings.hpp	/^    int IOTimingWarnings;$/;"	m	class:defrSettings
IOTimingWarnings	include/defrSettings.hpp	/^    int IOTimingWarnings;$/;"	m	class:defrSettings
IOTimingsEndCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType IOTimingsEndCbk;$/;"	m	class:defrCallbacks
IOTimingsEndCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType IOTimingsEndCbk;$/;"	m	class:defrCallbacks
IOTimingsStartCbk	def/defrCallBacks.hpp	/^    defrIntegerCbkFnType IOTimingsStartCbk;$/;"	m	class:defrCallbacks
IOTimingsStartCbk	include/defrCallBacks.hpp	/^    defrIntegerCbkFnType IOTimingsStartCbk;$/;"	m	class:defrCallbacks
IdAndName	def/defiComponent.cpp	/^void defiComponent::IdAndName(const char* id, const char* name) {$/;"	f	class:defiComponent
IncCurPos	def/def_keywords.cpp	/^defrData::IncCurPos(char **curPos, char **buffer, int *bufferSize)$/;"	f	class:defrData
Init	def/defiAlias.cpp	/^void defiAlias_itr::Init() {$/;"	f	class:defiAlias_itr
Init	def/defiAssertion.cpp	/^void defiAssertion::Init() {$/;"	f	class:defiAssertion
Init	def/defiBlockage.cpp	/^void defiBlockage::Init() {$/;"	f	class:defiBlockage
Init	def/defiComponent.cpp	/^void defiComponent::Init() {$/;"	f	class:defiComponent
Init	def/defiComponent.cpp	/^void defiComponentMaskShiftLayer::Init() {$/;"	f	class:defiComponentMaskShiftLayer
Init	def/defiFPC.cpp	/^void defiFPC::Init() {$/;"	f	class:defiFPC
Init	def/defiFill.cpp	/^void defiFill::Init() {$/;"	f	class:defiFill
Init	def/defiGroup.cpp	/^void defiGroup::Init() {$/;"	f	class:defiGroup
Init	def/defiIOTiming.cpp	/^void defiIOTiming::Init() {$/;"	f	class:defiIOTiming
Init	def/defiMisc.cpp	/^void defiGeometries::Init() {$/;"	f	class:defiGeometries
Init	def/defiMisc.cpp	/^void defiStyles::Init() {$/;"	f	class:defiStyles
Init	def/defiNet.cpp	/^void defiNet::Init() {$/;"	f	class:defiNet
Init	def/defiNet.cpp	/^void defiShield::Init(const char* name) {$/;"	f	class:defiShield
Init	def/defiNet.cpp	/^void defiSubnet::Init() {$/;"	f	class:defiSubnet
Init	def/defiNet.cpp	/^void defiVpin::Init(const char* name) {$/;"	f	class:defiVpin
Init	def/defiNet.cpp	/^void defiWire::Init(const char* type, const char* wireShieldName) {$/;"	f	class:defiWire
Init	def/defiNonDefault.cpp	/^void defiNonDefault::Init() { $/;"	f	class:defiNonDefault
Init	def/defiPartition.cpp	/^void defiPartition::Init() {$/;"	f	class:defiPartition
Init	def/defiPath.cpp	/^void defiPath::Init() {$/;"	f	class:defiPath
Init	def/defiPinCap.cpp	/^void defiPin::Init() {$/;"	f	class:defiPin
Init	def/defiPinCap.cpp	/^void defiPinAntennaModel::Init() {$/;"	f	class:defiPinAntennaModel
Init	def/defiPinCap.cpp	/^void defiPinPort::Init() {$/;"	f	class:defiPinPort
Init	def/defiPinProp.cpp	/^void defiPinProp::Init() {$/;"	f	class:defiPinProp
Init	def/defiProp.cpp	/^void defiProp::Init() {$/;"	f	class:defiProp
Init	def/defiPropType.cpp	/^void defiPropType::Init() {$/;"	f	class:defiPropType
Init	def/defiRegion.cpp	/^void defiRegion::Init() {$/;"	f	class:defiRegion
Init	def/defiRowTrack.cpp	/^void defiGcellGrid::Init() {$/;"	f	class:defiGcellGrid
Init	def/defiRowTrack.cpp	/^void defiRow::Init() {$/;"	f	class:defiRow
Init	def/defiRowTrack.cpp	/^void defiTrack::Init() {$/;"	f	class:defiTrack
Init	def/defiScanchain.cpp	/^void defiOrdered::Init() {$/;"	f	class:defiOrdered
Init	def/defiScanchain.cpp	/^void defiScanchain::Init() {$/;"	f	class:defiScanchain
Init	def/defiSite.cpp	/^void defiBox::Init() {$/;"	f	class:defiBox
Init	def/defiSite.cpp	/^void defiSite::Init() {$/;"	f	class:defiSite
Init	def/defiSlot.cpp	/^void defiSlot::Init() {$/;"	f	class:defiSlot
Init	def/defiTimingDisable.cpp	/^void defiTimingDisable::Init() {$/;"	f	class:defiTimingDisable
Init	def/defiVia.cpp	/^void defiVia::Init() {$/;"	f	class:defiVia
IoTimingsExtCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType IoTimingsExtCbk;$/;"	m	class:defrCallbacks
IoTimingsExtCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType IoTimingsExtCbk;$/;"	m	class:defrCallbacks
K_ALIGN	def/def.tab.cpp	/^    K_ALIGN = 405,$/;"	e	enum:yytokentype	file:
K_ALIGN	def/def.tab.h	/^    K_ALIGN = 405,$/;"	e	enum:yytokentype
K_ANALOG	def/def.tab.cpp	/^    K_ANALOG = 457,$/;"	e	enum:yytokentype	file:
K_ANALOG	def/def.tab.h	/^    K_ANALOG = 457,$/;"	e	enum:yytokentype
K_AND	def/def.tab.cpp	/^    K_AND = 397,$/;"	e	enum:yytokentype	file:
K_AND	def/def.tab.h	/^    K_AND = 397,$/;"	e	enum:yytokentype
K_ANTENNAMODEL	def/def.tab.cpp	/^    K_ANTENNAMODEL = 489,$/;"	e	enum:yytokentype	file:
K_ANTENNAMODEL	def/def.tab.h	/^    K_ANTENNAMODEL = 489,$/;"	e	enum:yytokentype
K_ANTENNAPINDIFFAREA	def/def.tab.cpp	/^    K_ANTENNAPINDIFFAREA = 447,$/;"	e	enum:yytokentype	file:
K_ANTENNAPINDIFFAREA	def/def.tab.h	/^    K_ANTENNAPINDIFFAREA = 447,$/;"	e	enum:yytokentype
K_ANTENNAPINGATEAREA	def/def.tab.cpp	/^    K_ANTENNAPINGATEAREA = 446,$/;"	e	enum:yytokentype	file:
K_ANTENNAPINGATEAREA	def/def.tab.h	/^    K_ANTENNAPINGATEAREA = 446,$/;"	e	enum:yytokentype
K_ANTENNAPINMAXAREACAR	def/def.tab.cpp	/^    K_ANTENNAPINMAXAREACAR = 448,$/;"	e	enum:yytokentype	file:
K_ANTENNAPINMAXAREACAR	def/def.tab.h	/^    K_ANTENNAPINMAXAREACAR = 448,$/;"	e	enum:yytokentype
K_ANTENNAPINMAXCUTCAR	def/def.tab.cpp	/^    K_ANTENNAPINMAXCUTCAR = 451,$/;"	e	enum:yytokentype	file:
K_ANTENNAPINMAXCUTCAR	def/def.tab.h	/^    K_ANTENNAPINMAXCUTCAR = 451,$/;"	e	enum:yytokentype
K_ANTENNAPINMAXSIDEAREACAR	def/def.tab.cpp	/^    K_ANTENNAPINMAXSIDEAREACAR = 449,$/;"	e	enum:yytokentype	file:
K_ANTENNAPINMAXSIDEAREACAR	def/def.tab.h	/^    K_ANTENNAPINMAXSIDEAREACAR = 449,$/;"	e	enum:yytokentype
K_ANTENNAPINPARTIALCUTAREA	def/def.tab.cpp	/^    K_ANTENNAPINPARTIALCUTAREA = 450,$/;"	e	enum:yytokentype	file:
K_ANTENNAPINPARTIALCUTAREA	def/def.tab.h	/^    K_ANTENNAPINPARTIALCUTAREA = 450,$/;"	e	enum:yytokentype
K_ANTENNAPINPARTIALMETALAREA	def/def.tab.cpp	/^    K_ANTENNAPINPARTIALMETALAREA = 444,$/;"	e	enum:yytokentype	file:
K_ANTENNAPINPARTIALMETALAREA	def/def.tab.h	/^    K_ANTENNAPINPARTIALMETALAREA = 444,$/;"	e	enum:yytokentype
K_ANTENNAPINPARTIALMETALSIDEAREA	def/def.tab.cpp	/^    K_ANTENNAPINPARTIALMETALSIDEAREA = 445,$/;"	e	enum:yytokentype	file:
K_ANTENNAPINPARTIALMETALSIDEAREA	def/def.tab.h	/^    K_ANTENNAPINPARTIALMETALSIDEAREA = 445,$/;"	e	enum:yytokentype
K_ARRAY	def/def.tab.cpp	/^    K_ARRAY = 268,$/;"	e	enum:yytokentype	file:
K_ARRAY	def/def.tab.h	/^    K_ARRAY = 268,$/;"	e	enum:yytokentype
K_ASSERTIONS	def/def.tab.cpp	/^    K_ASSERTIONS = 348,$/;"	e	enum:yytokentype	file:
K_ASSERTIONS	def/def.tab.h	/^    K_ASSERTIONS = 348,$/;"	e	enum:yytokentype
K_BALANCED	def/def.tab.cpp	/^    K_BALANCED = 479,$/;"	e	enum:yytokentype	file:
K_BALANCED	def/def.tab.h	/^    K_BALANCED = 479,$/;"	e	enum:yytokentype
K_BEGINEXT	def/def.tab.cpp	/^    K_BEGINEXT = 422,$/;"	e	enum:yytokentype	file:
K_BEGINEXT	def/def.tab.h	/^    K_BEGINEXT = 422,$/;"	e	enum:yytokentype
K_BLOCKAGES	def/def.tab.cpp	/^    K_BLOCKAGES = 470,$/;"	e	enum:yytokentype	file:
K_BLOCKAGES	def/def.tab.h	/^    K_BLOCKAGES = 470,$/;"	e	enum:yytokentype
K_BLOCKAGEWIRE	def/def.tab.cpp	/^    K_BLOCKAGEWIRE = 467,$/;"	e	enum:yytokentype	file:
K_BLOCKAGEWIRE	def/def.tab.h	/^    K_BLOCKAGEWIRE = 467,$/;"	e	enum:yytokentype
K_BLOCKRING	def/def.tab.cpp	/^    K_BLOCKRING = 469,$/;"	e	enum:yytokentype	file:
K_BLOCKRING	def/def.tab.h	/^    K_BLOCKRING = 469,$/;"	e	enum:yytokentype
K_BLOCKWIRE	def/def.tab.cpp	/^    K_BLOCKWIRE = 465,$/;"	e	enum:yytokentype	file:
K_BLOCKWIRE	def/def.tab.h	/^    K_BLOCKWIRE = 465,$/;"	e	enum:yytokentype
K_BOTTOMLEFT	def/def.tab.cpp	/^    K_BOTTOMLEFT = 409,$/;"	e	enum:yytokentype	file:
K_BOTTOMLEFT	def/def.tab.h	/^    K_BOTTOMLEFT = 409,$/;"	e	enum:yytokentype
K_BUSBITCHARS	def/def.tab.cpp	/^    K_BUSBITCHARS = 416,$/;"	e	enum:yytokentype	file:
K_BUSBITCHARS	def/def.tab.h	/^    K_BUSBITCHARS = 416,$/;"	e	enum:yytokentype
K_BY	def/def.tab.cpp	/^    K_BY = 281,$/;"	e	enum:yytokentype	file:
K_BY	def/def.tab.h	/^    K_BY = 281,$/;"	e	enum:yytokentype
K_CANNOTOCCUPY	def/def.tab.cpp	/^    K_CANNOTOCCUPY = 272,$/;"	e	enum:yytokentype	file:
K_CANNOTOCCUPY	def/def.tab.h	/^    K_CANNOTOCCUPY = 272,$/;"	e	enum:yytokentype
K_CANPLACE	def/def.tab.cpp	/^    K_CANPLACE = 271,$/;"	e	enum:yytokentype	file:
K_CANPLACE	def/def.tab.h	/^    K_CANPLACE = 271,$/;"	e	enum:yytokentype
K_CAPACITANCE	def/def.tab.cpp	/^    K_CAPACITANCE = 357,$/;"	e	enum:yytokentype	file:
K_CAPACITANCE	def/def.tab.h	/^    K_CAPACITANCE = 357,$/;"	e	enum:yytokentype
K_CLOCK	def/def.tab.cpp	/^    K_CLOCK = 455,$/;"	e	enum:yytokentype	file:
K_CLOCK	def/def.tab.h	/^    K_CLOCK = 455,$/;"	e	enum:yytokentype
K_COMMONSCANPINS	def/def.tab.cpp	/^    K_COMMONSCANPINS = 436,$/;"	e	enum:yytokentype	file:
K_COMMONSCANPINS	def/def.tab.h	/^    K_COMMONSCANPINS = 436,$/;"	e	enum:yytokentype
K_COMPONENT	def/def.tab.cpp	/^    K_COMPONENT = 429,$/;"	e	enum:yytokentype	file:
K_COMPONENT	def/def.tab.h	/^    K_COMPONENT = 429,$/;"	e	enum:yytokentype
K_COMPONENTPIN	def/def.tab.cpp	/^    K_COMPONENTPIN = 438,$/;"	e	enum:yytokentype	file:
K_COMPONENTPIN	def/def.tab.h	/^    K_COMPONENTPIN = 438,$/;"	e	enum:yytokentype
K_COMPS	def/def.tab.cpp	/^    K_COMPS = 286,$/;"	e	enum:yytokentype	file:
K_COMPS	def/def.tab.h	/^    K_COMPS = 286,$/;"	e	enum:yytokentype
K_COMPSMASKSHIFT	def/def.tab.cpp	/^    K_COMPSMASKSHIFT = 432,$/;"	e	enum:yytokentype	file:
K_COMPSMASKSHIFT	def/def.tab.h	/^    K_COMPSMASKSHIFT = 432,$/;"	e	enum:yytokentype
K_COMP_GEN	def/def.tab.cpp	/^    K_COMP_GEN = 287,$/;"	e	enum:yytokentype	file:
K_COMP_GEN	def/def.tab.h	/^    K_COMP_GEN = 287,$/;"	e	enum:yytokentype
K_CONSTRAINTS	def/def.tab.cpp	/^    K_CONSTRAINTS = 330,$/;"	e	enum:yytokentype	file:
K_CONSTRAINTS	def/def.tab.h	/^    K_CONSTRAINTS = 330,$/;"	e	enum:yytokentype
K_COREWIRE	def/def.tab.cpp	/^    K_COREWIRE = 464,$/;"	e	enum:yytokentype	file:
K_COREWIRE	def/def.tab.h	/^    K_COREWIRE = 464,$/;"	e	enum:yytokentype
K_COVER	def/def.tab.cpp	/^    K_COVER = 292,$/;"	e	enum:yytokentype	file:
K_COVER	def/def.tab.h	/^    K_COVER = 292,$/;"	e	enum:yytokentype
K_CUTSIZE	def/def.tab.cpp	/^    K_CUTSIZE = 495,$/;"	e	enum:yytokentype	file:
K_CUTSIZE	def/def.tab.h	/^    K_CUTSIZE = 495,$/;"	e	enum:yytokentype
K_CUTSPACING	def/def.tab.cpp	/^    K_CUTSPACING = 496,$/;"	e	enum:yytokentype	file:
K_CUTSPACING	def/def.tab.h	/^    K_CUTSPACING = 496,$/;"	e	enum:yytokentype
K_DEFAULTCAP	def/def.tab.cpp	/^    K_DEFAULTCAP = 275,$/;"	e	enum:yytokentype	file:
K_DEFAULTCAP	def/def.tab.h	/^    K_DEFAULTCAP = 275,$/;"	e	enum:yytokentype
K_DEFINE	def/def.tab.cpp	/^    K_DEFINE = 382,$/;"	e	enum:yytokentype	file:
K_DEFINE	def/def.tab.h	/^    K_DEFINE = 382,$/;"	e	enum:yytokentype
K_DEFINEB	def/def.tab.cpp	/^    K_DEFINEB = 384,$/;"	e	enum:yytokentype	file:
K_DEFINEB	def/def.tab.h	/^    K_DEFINEB = 384,$/;"	e	enum:yytokentype
K_DEFINES	def/def.tab.cpp	/^    K_DEFINES = 383,$/;"	e	enum:yytokentype	file:
K_DEFINES	def/def.tab.h	/^    K_DEFINES = 383,$/;"	e	enum:yytokentype
K_DESIGN	def/def.tab.cpp	/^    K_DESIGN = 264,$/;"	e	enum:yytokentype	file:
K_DESIGN	def/def.tab.h	/^    K_DESIGN = 264,$/;"	e	enum:yytokentype
K_DESIGNRULEWIDTH	def/def.tab.cpp	/^    K_DESIGNRULEWIDTH = 497,$/;"	e	enum:yytokentype	file:
K_DESIGNRULEWIDTH	def/def.tab.h	/^    K_DESIGNRULEWIDTH = 497,$/;"	e	enum:yytokentype
K_DIAGWIDTH	def/def.tab.cpp	/^    K_DIAGWIDTH = 498,$/;"	e	enum:yytokentype	file:
K_DIAGWIDTH	def/def.tab.h	/^    K_DIAGWIDTH = 498,$/;"	e	enum:yytokentype
K_DIEAREA	def/def.tab.cpp	/^    K_DIEAREA = 273,$/;"	e	enum:yytokentype	file:
K_DIEAREA	def/def.tab.h	/^    K_DIEAREA = 273,$/;"	e	enum:yytokentype
K_DIFF	def/def.tab.cpp	/^    K_DIFF = 334,$/;"	e	enum:yytokentype	file:
K_DIFF	def/def.tab.h	/^    K_DIFF = 334,$/;"	e	enum:yytokentype
K_DIRECTION	def/def.tab.cpp	/^    K_DIRECTION = 400,$/;"	e	enum:yytokentype	file:
K_DIRECTION	def/def.tab.h	/^    K_DIRECTION = 400,$/;"	e	enum:yytokentype
K_DIST	def/def.tab.cpp	/^    K_DIST = 476,$/;"	e	enum:yytokentype	file:
K_DIST	def/def.tab.h	/^    K_DIST = 476,$/;"	e	enum:yytokentype
K_DISTANCE	def/def.tab.cpp	/^    K_DISTANCE = 349,$/;"	e	enum:yytokentype	file:
K_DISTANCE	def/def.tab.h	/^    K_DISTANCE = 349,$/;"	e	enum:yytokentype
K_DIVIDERCHAR	def/def.tab.cpp	/^    K_DIVIDERCHAR = 415,$/;"	e	enum:yytokentype	file:
K_DIVIDERCHAR	def/def.tab.h	/^    K_DIVIDERCHAR = 415,$/;"	e	enum:yytokentype
K_DO	def/def.tab.cpp	/^    K_DO = 280,$/;"	e	enum:yytokentype	file:
K_DO	def/def.tab.h	/^    K_DO = 280,$/;"	e	enum:yytokentype
K_DRCFILL	def/def.tab.cpp	/^    K_DRCFILL = 490,$/;"	e	enum:yytokentype	file:
K_DRCFILL	def/def.tab.h	/^    K_DRCFILL = 490,$/;"	e	enum:yytokentype
K_DRIVECELL	def/def.tab.cpp	/^    K_DRIVECELL = 358,$/;"	e	enum:yytokentype	file:
K_DRIVECELL	def/def.tab.h	/^    K_DRIVECELL = 358,$/;"	e	enum:yytokentype
K_E	def/def.tab.cpp	/^    K_E = 318,$/;"	e	enum:yytokentype	file:
K_E	def/def.tab.h	/^    K_E = 318,$/;"	e	enum:yytokentype
K_EEQMASTER	def/def.tab.cpp	/^    K_EEQMASTER = 290,$/;"	e	enum:yytokentype	file:
K_EEQMASTER	def/def.tab.h	/^    K_EEQMASTER = 290,$/;"	e	enum:yytokentype
K_ELSE	def/def.tab.cpp	/^    K_ELSE = 387,$/;"	e	enum:yytokentype	file:
K_ELSE	def/def.tab.h	/^    K_ELSE = 387,$/;"	e	enum:yytokentype
K_ENCLOSURE	def/def.tab.cpp	/^    K_ENCLOSURE = 499,$/;"	e	enum:yytokentype	file:
K_ENCLOSURE	def/def.tab.h	/^    K_ENCLOSURE = 499,$/;"	e	enum:yytokentype
K_END	def/def.tab.cpp	/^    K_END = 351,$/;"	e	enum:yytokentype	file:
K_END	def/def.tab.h	/^    K_END = 351,$/;"	e	enum:yytokentype
K_ENDEXT	def/def.tab.cpp	/^    K_ENDEXT = 423,$/;"	e	enum:yytokentype	file:
K_ENDEXT	def/def.tab.h	/^    K_ENDEXT = 423,$/;"	e	enum:yytokentype
K_EQ	def/def.tab.cpp	/^    K_EQ = 390,$/;"	e	enum:yytokentype	file:
K_EQ	def/def.tab.h	/^    K_EQ = 390,$/;"	e	enum:yytokentype
K_EQUAL	def/def.tab.cpp	/^    K_EQUAL = 408,$/;"	e	enum:yytokentype	file:
K_EQUAL	def/def.tab.h	/^    K_EQUAL = 408,$/;"	e	enum:yytokentype
K_ESTCAP	def/def.tab.cpp	/^    K_ESTCAP = 306,$/;"	e	enum:yytokentype	file:
K_ESTCAP	def/def.tab.h	/^    K_ESTCAP = 306,$/;"	e	enum:yytokentype
K_EXCEPTPGNET	def/def.tab.cpp	/^    K_EXCEPTPGNET = 516,$/;"	e	enum:yytokentype	file:
K_EXCEPTPGNET	def/def.tab.h	/^    K_EXCEPTPGNET = 516,$/;"	e	enum:yytokentype
K_FALL	def/def.tab.cpp	/^    K_FALL = 354,$/;"	e	enum:yytokentype	file:
K_FALL	def/def.tab.h	/^    K_FALL = 354,$/;"	e	enum:yytokentype
K_FALLMAX	def/def.tab.cpp	/^    K_FALLMAX = 345,$/;"	e	enum:yytokentype	file:
K_FALLMAX	def/def.tab.h	/^    K_FALLMAX = 345,$/;"	e	enum:yytokentype
K_FALLMIN	def/def.tab.cpp	/^    K_FALLMIN = 344,$/;"	e	enum:yytokentype	file:
K_FALLMIN	def/def.tab.h	/^    K_FALLMIN = 344,$/;"	e	enum:yytokentype
K_FALSE	def/def.tab.cpp	/^    K_FALSE = 388,$/;"	e	enum:yytokentype	file:
K_FALSE	def/def.tab.h	/^    K_FALSE = 388,$/;"	e	enum:yytokentype
K_FE	def/def.tab.cpp	/^    K_FE = 321,$/;"	e	enum:yytokentype	file:
K_FE	def/def.tab.h	/^    K_FE = 321,$/;"	e	enum:yytokentype
K_FENCE	def/def.tab.cpp	/^    K_FENCE = 483,$/;"	e	enum:yytokentype	file:
K_FENCE	def/def.tab.h	/^    K_FENCE = 483,$/;"	e	enum:yytokentype
K_FILLS	def/def.tab.cpp	/^    K_FILLS = 473,$/;"	e	enum:yytokentype	file:
K_FILLS	def/def.tab.h	/^    K_FILLS = 473,$/;"	e	enum:yytokentype
K_FILLWIRE	def/def.tab.cpp	/^    K_FILLWIRE = 466,$/;"	e	enum:yytokentype	file:
K_FILLWIRE	def/def.tab.h	/^    K_FILLWIRE = 466,$/;"	e	enum:yytokentype
K_FILLWIREOPC	def/def.tab.cpp	/^    K_FILLWIREOPC = 517,$/;"	e	enum:yytokentype	file:
K_FILLWIREOPC	def/def.tab.h	/^    K_FILLWIREOPC = 517,$/;"	e	enum:yytokentype
K_FIXED	def/def.tab.cpp	/^    K_FIXED = 291,$/;"	e	enum:yytokentype	file:
K_FIXED	def/def.tab.h	/^    K_FIXED = 291,$/;"	e	enum:yytokentype
K_FIXEDBUMP	def/def.tab.cpp	/^    K_FIXEDBUMP = 482,$/;"	e	enum:yytokentype	file:
K_FIXEDBUMP	def/def.tab.h	/^    K_FIXEDBUMP = 482,$/;"	e	enum:yytokentype
K_FLOATING	def/def.tab.cpp	/^    K_FLOATING = 337,$/;"	e	enum:yytokentype	file:
K_FLOATING	def/def.tab.h	/^    K_FLOATING = 337,$/;"	e	enum:yytokentype
K_FLOORPLAN	def/def.tab.cpp	/^    K_FLOORPLAN = 269,$/;"	e	enum:yytokentype	file:
K_FLOORPLAN	def/def.tab.h	/^    K_FLOORPLAN = 269,$/;"	e	enum:yytokentype
K_FN	def/def.tab.cpp	/^    K_FN = 320,$/;"	e	enum:yytokentype	file:
K_FN	def/def.tab.h	/^    K_FN = 320,$/;"	e	enum:yytokentype
K_FOLLOWPIN	def/def.tab.cpp	/^    K_FOLLOWPIN = 462,$/;"	e	enum:yytokentype	file:
K_FOLLOWPIN	def/def.tab.h	/^    K_FOLLOWPIN = 462,$/;"	e	enum:yytokentype
K_FOREIGN	def/def.tab.cpp	/^    K_FOREIGN = 295,$/;"	e	enum:yytokentype	file:
K_FOREIGN	def/def.tab.h	/^    K_FOREIGN = 295,$/;"	e	enum:yytokentype
K_FPC	def/def.tab.cpp	/^    K_FPC = 402,$/;"	e	enum:yytokentype	file:
K_FPC	def/def.tab.h	/^    K_FPC = 402,$/;"	e	enum:yytokentype
K_FREQUENCY	def/def.tab.cpp	/^    K_FREQUENCY = 484,$/;"	e	enum:yytokentype	file:
K_FREQUENCY	def/def.tab.h	/^    K_FREQUENCY = 484,$/;"	e	enum:yytokentype
K_FROMCLOCKPIN	def/def.tab.cpp	/^    K_FROMCLOCKPIN = 367,$/;"	e	enum:yytokentype	file:
K_FROMCLOCKPIN	def/def.tab.h	/^    K_FROMCLOCKPIN = 367,$/;"	e	enum:yytokentype
K_FROMCOMPPIN	def/def.tab.cpp	/^    K_FROMCOMPPIN = 368,$/;"	e	enum:yytokentype	file:
K_FROMCOMPPIN	def/def.tab.h	/^    K_FROMCOMPPIN = 368,$/;"	e	enum:yytokentype
K_FROMIOPIN	def/def.tab.cpp	/^    K_FROMIOPIN = 369,$/;"	e	enum:yytokentype	file:
K_FROMIOPIN	def/def.tab.h	/^    K_FROMIOPIN = 369,$/;"	e	enum:yytokentype
K_FROMPIN	def/def.tab.cpp	/^    K_FROMPIN = 359,$/;"	e	enum:yytokentype	file:
K_FROMPIN	def/def.tab.h	/^    K_FROMPIN = 359,$/;"	e	enum:yytokentype
K_FS	def/def.tab.cpp	/^    K_FS = 322,$/;"	e	enum:yytokentype	file:
K_FS	def/def.tab.h	/^    K_FS = 322,$/;"	e	enum:yytokentype
K_FW	def/def.tab.cpp	/^    K_FW = 323,$/;"	e	enum:yytokentype	file:
K_FW	def/def.tab.h	/^    K_FW = 323,$/;"	e	enum:yytokentype
K_GCELLGRID	def/def.tab.cpp	/^    K_GCELLGRID = 279,$/;"	e	enum:yytokentype	file:
K_GCELLGRID	def/def.tab.h	/^    K_GCELLGRID = 279,$/;"	e	enum:yytokentype
K_GE	def/def.tab.cpp	/^    K_GE = 394,$/;"	e	enum:yytokentype	file:
K_GE	def/def.tab.h	/^    K_GE = 394,$/;"	e	enum:yytokentype
K_GROUND	def/def.tab.cpp	/^    K_GROUND = 454,$/;"	e	enum:yytokentype	file:
K_GROUND	def/def.tab.h	/^    K_GROUND = 454,$/;"	e	enum:yytokentype
K_GROUNDSENSITIVITY	def/def.tab.cpp	/^    K_GROUNDSENSITIVITY = 501,$/;"	e	enum:yytokentype	file:
K_GROUNDSENSITIVITY	def/def.tab.h	/^    K_GROUNDSENSITIVITY = 501,$/;"	e	enum:yytokentype
K_GROUP	def/def.tab.cpp	/^    K_GROUP = 325,$/;"	e	enum:yytokentype	file:
K_GROUP	def/def.tab.h	/^    K_GROUP = 325,$/;"	e	enum:yytokentype
K_GROUPS	def/def.tab.cpp	/^    K_GROUPS = 324,$/;"	e	enum:yytokentype	file:
K_GROUPS	def/def.tab.h	/^    K_GROUPS = 324,$/;"	e	enum:yytokentype
K_GT	def/def.tab.cpp	/^    K_GT = 395,$/;"	e	enum:yytokentype	file:
K_GT	def/def.tab.h	/^    K_GT = 395,$/;"	e	enum:yytokentype
K_GUIDE	def/def.tab.cpp	/^    K_GUIDE = 485,$/;"	e	enum:yytokentype	file:
K_GUIDE	def/def.tab.h	/^    K_GUIDE = 485,$/;"	e	enum:yytokentype
K_HALO	def/def.tab.cpp	/^    K_HALO = 500,$/;"	e	enum:yytokentype	file:
K_HALO	def/def.tab.h	/^    K_HALO = 500,$/;"	e	enum:yytokentype
K_HARDSPACING	def/def.tab.cpp	/^    K_HARDSPACING = 502,$/;"	e	enum:yytokentype	file:
K_HARDSPACING	def/def.tab.h	/^    K_HARDSPACING = 502,$/;"	e	enum:yytokentype
K_HISTORY	def/def.tab.cpp	/^    K_HISTORY = 262,$/;"	e	enum:yytokentype	file:
K_HISTORY	def/def.tab.h	/^    K_HISTORY = 262,$/;"	e	enum:yytokentype
K_HOLDFALL	def/def.tab.cpp	/^    K_HOLDFALL = 376,$/;"	e	enum:yytokentype	file:
K_HOLDFALL	def/def.tab.h	/^    K_HOLDFALL = 376,$/;"	e	enum:yytokentype
K_HOLDRISE	def/def.tab.cpp	/^    K_HOLDRISE = 375,$/;"	e	enum:yytokentype	file:
K_HOLDRISE	def/def.tab.h	/^    K_HOLDRISE = 375,$/;"	e	enum:yytokentype
K_HORIZONTAL	def/def.tab.cpp	/^    K_HORIZONTAL = 403,$/;"	e	enum:yytokentype	file:
K_HORIZONTAL	def/def.tab.h	/^    K_HORIZONTAL = 403,$/;"	e	enum:yytokentype
K_IF	def/def.tab.cpp	/^    K_IF = 385,$/;"	e	enum:yytokentype	file:
K_IF	def/def.tab.h	/^    K_IF = 385,$/;"	e	enum:yytokentype
K_IN	def/def.tab.cpp	/^    K_IN = 340,$/;"	e	enum:yytokentype	file:
K_IN	def/def.tab.h	/^    K_IN = 340,$/;"	e	enum:yytokentype
K_INTEGER	def/def.tab.cpp	/^    K_INTEGER = 420,$/;"	e	enum:yytokentype	file:
K_INTEGER	def/def.tab.h	/^    K_INTEGER = 420,$/;"	e	enum:yytokentype
K_IOTIMINGS	def/def.tab.cpp	/^    K_IOTIMINGS = 352,$/;"	e	enum:yytokentype	file:
K_IOTIMINGS	def/def.tab.h	/^    K_IOTIMINGS = 352,$/;"	e	enum:yytokentype
K_IOWIRE	def/def.tab.cpp	/^    K_IOWIRE = 463,$/;"	e	enum:yytokentype	file:
K_IOWIRE	def/def.tab.h	/^    K_IOWIRE = 463,$/;"	e	enum:yytokentype
K_LAYER	def/def.tab.cpp	/^    K_LAYER = 283,$/;"	e	enum:yytokentype	file:
K_LAYER	def/def.tab.h	/^    K_LAYER = 283,$/;"	e	enum:yytokentype
K_LAYERS	def/def.tab.cpp	/^    K_LAYERS = 503,$/;"	e	enum:yytokentype	file:
K_LAYERS	def/def.tab.h	/^    K_LAYERS = 503,$/;"	e	enum:yytokentype
K_LE	def/def.tab.cpp	/^    K_LE = 392,$/;"	e	enum:yytokentype	file:
K_LE	def/def.tab.h	/^    K_LE = 392,$/;"	e	enum:yytokentype
K_LT	def/def.tab.cpp	/^    K_LT = 393,$/;"	e	enum:yytokentype	file:
K_LT	def/def.tab.h	/^    K_LT = 393,$/;"	e	enum:yytokentype
K_MACRO	def/def.tab.cpp	/^    K_MACRO = 364,$/;"	e	enum:yytokentype	file:
K_MACRO	def/def.tab.h	/^    K_MACRO = 364,$/;"	e	enum:yytokentype
K_MASK	def/def.tab.cpp	/^    K_MASK = 430,$/;"	e	enum:yytokentype	file:
K_MASK	def/def.tab.h	/^    K_MASK = 430,$/;"	e	enum:yytokentype
K_MASKSHIFT	def/def.tab.cpp	/^    K_MASKSHIFT = 431,$/;"	e	enum:yytokentype	file:
K_MASKSHIFT	def/def.tab.h	/^    K_MASKSHIFT = 431,$/;"	e	enum:yytokentype
K_MAX	def/def.tab.cpp	/^    K_MAX = 407,$/;"	e	enum:yytokentype	file:
K_MAX	def/def.tab.h	/^    K_MAX = 407,$/;"	e	enum:yytokentype
K_MAXBITS	def/def.tab.cpp	/^    K_MAXBITS = 486,$/;"	e	enum:yytokentype	file:
K_MAXBITS	def/def.tab.h	/^    K_MAXBITS = 486,$/;"	e	enum:yytokentype
K_MAXDIST	def/def.tab.cpp	/^    K_MAXDIST = 347,$/;"	e	enum:yytokentype	file:
K_MAXDIST	def/def.tab.h	/^    K_MAXDIST = 347,$/;"	e	enum:yytokentype
K_MAXHALFPERIMETER	def/def.tab.cpp	/^    K_MAXHALFPERIMETER = 329,$/;"	e	enum:yytokentype	file:
K_MAXHALFPERIMETER	def/def.tab.h	/^    K_MAXHALFPERIMETER = 329,$/;"	e	enum:yytokentype
K_MAXX	def/def.tab.cpp	/^    K_MAXX = 327,$/;"	e	enum:yytokentype	file:
K_MAXX	def/def.tab.h	/^    K_MAXX = 327,$/;"	e	enum:yytokentype
K_MAXY	def/def.tab.cpp	/^    K_MAXY = 328,$/;"	e	enum:yytokentype	file:
K_MAXY	def/def.tab.h	/^    K_MAXY = 328,$/;"	e	enum:yytokentype
K_MICRONS	def/def.tab.cpp	/^    K_MICRONS = 350,$/;"	e	enum:yytokentype	file:
K_MICRONS	def/def.tab.h	/^    K_MICRONS = 350,$/;"	e	enum:yytokentype
K_MIN	def/def.tab.cpp	/^    K_MIN = 406,$/;"	e	enum:yytokentype	file:
K_MIN	def/def.tab.h	/^    K_MIN = 406,$/;"	e	enum:yytokentype
K_MINCUTS	def/def.tab.cpp	/^    K_MINCUTS = 504,$/;"	e	enum:yytokentype	file:
K_MINCUTS	def/def.tab.h	/^    K_MINCUTS = 504,$/;"	e	enum:yytokentype
K_MINPINS	def/def.tab.cpp	/^    K_MINPINS = 276,$/;"	e	enum:yytokentype	file:
K_MINPINS	def/def.tab.h	/^    K_MINPINS = 276,$/;"	e	enum:yytokentype
K_MUSTJOIN	def/def.tab.cpp	/^    K_MUSTJOIN = 300,$/;"	e	enum:yytokentype	file:
K_MUSTJOIN	def/def.tab.h	/^    K_MUSTJOIN = 300,$/;"	e	enum:yytokentype
K_N	def/def.tab.cpp	/^    K_N = 316,$/;"	e	enum:yytokentype	file:
K_N	def/def.tab.h	/^    K_N = 316,$/;"	e	enum:yytokentype
K_NAMEMAPSTRING	def/def.tab.cpp	/^    K_NAMEMAPSTRING = 424,$/;"	e	enum:yytokentype	file:
K_NAMEMAPSTRING	def/def.tab.h	/^    K_NAMEMAPSTRING = 424,$/;"	e	enum:yytokentype
K_NAMESCASESENSITIVE	def/def.tab.cpp	/^    K_NAMESCASESENSITIVE = 263,$/;"	e	enum:yytokentype	file:
K_NAMESCASESENSITIVE	def/def.tab.h	/^    K_NAMESCASESENSITIVE = 263,$/;"	e	enum:yytokentype
K_NE	def/def.tab.cpp	/^    K_NE = 391,$/;"	e	enum:yytokentype	file:
K_NE	def/def.tab.h	/^    K_NE = 391,$/;"	e	enum:yytokentype
K_NET	def/def.tab.cpp	/^    K_NET = 331,$/;"	e	enum:yytokentype	file:
K_NET	def/def.tab.h	/^    K_NET = 331,$/;"	e	enum:yytokentype
K_NETEXPR	def/def.tab.cpp	/^    K_NETEXPR = 505,$/;"	e	enum:yytokentype	file:
K_NETEXPR	def/def.tab.h	/^    K_NETEXPR = 505,$/;"	e	enum:yytokentype
K_NETLIST	def/def.tab.cpp	/^    K_NETLIST = 475,$/;"	e	enum:yytokentype	file:
K_NETLIST	def/def.tab.h	/^    K_NETLIST = 475,$/;"	e	enum:yytokentype
K_NETS	def/def.tab.cpp	/^    K_NETS = 298,$/;"	e	enum:yytokentype	file:
K_NETS	def/def.tab.h	/^    K_NETS = 298,$/;"	e	enum:yytokentype
K_NEW	def/def.tab.cpp	/^    K_NEW = 308,$/;"	e	enum:yytokentype	file:
K_NEW	def/def.tab.h	/^    K_NEW = 308,$/;"	e	enum:yytokentype
K_NONDEFAULTRULE	def/def.tab.cpp	/^    K_NONDEFAULTRULE = 314,$/;"	e	enum:yytokentype	file:
K_NONDEFAULTRULE	def/def.tab.h	/^    K_NONDEFAULTRULE = 314,$/;"	e	enum:yytokentype
K_NONDEFAULTRULES	def/def.tab.cpp	/^    K_NONDEFAULTRULES = 315,$/;"	e	enum:yytokentype	file:
K_NONDEFAULTRULES	def/def.tab.h	/^    K_NONDEFAULTRULES = 315,$/;"	e	enum:yytokentype
K_NOSHIELD	def/def.tab.cpp	/^    K_NOSHIELD = 442,$/;"	e	enum:yytokentype	file:
K_NOSHIELD	def/def.tab.h	/^    K_NOSHIELD = 442,$/;"	e	enum:yytokentype
K_NOT	def/def.tab.cpp	/^    K_NOT = 398,$/;"	e	enum:yytokentype	file:
K_NOT	def/def.tab.h	/^    K_NOT = 398,$/;"	e	enum:yytokentype
K_OFF	def/def.tab.cpp	/^    K_OFF = 426,$/;"	e	enum:yytokentype	file:
K_OFF	def/def.tab.h	/^    K_OFF = 426,$/;"	e	enum:yytokentype
K_OFFSET	def/def.tab.cpp	/^    K_OFFSET = 506,$/;"	e	enum:yytokentype	file:
K_OFFSET	def/def.tab.h	/^    K_OFFSET = 506,$/;"	e	enum:yytokentype
K_ON	def/def.tab.cpp	/^    K_ON = 425,$/;"	e	enum:yytokentype	file:
K_ON	def/def.tab.h	/^    K_ON = 425,$/;"	e	enum:yytokentype
K_OPC	def/def.tab.cpp	/^    K_OPC = 518,$/;"	e	enum:yytokentype	file:
K_OPC	def/def.tab.h	/^    K_OPC = 518,$/;"	e	enum:yytokentype
K_OR	def/def.tab.cpp	/^    K_OR = 396,$/;"	e	enum:yytokentype	file:
K_OR	def/def.tab.h	/^    K_OR = 396,$/;"	e	enum:yytokentype
K_ORDERED	def/def.tab.cpp	/^    K_ORDERED = 338,$/;"	e	enum:yytokentype	file:
K_ORDERED	def/def.tab.h	/^    K_ORDERED = 338,$/;"	e	enum:yytokentype
K_ORIGIN	def/def.tab.cpp	/^    K_ORIGIN = 507,$/;"	e	enum:yytokentype	file:
K_ORIGIN	def/def.tab.h	/^    K_ORIGIN = 507,$/;"	e	enum:yytokentype
K_ORIGINAL	def/def.tab.cpp	/^    K_ORIGINAL = 301,$/;"	e	enum:yytokentype	file:
K_ORIGINAL	def/def.tab.h	/^    K_ORIGINAL = 301,$/;"	e	enum:yytokentype
K_OUT	def/def.tab.cpp	/^    K_OUT = 341,$/;"	e	enum:yytokentype	file:
K_OUT	def/def.tab.h	/^    K_OUT = 341,$/;"	e	enum:yytokentype
K_OXIDE1	def/def.tab.cpp	/^    K_OXIDE1 = 491,$/;"	e	enum:yytokentype	file:
K_OXIDE1	def/def.tab.h	/^    K_OXIDE1 = 491,$/;"	e	enum:yytokentype
K_OXIDE2	def/def.tab.cpp	/^    K_OXIDE2 = 492,$/;"	e	enum:yytokentype	file:
K_OXIDE2	def/def.tab.h	/^    K_OXIDE2 = 492,$/;"	e	enum:yytokentype
K_OXIDE3	def/def.tab.cpp	/^    K_OXIDE3 = 493,$/;"	e	enum:yytokentype	file:
K_OXIDE3	def/def.tab.h	/^    K_OXIDE3 = 493,$/;"	e	enum:yytokentype
K_OXIDE4	def/def.tab.cpp	/^    K_OXIDE4 = 494,$/;"	e	enum:yytokentype	file:
K_OXIDE4	def/def.tab.h	/^    K_OXIDE4 = 494,$/;"	e	enum:yytokentype
K_PADRING	def/def.tab.cpp	/^    K_PADRING = 468,$/;"	e	enum:yytokentype	file:
K_PADRING	def/def.tab.h	/^    K_PADRING = 468,$/;"	e	enum:yytokentype
K_PARALLEL	def/def.tab.cpp	/^    K_PARALLEL = 361,$/;"	e	enum:yytokentype	file:
K_PARALLEL	def/def.tab.h	/^    K_PARALLEL = 361,$/;"	e	enum:yytokentype
K_PARTIAL	def/def.tab.cpp	/^    K_PARTIAL = 519,$/;"	e	enum:yytokentype	file:
K_PARTIAL	def/def.tab.h	/^    K_PARTIAL = 519,$/;"	e	enum:yytokentype
K_PARTITION	def/def.tab.cpp	/^    K_PARTITION = 487,$/;"	e	enum:yytokentype	file:
K_PARTITION	def/def.tab.h	/^    K_PARTITION = 487,$/;"	e	enum:yytokentype
K_PARTITIONS	def/def.tab.cpp	/^    K_PARTITIONS = 365,$/;"	e	enum:yytokentype	file:
K_PARTITIONS	def/def.tab.h	/^    K_PARTITIONS = 365,$/;"	e	enum:yytokentype
K_PATH	def/def.tab.cpp	/^    K_PATH = 332,$/;"	e	enum:yytokentype	file:
K_PATH	def/def.tab.h	/^    K_PATH = 332,$/;"	e	enum:yytokentype
K_PATTERN	def/def.tab.cpp	/^    K_PATTERN = 304,$/;"	e	enum:yytokentype	file:
K_PATTERN	def/def.tab.h	/^    K_PATTERN = 304,$/;"	e	enum:yytokentype
K_PATTERNNAME	def/def.tab.cpp	/^    K_PATTERNNAME = 305,$/;"	e	enum:yytokentype	file:
K_PATTERNNAME	def/def.tab.h	/^    K_PATTERNNAME = 305,$/;"	e	enum:yytokentype
K_PIN	def/def.tab.cpp	/^    K_PIN = 380,$/;"	e	enum:yytokentype	file:
K_PIN	def/def.tab.h	/^    K_PIN = 380,$/;"	e	enum:yytokentype
K_PINPROPERTIES	def/def.tab.cpp	/^    K_PINPROPERTIES = 434,$/;"	e	enum:yytokentype	file:
K_PINPROPERTIES	def/def.tab.h	/^    K_PINPROPERTIES = 434,$/;"	e	enum:yytokentype
K_PINS	def/def.tab.cpp	/^    K_PINS = 274,$/;"	e	enum:yytokentype	file:
K_PINS	def/def.tab.h	/^    K_PINS = 274,$/;"	e	enum:yytokentype
K_PLACED	def/def.tab.cpp	/^    K_PLACED = 294,$/;"	e	enum:yytokentype	file:
K_PLACED	def/def.tab.h	/^    K_PLACED = 294,$/;"	e	enum:yytokentype
K_PLACEMENT	def/def.tab.cpp	/^    K_PLACEMENT = 471,$/;"	e	enum:yytokentype	file:
K_PLACEMENT	def/def.tab.h	/^    K_PLACEMENT = 471,$/;"	e	enum:yytokentype
K_POLYGON	def/def.tab.cpp	/^    K_POLYGON = 510,$/;"	e	enum:yytokentype	file:
K_POLYGON	def/def.tab.h	/^    K_POLYGON = 510,$/;"	e	enum:yytokentype
K_PORT	def/def.tab.cpp	/^    K_PORT = 511,$/;"	e	enum:yytokentype	file:
K_PORT	def/def.tab.h	/^    K_PORT = 511,$/;"	e	enum:yytokentype
K_POWER	def/def.tab.cpp	/^    K_POWER = 453,$/;"	e	enum:yytokentype	file:
K_POWER	def/def.tab.h	/^    K_POWER = 453,$/;"	e	enum:yytokentype
K_PROPERTY	def/def.tab.cpp	/^    K_PROPERTY = 421,$/;"	e	enum:yytokentype	file:
K_PROPERTY	def/def.tab.h	/^    K_PROPERTY = 421,$/;"	e	enum:yytokentype
K_PROPERTYDEFINITIONS	def/def.tab.cpp	/^    K_PROPERTYDEFINITIONS = 417,$/;"	e	enum:yytokentype	file:
K_PROPERTYDEFINITIONS	def/def.tab.h	/^    K_PROPERTYDEFINITIONS = 417,$/;"	e	enum:yytokentype
K_PUSHDOWN	def/def.tab.cpp	/^    K_PUSHDOWN = 474,$/;"	e	enum:yytokentype	file:
K_PUSHDOWN	def/def.tab.h	/^    K_PUSHDOWN = 474,$/;"	e	enum:yytokentype
K_RANGE	def/def.tab.cpp	/^    K_RANGE = 401,$/;"	e	enum:yytokentype	file:
K_RANGE	def/def.tab.h	/^    K_RANGE = 401,$/;"	e	enum:yytokentype
K_REAL	def/def.tab.cpp	/^    K_REAL = 419,$/;"	e	enum:yytokentype	file:
K_REAL	def/def.tab.h	/^    K_REAL = 419,$/;"	e	enum:yytokentype
K_RECT	def/def.tab.cpp	/^    K_RECT = 285,$/;"	e	enum:yytokentype	file:
K_RECT	def/def.tab.h	/^    K_RECT = 285,$/;"	e	enum:yytokentype
K_REENTRANTPATHS	def/def.tab.cpp	/^    K_REENTRANTPATHS = 439,$/;"	e	enum:yytokentype	file:
K_REENTRANTPATHS	def/def.tab.h	/^    K_REENTRANTPATHS = 439,$/;"	e	enum:yytokentype
K_REGION	def/def.tab.cpp	/^    K_REGION = 296,$/;"	e	enum:yytokentype	file:
K_REGION	def/def.tab.h	/^    K_REGION = 296,$/;"	e	enum:yytokentype
K_REGIONS	def/def.tab.cpp	/^    K_REGIONS = 297,$/;"	e	enum:yytokentype	file:
K_REGIONS	def/def.tab.h	/^    K_REGIONS = 297,$/;"	e	enum:yytokentype
K_RESET	def/def.tab.cpp	/^    K_RESET = 459,$/;"	e	enum:yytokentype	file:
K_RESET	def/def.tab.h	/^    K_RESET = 459,$/;"	e	enum:yytokentype
K_RING	def/def.tab.cpp	/^    K_RING = 460,$/;"	e	enum:yytokentype	file:
K_RING	def/def.tab.h	/^    K_RING = 460,$/;"	e	enum:yytokentype
K_RISE	def/def.tab.cpp	/^    K_RISE = 353,$/;"	e	enum:yytokentype	file:
K_RISE	def/def.tab.h	/^    K_RISE = 353,$/;"	e	enum:yytokentype
K_RISEMAX	def/def.tab.cpp	/^    K_RISEMAX = 343,$/;"	e	enum:yytokentype	file:
K_RISEMAX	def/def.tab.h	/^    K_RISEMAX = 343,$/;"	e	enum:yytokentype
K_RISEMIN	def/def.tab.cpp	/^    K_RISEMIN = 342,$/;"	e	enum:yytokentype	file:
K_RISEMIN	def/def.tab.h	/^    K_RISEMIN = 342,$/;"	e	enum:yytokentype
K_ROUTED	def/def.tab.cpp	/^    K_ROUTED = 307,$/;"	e	enum:yytokentype	file:
K_ROUTED	def/def.tab.h	/^    K_ROUTED = 307,$/;"	e	enum:yytokentype
K_ROUTEHALO	def/def.tab.cpp	/^    K_ROUTEHALO = 520$/;"	e	enum:yytokentype	file:
K_ROUTEHALO	def/def.tab.h	/^    K_ROUTEHALO = 520$/;"	e	enum:yytokentype
K_ROW	def/def.tab.cpp	/^    K_ROW = 284,$/;"	e	enum:yytokentype	file:
K_ROW	def/def.tab.h	/^    K_ROW = 284,$/;"	e	enum:yytokentype
K_ROWCOL	def/def.tab.cpp	/^    K_ROWCOL = 508,$/;"	e	enum:yytokentype	file:
K_ROWCOL	def/def.tab.h	/^    K_ROWCOL = 508,$/;"	e	enum:yytokentype
K_ROWS	def/def.tab.cpp	/^    K_ROWS = 411,$/;"	e	enum:yytokentype	file:
K_ROWS	def/def.tab.h	/^    K_ROWS = 411,$/;"	e	enum:yytokentype
K_S	def/def.tab.cpp	/^    K_S = 317,$/;"	e	enum:yytokentype	file:
K_S	def/def.tab.h	/^    K_S = 317,$/;"	e	enum:yytokentype
K_SAMEMASK	def/def.tab.cpp	/^    K_SAMEMASK = 433,$/;"	e	enum:yytokentype	file:
K_SAMEMASK	def/def.tab.h	/^    K_SAMEMASK = 433,$/;"	e	enum:yytokentype
K_SCAN	def/def.tab.cpp	/^    K_SCAN = 458,$/;"	e	enum:yytokentype	file:
K_SCAN	def/def.tab.h	/^    K_SCAN = 458,$/;"	e	enum:yytokentype
K_SCANCHAINS	def/def.tab.cpp	/^    K_SCANCHAINS = 335,$/;"	e	enum:yytokentype	file:
K_SCANCHAINS	def/def.tab.h	/^    K_SCANCHAINS = 335,$/;"	e	enum:yytokentype
K_SETUPFALL	def/def.tab.cpp	/^    K_SETUPFALL = 374,$/;"	e	enum:yytokentype	file:
K_SETUPFALL	def/def.tab.h	/^    K_SETUPFALL = 374,$/;"	e	enum:yytokentype
K_SETUPRISE	def/def.tab.cpp	/^    K_SETUPRISE = 373,$/;"	e	enum:yytokentype	file:
K_SETUPRISE	def/def.tab.h	/^    K_SETUPRISE = 373,$/;"	e	enum:yytokentype
K_SHAPE	def/def.tab.cpp	/^    K_SHAPE = 310,$/;"	e	enum:yytokentype	file:
K_SHAPE	def/def.tab.h	/^    K_SHAPE = 310,$/;"	e	enum:yytokentype
K_SHIELD	def/def.tab.cpp	/^    K_SHIELD = 440,$/;"	e	enum:yytokentype	file:
K_SHIELD	def/def.tab.h	/^    K_SHIELD = 440,$/;"	e	enum:yytokentype
K_SHIELDNET	def/def.tab.cpp	/^    K_SHIELDNET = 441,$/;"	e	enum:yytokentype	file:
K_SHIELDNET	def/def.tab.h	/^    K_SHIELDNET = 441,$/;"	e	enum:yytokentype
K_SIGNAL	def/def.tab.cpp	/^    K_SIGNAL = 452,$/;"	e	enum:yytokentype	file:
K_SIGNAL	def/def.tab.h	/^    K_SIGNAL = 452,$/;"	e	enum:yytokentype
K_SITE	def/def.tab.cpp	/^    K_SITE = 270,$/;"	e	enum:yytokentype	file:
K_SITE	def/def.tab.h	/^    K_SITE = 270,$/;"	e	enum:yytokentype
K_SLEWRATE	def/def.tab.cpp	/^    K_SLEWRATE = 356,$/;"	e	enum:yytokentype	file:
K_SLEWRATE	def/def.tab.h	/^    K_SLEWRATE = 356,$/;"	e	enum:yytokentype
K_SLOTS	def/def.tab.cpp	/^    K_SLOTS = 472,$/;"	e	enum:yytokentype	file:
K_SLOTS	def/def.tab.h	/^    K_SLOTS = 472,$/;"	e	enum:yytokentype
K_SNET	def/def.tab.cpp	/^    K_SNET = 437,$/;"	e	enum:yytokentype	file:
K_SNET	def/def.tab.h	/^    K_SNET = 437,$/;"	e	enum:yytokentype
K_SNETS	def/def.tab.cpp	/^    K_SNETS = 309,$/;"	e	enum:yytokentype	file:
K_SNETS	def/def.tab.h	/^    K_SNETS = 309,$/;"	e	enum:yytokentype
K_SOFT	def/def.tab.cpp	/^    K_SOFT = 326,$/;"	e	enum:yytokentype	file:
K_SOFT	def/def.tab.h	/^    K_SOFT = 326,$/;"	e	enum:yytokentype
K_SOURCE	def/def.tab.cpp	/^    K_SOURCE = 288,$/;"	e	enum:yytokentype	file:
K_SOURCE	def/def.tab.h	/^    K_SOURCE = 288,$/;"	e	enum:yytokentype
K_SPACING	def/def.tab.cpp	/^    K_SPACING = 313,$/;"	e	enum:yytokentype	file:
K_SPACING	def/def.tab.h	/^    K_SPACING = 313,$/;"	e	enum:yytokentype
K_SPECIAL	def/def.tab.cpp	/^    K_SPECIAL = 399,$/;"	e	enum:yytokentype	file:
K_SPECIAL	def/def.tab.h	/^    K_SPECIAL = 399,$/;"	e	enum:yytokentype
K_START	def/def.tab.cpp	/^    K_START = 336,$/;"	e	enum:yytokentype	file:
K_START	def/def.tab.h	/^    K_START = 336,$/;"	e	enum:yytokentype
K_START_NET	def/def.tab.cpp	/^    K_START_NET = 299,$/;"	e	enum:yytokentype	file:
K_START_NET	def/def.tab.h	/^    K_START_NET = 299,$/;"	e	enum:yytokentype
K_STEINER	def/def.tab.cpp	/^    K_STEINER = 480,$/;"	e	enum:yytokentype	file:
K_STEINER	def/def.tab.h	/^    K_STEINER = 480,$/;"	e	enum:yytokentype
K_STEP	def/def.tab.cpp	/^    K_STEP = 282,$/;"	e	enum:yytokentype	file:
K_STEP	def/def.tab.h	/^    K_STEP = 282,$/;"	e	enum:yytokentype
K_STOP	def/def.tab.cpp	/^    K_STOP = 339,$/;"	e	enum:yytokentype	file:
K_STOP	def/def.tab.h	/^    K_STOP = 339,$/;"	e	enum:yytokentype
K_STRING	def/def.tab.cpp	/^    K_STRING = 418,$/;"	e	enum:yytokentype	file:
K_STRING	def/def.tab.h	/^    K_STRING = 418,$/;"	e	enum:yytokentype
K_STRIPE	def/def.tab.cpp	/^    K_STRIPE = 461,$/;"	e	enum:yytokentype	file:
K_STRIPE	def/def.tab.h	/^    K_STRIPE = 461,$/;"	e	enum:yytokentype
K_STYLE	def/def.tab.cpp	/^    K_STYLE = 303,$/;"	e	enum:yytokentype	file:
K_STYLE	def/def.tab.h	/^    K_STYLE = 303,$/;"	e	enum:yytokentype
K_STYLES	def/def.tab.cpp	/^    K_STYLES = 509,$/;"	e	enum:yytokentype	file:
K_STYLES	def/def.tab.h	/^    K_STYLES = 509,$/;"	e	enum:yytokentype
K_SUBNET	def/def.tab.cpp	/^    K_SUBNET = 378,$/;"	e	enum:yytokentype	file:
K_SUBNET	def/def.tab.h	/^    K_SUBNET = 378,$/;"	e	enum:yytokentype
K_SUM	def/def.tab.cpp	/^    K_SUM = 333,$/;"	e	enum:yytokentype	file:
K_SUM	def/def.tab.h	/^    K_SUM = 333,$/;"	e	enum:yytokentype
K_SUPPLYSENSITIVITY	def/def.tab.cpp	/^    K_SUPPLYSENSITIVITY = 512,$/;"	e	enum:yytokentype	file:
K_SUPPLYSENSITIVITY	def/def.tab.h	/^    K_SUPPLYSENSITIVITY = 512,$/;"	e	enum:yytokentype
K_SYNTHESIZED	def/def.tab.cpp	/^    K_SYNTHESIZED = 381,$/;"	e	enum:yytokentype	file:
K_SYNTHESIZED	def/def.tab.h	/^    K_SYNTHESIZED = 381,$/;"	e	enum:yytokentype
K_TAPER	def/def.tab.cpp	/^    K_TAPER = 412,$/;"	e	enum:yytokentype	file:
K_TAPER	def/def.tab.h	/^    K_TAPER = 412,$/;"	e	enum:yytokentype
K_TAPERRULE	def/def.tab.cpp	/^    K_TAPERRULE = 413,$/;"	e	enum:yytokentype	file:
K_TAPERRULE	def/def.tab.h	/^    K_TAPERRULE = 413,$/;"	e	enum:yytokentype
K_TECH	def/def.tab.cpp	/^    K_TECH = 266,$/;"	e	enum:yytokentype	file:
K_TECH	def/def.tab.h	/^    K_TECH = 266,$/;"	e	enum:yytokentype
K_TEST	def/def.tab.cpp	/^    K_TEST = 435,$/;"	e	enum:yytokentype	file:
K_TEST	def/def.tab.h	/^    K_TEST = 435,$/;"	e	enum:yytokentype
K_THEN	def/def.tab.cpp	/^    K_THEN = 386,$/;"	e	enum:yytokentype	file:
K_THEN	def/def.tab.h	/^    K_THEN = 386,$/;"	e	enum:yytokentype
K_THRUPIN	def/def.tab.cpp	/^    K_THRUPIN = 363,$/;"	e	enum:yytokentype	file:
K_THRUPIN	def/def.tab.h	/^    K_THRUPIN = 363,$/;"	e	enum:yytokentype
K_TIEOFF	def/def.tab.cpp	/^    K_TIEOFF = 456,$/;"	e	enum:yytokentype	file:
K_TIEOFF	def/def.tab.h	/^    K_TIEOFF = 456,$/;"	e	enum:yytokentype
K_TIMING	def/def.tab.cpp	/^    K_TIMING = 478,$/;"	e	enum:yytokentype	file:
K_TIMING	def/def.tab.h	/^    K_TIMING = 478,$/;"	e	enum:yytokentype
K_TIMINGDISABLES	def/def.tab.cpp	/^    K_TIMINGDISABLES = 362,$/;"	e	enum:yytokentype	file:
K_TIMINGDISABLES	def/def.tab.h	/^    K_TIMINGDISABLES = 362,$/;"	e	enum:yytokentype
K_TOCLOCKPIN	def/def.tab.cpp	/^    K_TOCLOCKPIN = 370,$/;"	e	enum:yytokentype	file:
K_TOCLOCKPIN	def/def.tab.h	/^    K_TOCLOCKPIN = 370,$/;"	e	enum:yytokentype
K_TOCOMPPIN	def/def.tab.cpp	/^    K_TOCOMPPIN = 371,$/;"	e	enum:yytokentype	file:
K_TOCOMPPIN	def/def.tab.h	/^    K_TOCOMPPIN = 371,$/;"	e	enum:yytokentype
K_TOIOPIN	def/def.tab.cpp	/^    K_TOIOPIN = 372,$/;"	e	enum:yytokentype	file:
K_TOIOPIN	def/def.tab.h	/^    K_TOIOPIN = 372,$/;"	e	enum:yytokentype
K_TOPIN	def/def.tab.cpp	/^    K_TOPIN = 360,$/;"	e	enum:yytokentype	file:
K_TOPIN	def/def.tab.h	/^    K_TOPIN = 360,$/;"	e	enum:yytokentype
K_TOPRIGHT	def/def.tab.cpp	/^    K_TOPRIGHT = 410,$/;"	e	enum:yytokentype	file:
K_TOPRIGHT	def/def.tab.h	/^    K_TOPRIGHT = 410,$/;"	e	enum:yytokentype
K_TRACKS	def/def.tab.cpp	/^    K_TRACKS = 278,$/;"	e	enum:yytokentype	file:
K_TRACKS	def/def.tab.h	/^    K_TRACKS = 278,$/;"	e	enum:yytokentype
K_TRUE	def/def.tab.cpp	/^    K_TRUE = 389,$/;"	e	enum:yytokentype	file:
K_TRUE	def/def.tab.h	/^    K_TRUE = 389,$/;"	e	enum:yytokentype
K_TRUNK	def/def.tab.cpp	/^    K_TRUNK = 481,$/;"	e	enum:yytokentype	file:
K_TRUNK	def/def.tab.h	/^    K_TRUNK = 481,$/;"	e	enum:yytokentype
K_TURNOFF	def/def.tab.cpp	/^    K_TURNOFF = 366,$/;"	e	enum:yytokentype	file:
K_TURNOFF	def/def.tab.h	/^    K_TURNOFF = 366,$/;"	e	enum:yytokentype
K_TYPE	def/def.tab.cpp	/^    K_TYPE = 488,$/;"	e	enum:yytokentype	file:
K_TYPE	def/def.tab.h	/^    K_TYPE = 488,$/;"	e	enum:yytokentype
K_UNITS	def/def.tab.cpp	/^    K_UNITS = 267,$/;"	e	enum:yytokentype	file:
K_UNITS	def/def.tab.h	/^    K_UNITS = 267,$/;"	e	enum:yytokentype
K_UNPLACED	def/def.tab.cpp	/^    K_UNPLACED = 293,$/;"	e	enum:yytokentype	file:
K_UNPLACED	def/def.tab.h	/^    K_UNPLACED = 293,$/;"	e	enum:yytokentype
K_USE	def/def.tab.cpp	/^    K_USE = 302,$/;"	e	enum:yytokentype	file:
K_USE	def/def.tab.h	/^    K_USE = 302,$/;"	e	enum:yytokentype
K_USER	def/def.tab.cpp	/^    K_USER = 477,$/;"	e	enum:yytokentype	file:
K_USER	def/def.tab.h	/^    K_USER = 477,$/;"	e	enum:yytokentype
K_VARIABLE	def/def.tab.cpp	/^    K_VARIABLE = 355,$/;"	e	enum:yytokentype	file:
K_VARIABLE	def/def.tab.h	/^    K_VARIABLE = 355,$/;"	e	enum:yytokentype
K_VERSION	def/def.tab.cpp	/^    K_VERSION = 414,$/;"	e	enum:yytokentype	file:
K_VERSION	def/def.tab.h	/^    K_VERSION = 414,$/;"	e	enum:yytokentype
K_VERTICAL	def/def.tab.cpp	/^    K_VERTICAL = 404,$/;"	e	enum:yytokentype	file:
K_VERTICAL	def/def.tab.h	/^    K_VERTICAL = 404,$/;"	e	enum:yytokentype
K_VIA	def/def.tab.cpp	/^    K_VIA = 513,$/;"	e	enum:yytokentype	file:
K_VIA	def/def.tab.h	/^    K_VIA = 513,$/;"	e	enum:yytokentype
K_VIARULE	def/def.tab.cpp	/^    K_VIARULE = 514,$/;"	e	enum:yytokentype	file:
K_VIARULE	def/def.tab.h	/^    K_VIARULE = 514,$/;"	e	enum:yytokentype
K_VIAS	def/def.tab.cpp	/^    K_VIAS = 265,$/;"	e	enum:yytokentype	file:
K_VIAS	def/def.tab.h	/^    K_VIAS = 265,$/;"	e	enum:yytokentype
K_VIRTUAL	def/def.tab.cpp	/^    K_VIRTUAL = 443,$/;"	e	enum:yytokentype	file:
K_VIRTUAL	def/def.tab.h	/^    K_VIRTUAL = 443,$/;"	e	enum:yytokentype
K_VOLTAGE	def/def.tab.cpp	/^    K_VOLTAGE = 312,$/;"	e	enum:yytokentype	file:
K_VOLTAGE	def/def.tab.h	/^    K_VOLTAGE = 312,$/;"	e	enum:yytokentype
K_VPIN	def/def.tab.cpp	/^    K_VPIN = 377,$/;"	e	enum:yytokentype	file:
K_VPIN	def/def.tab.h	/^    K_VPIN = 377,$/;"	e	enum:yytokentype
K_W	def/def.tab.cpp	/^    K_W = 319,$/;"	e	enum:yytokentype	file:
K_W	def/def.tab.h	/^    K_W = 319,$/;"	e	enum:yytokentype
K_WEIGHT	def/def.tab.cpp	/^    K_WEIGHT = 289,$/;"	e	enum:yytokentype	file:
K_WEIGHT	def/def.tab.h	/^    K_WEIGHT = 289,$/;"	e	enum:yytokentype
K_WIDTH	def/def.tab.cpp	/^    K_WIDTH = 311,$/;"	e	enum:yytokentype	file:
K_WIDTH	def/def.tab.h	/^    K_WIDTH = 311,$/;"	e	enum:yytokentype
K_WIRECAP	def/def.tab.cpp	/^    K_WIRECAP = 277,$/;"	e	enum:yytokentype	file:
K_WIRECAP	def/def.tab.h	/^    K_WIRECAP = 277,$/;"	e	enum:yytokentype
K_WIREDLOGIC	def/def.tab.cpp	/^    K_WIREDLOGIC = 346,$/;"	e	enum:yytokentype	file:
K_WIREDLOGIC	def/def.tab.h	/^    K_WIREDLOGIC = 346,$/;"	e	enum:yytokentype
K_WIREEXT	def/def.tab.cpp	/^    K_WIREEXT = 515,$/;"	e	enum:yytokentype	file:
K_WIREEXT	def/def.tab.h	/^    K_WIREEXT = 515,$/;"	e	enum:yytokentype
K_X	def/def.tab.cpp	/^    K_X = 427,$/;"	e	enum:yytokentype	file:
K_X	def/def.tab.h	/^    K_X = 427,$/;"	e	enum:yytokentype
K_XTALK	def/def.tab.cpp	/^    K_XTALK = 379,$/;"	e	enum:yytokentype	file:
K_XTALK	def/def.tab.h	/^    K_XTALK = 379,$/;"	e	enum:yytokentype
K_Y	def/def.tab.cpp	/^    K_Y = 428,$/;"	e	enum:yytokentype	file:
K_Y	def/def.tab.h	/^    K_Y = 428,$/;"	e	enum:yytokentype
Key	def/defiAlias.cpp	/^const char* defiAlias_itr::Key() {$/;"	f	class:defiAlias_itr
Keyword_set	def/defrSettings.hpp	/^    defKeywordMap Keyword_set; $/;"	m	class:defrSettings
Keyword_set	include/defrSettings.hpp	/^    defKeywordMap Keyword_set; $/;"	m	class:defrSettings
LAYER_SPEC	def/defiDefs.hpp	82;"	d
LAYER_SPEC	include/defiDefs.hpp	82;"	d
LDLIBS	defdiff/Makefile	/^LDLIBS = ..\/lib\/libdef.a$/;"	m
LDLIBS	defrw/Makefile	/^LDLIBS = ..\/lib\/libdef.a$/;"	m
LDLIBS	defwrite/Makefile	/^LDLIBS = ..\/lib\/libdef.a$/;"	m
LEFDEFZIP_H	defzlib/defzlib.hpp	31;"	d
LEFDEFZIP_H	include/defzlib.hpp	31;"	d
LEF_TABNAME	cdefzlib/Makefile	/^LEF_TABNAME     = cdefzlib$/;"	m
LIBOBJS	template.mk	/^LIBOBJS =	$(TMP2:.c=.o)$/;"	m
LIBSRCS	cdef/Makefile	/^LIBSRCS =	\\$/;"	m
LIBSRCS	cdefzlib/Makefile	/^LIBSRCS =	cdefzlib.c $/;"	m
LIBSRCS	def/Makefile	/^LIBSRCS =	\\$/;"	m
LIBSRCS	defzlib/Makefile	/^LIBSRCS =	defzlib.cpp$/;"	m
LIBTARGET	cdef/Makefile	/^LIBTARGET =	libcdef.a$/;"	m
LIBTARGET	cdefzlib/Makefile	/^LIBTARGET =	libcdefzlib.a$/;"	m
LIBTARGET	def/Makefile	/^LIBTARGET =	libdef.a$/;"	m
LIBTARGET	defzlib/Makefile	/^LIBTARGET =	libdefzlib.a$/;"	m
LineNumberFunction	def/defrSettings.hpp	/^    DEFI_LINE_NUMBER_FUNCTION LineNumberFunction;$/;"	m	class:defrSettings
LineNumberFunction	include/defrSettings.hpp	/^    DEFI_LINE_NUMBER_FUNCTION LineNumberFunction;$/;"	m	class:defrSettings
LogFileAppend	def/defrSettings.hpp	/^    int LogFileAppend; $/;"	m	class:defrSettings
LogFileAppend	include/defrSettings.hpp	/^    int LogFileAppend; $/;"	m	class:defrSettings
LongLineNumberFunction	def/defrSettings.hpp	/^    DEFI_LONG_LINE_NUMBER_FUNCTION LongLineNumberFunction;$/;"	m	class:defrSettings
LongLineNumberFunction	include/defrSettings.hpp	/^    DEFI_LONG_LINE_NUMBER_FUNCTION LongLineNumberFunction;$/;"	m	class:defrSettings
MAX	def/defiDefs.hpp	90;"	d
MAX	include/defiDefs.hpp	90;"	d
MAXCBS	def/defwWriterCalls.cpp	58;"	d	file:
MAXSYN	def/defwWriter.cpp	159;"	d	file:
MIN	def/defiDefs.hpp	86;"	d
MIN	include/defiDefs.hpp	86;"	d
MSG_SIZE	def/defrData.hpp	46;"	d
MSG_SIZE	include/defrData.hpp	46;"	d
MagicCommentFoundFunction	def/defrSettings.hpp	/^    DEFI_MAGIC_COMMENT_FOUND_FUNCTION MagicCommentFoundFunction;$/;"	m	class:defrSettings
MagicCommentFoundFunction	include/defrSettings.hpp	/^    DEFI_MAGIC_COMMENT_FOUND_FUNCTION MagicCommentFoundFunction;$/;"	m	class:defrSettings
MallocFunction	def/defrSettings.hpp	/^    DEFI_MALLOC_FUNCTION MallocFunction;$/;"	m	class:defrSettings
MallocFunction	include/defrSettings.hpp	/^    DEFI_MALLOC_FUNCTION MallocFunction;$/;"	m	class:defrSettings
Marked	def/defiAlias.cpp	/^int defiAlias_itr::Marked() {$/;"	f	class:defiAlias_itr
MsgLimit	def/defrSettings.hpp	/^    int MsgLimit[DEF_MSGS];$/;"	m	class:defrSettings
MsgLimit	include/defrSettings.hpp	/^    int MsgLimit[DEF_MSGS];$/;"	m	class:defrSettings
NDefProp	def/defrSettings.hpp	/^    defiPropType    NDefProp;$/;"	m	class:defrSession
NDefProp	include/defrSettings.hpp	/^    defiPropType    NDefProp;$/;"	m	class:defrSession
NODEFMSG	def/defrReader.cpp	46;"	d	file:
NULL	def/defiDefs.hpp	53;"	d
NULL	include/defiDefs.hpp	53;"	d
NUMBER	def/def.tab.cpp	/^    NUMBER = 261,$/;"	e	enum:yytokentype	file:
NUMBER	def/def.tab.h	/^    NUMBER = 261,$/;"	e	enum:yytokentype
NeedPathData	def/defrData.hpp	/^    int NeedPathData;$/;"	m	class:defrData
NeedPathData	include/defrData.hpp	/^    int NeedPathData;$/;"	m	class:defrData
Net	def/defrData.hpp	/^    defiNet Net;$/;"	m	class:defrData
Net	include/defrData.hpp	/^    defiNet Net;$/;"	m	class:defrData
NetCbk	def/defrCallBacks.hpp	/^    defrNetCbkFnType NetCbk;$/;"	m	class:defrCallbacks
NetCbk	include/defrCallBacks.hpp	/^    defrNetCbkFnType NetCbk;$/;"	m	class:defrCallbacks
NetConnectionExtCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType NetConnectionExtCbk;$/;"	m	class:defrCallbacks
NetConnectionExtCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType NetConnectionExtCbk;$/;"	m	class:defrCallbacks
NetEndCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType NetEndCbk;$/;"	m	class:defrCallbacks
NetEndCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType NetEndCbk;$/;"	m	class:defrCallbacks
NetExtCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType NetExtCbk;$/;"	m	class:defrCallbacks
NetExtCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType NetExtCbk;$/;"	m	class:defrCallbacks
NetNameCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType NetNameCbk;$/;"	m	class:defrCallbacks
NetNameCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType NetNameCbk;$/;"	m	class:defrCallbacks
NetNonDefaultRuleCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType NetNonDefaultRuleCbk;$/;"	m	class:defrCallbacks
NetNonDefaultRuleCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType NetNonDefaultRuleCbk;$/;"	m	class:defrCallbacks
NetPartialPathCbk	def/defrCallBacks.hpp	/^    defrNetCbkFnType NetPartialPathCbk;$/;"	m	class:defrCallbacks
NetPartialPathCbk	include/defrCallBacks.hpp	/^    defrNetCbkFnType NetPartialPathCbk;$/;"	m	class:defrCallbacks
NetProp	def/defrSettings.hpp	/^    defiPropType    NetProp;$/;"	m	class:defrSession
NetProp	include/defrSettings.hpp	/^    defiPropType    NetProp;$/;"	m	class:defrSession
NetStartCbk	def/defrCallBacks.hpp	/^    defrIntegerCbkFnType NetStartCbk;$/;"	m	class:defrCallbacks
NetStartCbk	include/defrCallBacks.hpp	/^    defrIntegerCbkFnType NetStartCbk;$/;"	m	class:defrCallbacks
NetSubnetNameCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType NetSubnetNameCbk;$/;"	m	class:defrCallbacks
NetSubnetNameCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType NetSubnetNameCbk;$/;"	m	class:defrCallbacks
NetWarnings	def/defrSettings.hpp	/^    int NetWarnings;$/;"	m	class:defrSettings
NetWarnings	include/defrSettings.hpp	/^    int NetWarnings;$/;"	m	class:defrSettings
Next	def/defiAlias.cpp	/^int defiAlias_itr::Next() {$/;"	f	class:defiAlias_itr
NonDefault	def/defrData.hpp	/^    defiNonDefault NonDefault;$/;"	m	class:defrData
NonDefault	include/defrData.hpp	/^    defiNonDefault NonDefault;$/;"	m	class:defrData
NonDefaultCbk	def/defrCallBacks.hpp	/^    defrNonDefaultCbkFnType NonDefaultCbk;$/;"	m	class:defrCallbacks
NonDefaultCbk	include/defrCallBacks.hpp	/^    defrNonDefaultCbkFnType NonDefaultCbk;$/;"	m	class:defrCallbacks
NonDefaultEndCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType NonDefaultEndCbk;$/;"	m	class:defrCallbacks
NonDefaultEndCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType NonDefaultEndCbk;$/;"	m	class:defrCallbacks
NonDefaultStartCbk	def/defrCallBacks.hpp	/^    defrIntegerCbkFnType NonDefaultStartCbk;$/;"	m	class:defrCallbacks
NonDefaultStartCbk	include/defrCallBacks.hpp	/^    defrIntegerCbkFnType NonDefaultStartCbk;$/;"	m	class:defrCallbacks
NonDefaultWarnings	def/defrSettings.hpp	/^    int NonDefaultWarnings;$/;"	m	class:defrSettings
NonDefaultWarnings	include/defrSettings.hpp	/^    int NonDefaultWarnings;$/;"	m	class:defrSettings
OPTIMIZE_FLAG	Makefile	/^OPTIMIZE_FLAG = +O2$/;"	m
OPTIMIZE_FLAG	Makefile	/^OPTIMIZE_FLAG = -O$/;"	m
OS_TYPE	Makefile	/^OS_TYPE := $(shell uname)$/;"	m
OS_TYPE	template.mk	/^OS_TYPE	:= $(shell uname -s)$/;"	m
OS_VER	Makefile	/^OS_VER := $(shell uname -r)$/;"	m
PARSE_ERROR	cdef/defrReader.h	663;"	d
PARSE_ERROR	def/defrReader.hpp	712;"	d
PARSE_ERROR	include/defrReader.h	663;"	d
PARSE_ERROR	include/defrReader.hpp	712;"	d
PARSE_OK	cdef/defrReader.h	661;"	d
PARSE_OK	def/defrReader.hpp	710;"	d
PARSE_OK	include/defrReader.h	661;"	d
PARSE_OK	include/defrReader.hpp	710;"	d
PLACED	def/def.tab.cpp	139;"	d	file:
POINT_SPEC	def/defiDefs.hpp	79;"	d
POINT_SPEC	include/defiDefs.hpp	79;"	d
PUBLIC_HDRS	cdef/Makefile	/^PUBLIC_HDRS = \\$/;"	m
PUBLIC_HDRS	cdefzlib/Makefile	/^PUBLIC_HDRS =   defzlib.h$/;"	m
PUBLIC_HDRS	def/Makefile	/^PUBLIC_HDRS = \\$/;"	m
PUBLIC_HDRS	defdiff/Makefile	/^PUBLIC_HDRS = $/;"	m
PUBLIC_HDRS	defrw/Makefile	/^PUBLIC_HDRS = $/;"	m
PUBLIC_HDRS	defwrite/Makefile	/^PUBLIC_HDRS = $/;"	m
PUBLIC_HDRS	defzlib/Makefile	/^PUBLIC_HDRS =   defzlib.hpp$/;"	m
Partition	def/defrData.hpp	/^    defiPartition Partition;$/;"	m	class:defrData
Partition	include/defrData.hpp	/^    defiPartition Partition;$/;"	m	class:defrData
PartitionCbk	def/defrCallBacks.hpp	/^    defrPartitionCbkFnType PartitionCbk;$/;"	m	class:defrCallbacks
PartitionCbk	include/defrCallBacks.hpp	/^    defrPartitionCbkFnType PartitionCbk;$/;"	m	class:defrCallbacks
PartitionsEndCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType PartitionsEndCbk;$/;"	m	class:defrCallbacks
PartitionsEndCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType PartitionsEndCbk;$/;"	m	class:defrCallbacks
PartitionsExtCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType PartitionsExtCbk;$/;"	m	class:defrCallbacks
PartitionsExtCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType PartitionsExtCbk;$/;"	m	class:defrCallbacks
PartitionsStartCbk	def/defrCallBacks.hpp	/^    defrIntegerCbkFnType PartitionsStartCbk;$/;"	m	class:defrCallbacks
PartitionsStartCbk	include/defrCallBacks.hpp	/^    defrIntegerCbkFnType PartitionsStartCbk;$/;"	m	class:defrCallbacks
PathCbk	def/defrCallBacks.hpp	/^    defrPathCbkFnType PathCbk;$/;"	m	class:defrCallbacks
PathCbk	include/defrCallBacks.hpp	/^    defrPathCbkFnType PathCbk;$/;"	m	class:defrCallbacks
PathObj	def/defrData.hpp	/^    defiPath PathObj;$/;"	m	class:defrData
PathObj	include/defrData.hpp	/^    defiPath PathObj;$/;"	m	class:defrData
Pin	def/defrData.hpp	/^    defiPin Pin;$/;"	m	class:defrData
Pin	include/defrData.hpp	/^    defiPin Pin;$/;"	m	class:defrData
PinCap	def/defrData.hpp	/^    defiPinCap PinCap;$/;"	m	class:defrData
PinCap	include/defrData.hpp	/^    defiPinCap PinCap;$/;"	m	class:defrData
PinCapCbk	def/defrCallBacks.hpp	/^    defrPinCapCbkFnType PinCapCbk;$/;"	m	class:defrCallbacks
PinCapCbk	include/defrCallBacks.hpp	/^    defrPinCapCbkFnType PinCapCbk;$/;"	m	class:defrCallbacks
PinCbk	def/defrCallBacks.hpp	/^    defrPinCbkFnType PinCbk;$/;"	m	class:defrCallbacks
PinCbk	include/defrCallBacks.hpp	/^    defrPinCbkFnType PinCbk;$/;"	m	class:defrCallbacks
PinEndCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType PinEndCbk;$/;"	m	class:defrCallbacks
PinEndCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType PinEndCbk;$/;"	m	class:defrCallbacks
PinExtCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType PinExtCbk;$/;"	m	class:defrCallbacks
PinExtCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType PinExtCbk;$/;"	m	class:defrCallbacks
PinExtWarnings	def/defrSettings.hpp	/^    int PinExtWarnings;$/;"	m	class:defrSettings
PinExtWarnings	include/defrSettings.hpp	/^    int PinExtWarnings;$/;"	m	class:defrSettings
PinProp	def/defrData.hpp	/^    defiPinProp PinProp;$/;"	m	class:defrData
PinProp	include/defrData.hpp	/^    defiPinProp PinProp;$/;"	m	class:defrData
PinPropCbk	def/defrCallBacks.hpp	/^    defrPinPropCbkFnType PinPropCbk;$/;"	m	class:defrCallbacks
PinPropCbk	include/defrCallBacks.hpp	/^    defrPinPropCbkFnType PinPropCbk;$/;"	m	class:defrCallbacks
PinPropEndCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType PinPropEndCbk;$/;"	m	class:defrCallbacks
PinPropEndCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType PinPropEndCbk;$/;"	m	class:defrCallbacks
PinPropStartCbk	def/defrCallBacks.hpp	/^    defrIntegerCbkFnType PinPropStartCbk;$/;"	m	class:defrCallbacks
PinPropStartCbk	include/defrCallBacks.hpp	/^    defrIntegerCbkFnType PinPropStartCbk;$/;"	m	class:defrCallbacks
PinWarnings	def/defrSettings.hpp	/^    int PinWarnings;$/;"	m	class:defrSettings
PinWarnings	include/defrSettings.hpp	/^    int PinWarnings;$/;"	m	class:defrSettings
Prop	def/defrData.hpp	/^    defiProp Prop;$/;"	m	class:defrData
Prop	include/defrData.hpp	/^    defiProp Prop;$/;"	m	class:defrData
PropCbk	def/defrCallBacks.hpp	/^    defrPropCbkFnType PropCbk;$/;"	m	class:defrCallbacks
PropCbk	include/defrCallBacks.hpp	/^    defrPropCbkFnType PropCbk;$/;"	m	class:defrCallbacks
PropDefEndCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType PropDefEndCbk;$/;"	m	class:defrCallbacks
PropDefEndCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType PropDefEndCbk;$/;"	m	class:defrCallbacks
PropDefStartCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType PropDefStartCbk;$/;"	m	class:defrCallbacks
PropDefStartCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType PropDefStartCbk;$/;"	m	class:defrCallbacks
QSTRING	def/def.tab.cpp	/^    QSTRING = 258,$/;"	e	enum:yytokentype	file:
QSTRING	def/def.tab.h	/^    QSTRING = 258,$/;"	e	enum:yytokentype
RING_SIZE	def/defrData.hpp	43;"	d
RING_SIZE	include/defrData.hpp	43;"	d
ROUND	def/defiDefs.hpp	93;"	d
ROUND	include/defiDefs.hpp	93;"	d
ReadFunction	def/defrSettings.hpp	/^    DEFI_READ_FUNCTION ReadFunction;$/;"	m	class:defrSettings
ReadFunction	include/defrSettings.hpp	/^    DEFI_READ_FUNCTION ReadFunction;$/;"	m	class:defrSettings
ReallocFunction	def/defrSettings.hpp	/^    DEFI_REALLOC_FUNCTION ReallocFunction;$/;"	m	class:defrSettings
ReallocFunction	include/defrSettings.hpp	/^    DEFI_REALLOC_FUNCTION ReallocFunction;$/;"	m	class:defrSettings
Region	def/defrData.hpp	/^    defiRegion Region;$/;"	m	class:defrData
Region	include/defrData.hpp	/^    defiRegion Region;$/;"	m	class:defrData
RegionCbk	def/defrCallBacks.hpp	/^    defrRegionCbkFnType RegionCbk;$/;"	m	class:defrCallbacks
RegionCbk	include/defrCallBacks.hpp	/^    defrRegionCbkFnType RegionCbk;$/;"	m	class:defrCallbacks
RegionEndCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType RegionEndCbk;$/;"	m	class:defrCallbacks
RegionEndCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType RegionEndCbk;$/;"	m	class:defrCallbacks
RegionProp	def/defrSettings.hpp	/^    defiPropType    RegionProp;$/;"	m	class:defrSession
RegionProp	include/defrSettings.hpp	/^    defiPropType    RegionProp;$/;"	m	class:defrSession
RegionStartCbk	def/defrCallBacks.hpp	/^    defrIntegerCbkFnType RegionStartCbk;$/;"	m	class:defrCallbacks
RegionStartCbk	include/defrCallBacks.hpp	/^    defrIntegerCbkFnType RegionStartCbk;$/;"	m	class:defrCallbacks
RegionWarnings	def/defrSettings.hpp	/^    int RegionWarnings;$/;"	m	class:defrSettings
RegionWarnings	include/defrSettings.hpp	/^    int RegionWarnings;$/;"	m	class:defrSettings
Reset	def/defiMisc.cpp	/^void defiGeometries::Reset() {$/;"	f	class:defiGeometries
Row	def/defrData.hpp	/^    defiRow Row;$/;"	m	class:defrData
Row	include/defrData.hpp	/^    defiRow Row;$/;"	m	class:defrData
RowCbk	def/defrCallBacks.hpp	/^    defrRowCbkFnType RowCbk;$/;"	m	class:defrCallbacks
RowCbk	include/defrCallBacks.hpp	/^    defrRowCbkFnType RowCbk;$/;"	m	class:defrCallbacks
RowProp	def/defrSettings.hpp	/^    defiPropType    RowProp;$/;"	m	class:defrSession
RowProp	include/defrSettings.hpp	/^    defiPropType    RowProp;$/;"	m	class:defrSession
RowWarnings	def/defrSettings.hpp	/^    int RowWarnings;$/;"	m	class:defrSettings
RowWarnings	include/defrSettings.hpp	/^    int RowWarnings;$/;"	m	class:defrSettings
SHAPE_SPEC	def/defiDefs.hpp	83;"	d
SHAPE_SPEC	include/defiDefs.hpp	83;"	d
SHELL	template.mk	/^SHELL=\/bin\/sh$/;"	m
SITE_PATTERN	def/def.tab.cpp	/^    SITE_PATTERN = 260,$/;"	e	enum:yytokentype	file:
SITE_PATTERN	def/def.tab.h	/^    SITE_PATTERN = 260,$/;"	e	enum:yytokentype
SNetCbk	def/defrCallBacks.hpp	/^    defrNetCbkFnType SNetCbk;$/;"	m	class:defrCallbacks
SNetCbk	include/defrCallBacks.hpp	/^    defrNetCbkFnType SNetCbk;$/;"	m	class:defrCallbacks
SNetEndCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType SNetEndCbk;$/;"	m	class:defrCallbacks
SNetEndCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType SNetEndCbk;$/;"	m	class:defrCallbacks
SNetPartialPathCbk	def/defrCallBacks.hpp	/^    defrNetCbkFnType SNetPartialPathCbk;$/;"	m	class:defrCallbacks
SNetPartialPathCbk	include/defrCallBacks.hpp	/^    defrNetCbkFnType SNetPartialPathCbk;$/;"	m	class:defrCallbacks
SNetProp	def/defrSettings.hpp	/^    defiPropType    SNetProp;$/;"	m	class:defrSession
SNetProp	include/defrSettings.hpp	/^    defiPropType    SNetProp;$/;"	m	class:defrSession
SNetStartCbk	def/defrCallBacks.hpp	/^    defrIntegerCbkFnType SNetStartCbk;$/;"	m	class:defrCallbacks
SNetStartCbk	include/defrCallBacks.hpp	/^    defrIntegerCbkFnType SNetStartCbk;$/;"	m	class:defrCallbacks
SNetWarnings	def/defrSettings.hpp	/^    int SNetWarnings;$/;"	m	class:defrSettings
SNetWarnings	include/defrSettings.hpp	/^    int SNetWarnings;$/;"	m	class:defrSettings
SNetWireCbk	def/defrCallBacks.hpp	/^    defrNetCbkFnType SNetWireCbk;$/;"	m	class:defrCallbacks
SNetWireCbk	include/defrCallBacks.hpp	/^    defrNetCbkFnType SNetWireCbk;$/;"	m	class:defrCallbacks
START_LIST	def/defiDefs.hpp	78;"	d
START_LIST	include/defiDefs.hpp	78;"	d
STOP_PARSE	cdef/defrReader.h	662;"	d
STOP_PARSE	def/defrReader.hpp	711;"	d
STOP_PARSE	include/defrReader.h	662;"	d
STOP_PARSE	include/defrReader.hpp	711;"	d
ScanChainExtCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType ScanChainExtCbk;$/;"	m	class:defrCallbacks
ScanChainExtCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType ScanChainExtCbk;$/;"	m	class:defrCallbacks
Scanchain	def/defrData.hpp	/^    defiScanchain Scanchain;$/;"	m	class:defrData
Scanchain	include/defrData.hpp	/^    defiScanchain Scanchain;$/;"	m	class:defrData
ScanchainCbk	def/defrCallBacks.hpp	/^    defrScanchainCbkFnType ScanchainCbk;$/;"	m	class:defrCallbacks
ScanchainCbk	include/defrCallBacks.hpp	/^    defrScanchainCbkFnType ScanchainCbk;$/;"	m	class:defrCallbacks
ScanchainWarnings	def/defrSettings.hpp	/^    int ScanchainWarnings;$/;"	m	class:defrSettings
ScanchainWarnings	include/defrSettings.hpp	/^    int ScanchainWarnings;$/;"	m	class:defrSettings
ScanchainsEndCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType ScanchainsEndCbk;$/;"	m	class:defrCallbacks
ScanchainsEndCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType ScanchainsEndCbk;$/;"	m	class:defrCallbacks
ScanchainsStartCbk	def/defrCallBacks.hpp	/^    defrIntegerCbkFnType ScanchainsStartCbk;$/;"	m	class:defrCallbacks
ScanchainsStartCbk	include/defrCallBacks.hpp	/^    defrIntegerCbkFnType ScanchainsStartCbk;$/;"	m	class:defrCallbacks
SetUnusedCallbacks	def/defrCallbacks.cpp	/^defrCallbacks::SetUnusedCallbacks(defrVoidCbkFnType f)$/;"	f	class:defrCallbacks
Setup	def/defiPinCap.cpp	/^void defiPin::Setup(const char* pinName, const char* netName) {$/;"	f	class:defiPin
Site	def/defrData.hpp	/^    defiSite Site;$/;"	m	class:defrData
Site	include/defrData.hpp	/^    defiSite Site;$/;"	m	class:defrData
SiteCbk	def/defrCallBacks.hpp	/^    defrSiteCbkFnType SiteCbk;$/;"	m	class:defrCallbacks
SiteCbk	include/defrCallBacks.hpp	/^    defrSiteCbkFnType SiteCbk;$/;"	m	class:defrCallbacks
Slot	def/defrData.hpp	/^    defiSlot Slot;$/;"	m	class:defrData
Slot	include/defrData.hpp	/^    defiSlot Slot;$/;"	m	class:defrData
SlotCbk	def/defrCallBacks.hpp	/^    defrSlotCbkFnType SlotCbk;$/;"	m	class:defrCallbacks
SlotCbk	include/defrCallBacks.hpp	/^    defrSlotCbkFnType SlotCbk;$/;"	m	class:defrCallbacks
SlotEndCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType SlotEndCbk;$/;"	m	class:defrCallbacks
SlotEndCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType SlotEndCbk;$/;"	m	class:defrCallbacks
SlotStartCbk	def/defrCallBacks.hpp	/^    defrIntegerCbkFnType SlotStartCbk;$/;"	m	class:defrCallbacks
SlotStartCbk	include/defrCallBacks.hpp	/^    defrIntegerCbkFnType SlotStartCbk;$/;"	m	class:defrCallbacks
StartPinsCbk	def/defrCallBacks.hpp	/^    defrIntegerCbkFnType StartPinsCbk;$/;"	m	class:defrCallbacks
StartPinsCbk	include/defrCallBacks.hpp	/^    defrIntegerCbkFnType StartPinsCbk;$/;"	m	class:defrCallbacks
StoreAlias	def/def_keywords.cpp	/^defrData::StoreAlias()$/;"	f	class:defrData
Styles	def/defrData.hpp	/^    defiStyles Styles;$/;"	m	class:defrData
Styles	include/defrData.hpp	/^    defiStyles Styles;$/;"	m	class:defrData
StylesCbk	def/defrCallBacks.hpp	/^    defrStylesCbkFnType StylesCbk;$/;"	m	class:defrCallbacks
StylesCbk	include/defrCallBacks.hpp	/^    defrStylesCbkFnType StylesCbk;$/;"	m	class:defrCallbacks
StylesEndCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType StylesEndCbk;$/;"	m	class:defrCallbacks
StylesEndCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType StylesEndCbk;$/;"	m	class:defrCallbacks
StylesStartCbk	def/defrCallBacks.hpp	/^    defrIntegerCbkFnType StylesStartCbk;$/;"	m	class:defrCallbacks
StylesStartCbk	include/defrCallBacks.hpp	/^    defrIntegerCbkFnType StylesStartCbk;$/;"	m	class:defrCallbacks
StylesWarnings	def/defrSettings.hpp	/^    int StylesWarnings;$/;"	m	class:defrSettings
StylesWarnings	include/defrSettings.hpp	/^    int StylesWarnings;$/;"	m	class:defrSettings
Subnet	def/defrData.hpp	/^    defiSubnet* Subnet;$/;"	m	class:defrData
Subnet	include/defrData.hpp	/^    defiSubnet* Subnet;$/;"	m	class:defrData
TEST_FILE	TEST/Makefile	/^TEST_FILE = complete.5.8.def$/;"	m
TEST_GOLD	TEST/Makefile	/^TEST_GOLD = complete.5.8.def.au$/;"	m
TMP1	template.mk	/^TMP1	=	$(LIBSRCS:.cpp=.o)$/;"	m
TMP2	template.mk	/^TMP2	=	$(TMP1:.cc=.o)$/;"	m
TMP3	template.mk	/^TMP3	=	$(BINSRCS:.cpp=.o)$/;"	m
TMP4	template.mk	/^TMP4	=	$(TMP3:.cc=.o)$/;"	m
TOKEN_SIZE	def/defrData.hpp	45;"	d
TOKEN_SIZE	include/defrData.hpp	45;"	d
TRUE	def/defiDefs.hpp	45;"	d
TRUE	include/defiDefs.hpp	45;"	d
TSIZE	cdef/defMsgTable.h	10;"	d
TSIZE	cdef/defMsgTable.h	11;"	d
T_STRING	def/def.tab.cpp	/^    T_STRING = 259,$/;"	e	enum:yytokentype	file:
T_STRING	def/def.tab.h	/^    T_STRING = 259,$/;"	e	enum:yytokentype
TechnologyCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType TechnologyCbk;$/;"	m	class:defrCallbacks
TechnologyCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType TechnologyCbk;$/;"	m	class:defrCallbacks
TimingDisable	def/defrData.hpp	/^    defiTimingDisable TimingDisable;$/;"	m	class:defrData
TimingDisable	include/defrData.hpp	/^    defiTimingDisable TimingDisable;$/;"	m	class:defrData
TimingDisableCbk	def/defrCallBacks.hpp	/^    defrTimingDisableCbkFnType TimingDisableCbk;$/;"	m	class:defrCallbacks
TimingDisableCbk	include/defrCallBacks.hpp	/^    defrTimingDisableCbkFnType TimingDisableCbk;$/;"	m	class:defrCallbacks
TimingDisablesEndCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType TimingDisablesEndCbk;$/;"	m	class:defrCallbacks
TimingDisablesEndCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType TimingDisablesEndCbk;$/;"	m	class:defrCallbacks
TimingDisablesStartCbk	def/defrCallBacks.hpp	/^    defrIntegerCbkFnType TimingDisablesStartCbk;$/;"	m	class:defrCallbacks
TimingDisablesStartCbk	include/defrCallBacks.hpp	/^    defrIntegerCbkFnType TimingDisablesStartCbk;$/;"	m	class:defrCallbacks
Track	def/defrData.hpp	/^    defiTrack Track;$/;"	m	class:defrData
Track	include/defrData.hpp	/^    defiTrack Track;$/;"	m	class:defrData
TrackCbk	def/defrCallBacks.hpp	/^    defrTrackCbkFnType TrackCbk;$/;"	m	class:defrCallbacks
TrackCbk	include/defrCallBacks.hpp	/^    defrTrackCbkFnType TrackCbk;$/;"	m	class:defrCallbacks
TrackWarnings	def/defrSettings.hpp	/^    int TrackWarnings;$/;"	m	class:defrSettings
TrackWarnings	include/defrSettings.hpp	/^    int TrackWarnings;$/;"	m	class:defrSettings
UNGETC	def/def_keywords.cpp	/^defrData::UNGETC(char ch) {$/;"	f	class:defrData
UNPLACED	def/def.tab.cpp	140;"	d	file:
USE_LEFDEF_PARSER_NAMESPACE	def/defiKRDefs.hpp	35;"	d
USE_LEFDEF_PARSER_NAMESPACE	include/defiKRDefs.hpp	35;"	d
UnitsCbk	def/defrCallBacks.hpp	/^    defrDoubleCbkFnType UnitsCbk;$/;"	m	class:defrCallbacks
UnitsCbk	include/defrCallBacks.hpp	/^    defrDoubleCbkFnType UnitsCbk;$/;"	m	class:defrCallbacks
UnitsWarnings	def/defrSettings.hpp	/^    int UnitsWarnings;$/;"	m	class:defrSettings
UnitsWarnings	include/defrSettings.hpp	/^    int UnitsWarnings;$/;"	m	class:defrSettings
UnusedCallbacks	def/defrSettings.hpp	/^    int UnusedCallbacks[CBMAX];$/;"	m	class:defrSettings
UnusedCallbacks	include/defrSettings.hpp	/^    int UnusedCallbacks[CBMAX];$/;"	m	class:defrSettings
UserData	def/defrSettings.hpp	/^    defiUserData    UserData;$/;"	m	class:defrSession
UserData	include/defrSettings.hpp	/^    defiUserData    UserData;$/;"	m	class:defrSession
VIA_SPEC	def/defiDefs.hpp	80;"	d
VIA_SPEC	include/defiDefs.hpp	80;"	d
VersionCbk	def/defrCallBacks.hpp	/^    defrDoubleCbkFnType VersionCbk;$/;"	m	class:defrCallbacks
VersionCbk	include/defrCallBacks.hpp	/^    defrDoubleCbkFnType VersionCbk;$/;"	m	class:defrCallbacks
VersionIdent	defdiff/differDef.cpp	/^char* VersionIdent = "N\/A";$/;"	v
VersionNum	def/defrData.hpp	/^    double VersionNum;$/;"	m	class:defrData
VersionNum	include/defrData.hpp	/^    double VersionNum;$/;"	m	class:defrData
VersionStrCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType VersionStrCbk;$/;"	m	class:defrCallbacks
VersionStrCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType VersionStrCbk;$/;"	m	class:defrCallbacks
VersionWarnings	def/defrSettings.hpp	/^    int VersionWarnings;$/;"	m	class:defrSettings
VersionWarnings	include/defrSettings.hpp	/^    int VersionWarnings;$/;"	m	class:defrSettings
Via	def/defrData.hpp	/^    defiVia Via;$/;"	m	class:defrData
Via	include/defrData.hpp	/^    defiVia Via;$/;"	m	class:defrData
ViaCbk	def/defrCallBacks.hpp	/^    defrViaCbkFnType ViaCbk;$/;"	m	class:defrCallbacks
ViaCbk	include/defrCallBacks.hpp	/^    defrViaCbkFnType ViaCbk;$/;"	m	class:defrCallbacks
ViaEndCbk	def/defrCallBacks.hpp	/^    defrVoidCbkFnType ViaEndCbk;$/;"	m	class:defrCallbacks
ViaEndCbk	include/defrCallBacks.hpp	/^    defrVoidCbkFnType ViaEndCbk;$/;"	m	class:defrCallbacks
ViaExtCbk	def/defrCallBacks.hpp	/^    defrStringCbkFnType ViaExtCbk;$/;"	m	class:defrCallbacks
ViaExtCbk	include/defrCallBacks.hpp	/^    defrStringCbkFnType ViaExtCbk;$/;"	m	class:defrCallbacks
ViaStartCbk	def/defrCallBacks.hpp	/^    defrIntegerCbkFnType ViaStartCbk;$/;"	m	class:defrCallbacks
ViaStartCbk	include/defrCallBacks.hpp	/^    defrIntegerCbkFnType ViaStartCbk;$/;"	m	class:defrCallbacks
ViaWarnings	def/defrSettings.hpp	/^    int ViaWarnings;$/;"	m	class:defrSettings
ViaWarnings	include/defrSettings.hpp	/^    int ViaWarnings;$/;"	m	class:defrSettings
WIDTH_SPEC	def/defiDefs.hpp	81;"	d
WIDTH_SPEC	include/defiDefs.hpp	81;"	d
WRITER_CALLBACK	def/defwWriterCalls.cpp	103;"	d	file:
WarningLogFunction	def/defrSettings.hpp	/^    DEFI_WARNING_LOG_FUNCTION WarningLogFunction;$/;"	m	class:defrSettings
WarningLogFunction	include/defrSettings.hpp	/^    DEFI_WARNING_LOG_FUNCTION WarningLogFunction;$/;"	m	class:defrSettings
XTalk	def/defiNet.cpp	/^int defiNet::XTalk() const {$/;"	f	class:defiNet
YYABORT	def/def.tab.cpp	2246;"	d	file:
YYACCEPT	def/def.tab.cpp	2245;"	d	file:
YYBACKUP	def/def.tab.cpp	2252;"	d	file:
YYBISON	def/def.tab.cpp	44;"	d	file:
YYBISON_VERSION	def/def.tab.cpp	47;"	d	file:
YYCASE_	def/def.tab.cpp	2594;"	d	file:
YYCASE_	def/def.tab.cpp	2604;"	d	file:
YYCOPY	def/def.tab.cpp	677;"	d	file:
YYCOPY	def/def.tab.cpp	680;"	d	file:
YYCOPY_NEEDED	def/def.tab.cpp	652;"	d	file:
YYDEBUG	def/def.tab.cpp	166;"	d	file:
YYDEBUG	def/def.tab.cpp	81;"	d	file:
YYDEBUG	def/def.tab.h	37;"	d
YYDPRINTF	def/def.tab.cpp	2283;"	d	file:
YYDPRINTF	def/def.tab.cpp	2399;"	d	file:
YYEMPTY	def/def.tab.cpp	2242;"	d	file:
YYEOF	def/def.tab.cpp	2243;"	d	file:
YYERRCODE	def/def.tab.cpp	2271;"	d	file:
YYERROR	def/def.tab.cpp	2247;"	d	file:
YYERROR_VERBOSE	def/def.tab.cpp	154;"	d	file:
YYERROR_VERBOSE	def/def.tab.cpp	155;"	d	file:
YYERROR_VERBOSE	def/def.tab.cpp	157;"	d	file:
YYFINAL	def/def.tab.cpp	693;"	d	file:
YYFPRINTF	def/def.tab.cpp	2280;"	d	file:
YYFREE	def/def.tab.cpp	623;"	d	file:
YYINITDEPTH	def/def.tab.cpp	2408;"	d	file:
YYLAST	def/def.tab.cpp	695;"	d	file:
YYMALLOC	def/def.tab.cpp	617;"	d	file:
YYMAXDEPTH	def/def.tab.cpp	2419;"	d	file:
YYMAXUTOK	def/def.tab.cpp	709;"	d	file:
YYNNTS	def/def.tab.cpp	700;"	d	file:
YYNRULES	def/def.tab.cpp	702;"	d	file:
YYNSTATES	def/def.tab.cpp	704;"	d	file:
YYNTOKENS	def/def.tab.cpp	698;"	d	file:
YYPACT_NINF	def/def.tab.cpp	1082;"	d	file:
YYPOPSTACK	def/def.tab.cpp	2724;"	d	file:
YYPULL	def/def.tab.cpp	59;"	d	file:
YYPURE	def/def.tab.cpp	53;"	d	file:
YYPUSH	def/def.tab.cpp	56;"	d	file:
YYRECOVERING	def/def.tab.cpp	2250;"	d	file:
YYSIZE_MAXIMUM	def/def.tab.cpp	496;"	d	file:
YYSIZE_T	def/def.tab.cpp	485;"	d	file:
YYSIZE_T	def/def.tab.cpp	487;"	d	file:
YYSIZE_T	def/def.tab.cpp	490;"	d	file:
YYSIZE_T	def/def.tab.cpp	492;"	d	file:
YYSKELETON_NAME	def/def.tab.cpp	50;"	d	file:
YYSTACK_ALLOC	def/def.tab.cpp	571;"	d	file:
YYSTACK_ALLOC	def/def.tab.cpp	575;"	d	file:
YYSTACK_ALLOC	def/def.tab.cpp	580;"	d	file:
YYSTACK_ALLOC	def/def.tab.cpp	603;"	d	file:
YYSTACK_ALLOC_MAXIMUM	def/def.tab.cpp	600;"	d	file:
YYSTACK_ALLOC_MAXIMUM	def/def.tab.cpp	606;"	d	file:
YYSTACK_BYTES	def/def.tab.cpp	648;"	d	file:
YYSTACK_FREE	def/def.tab.cpp	594;"	d	file:
YYSTACK_FREE	def/def.tab.cpp	604;"	d	file:
YYSTACK_GAP_MAXIMUM	def/def.tab.cpp	644;"	d	file:
YYSTACK_RELOCATE	def/def.tab.cpp	659;"	d	file:
YYSTYPE	def/defrData.hpp	/^} YYSTYPE;$/;"	t	typeref:union:__anon12
YYSTYPE	include/defrData.hpp	/^} YYSTYPE;$/;"	t	typeref:union:__anon6
YYSTYPE_IS_DECLARED	def/defrData.hpp	70;"	d
YYSTYPE_IS_DECLARED	include/defrData.hpp	70;"	d
YYTABLE_NINF	def/def.tab.cpp	1087;"	d	file:
YYTERROR	def/def.tab.cpp	2270;"	d	file:
YYTOKENTYPE	def/def.tab.cpp	174;"	d	file:
YYTOKENTYPE	def/def.tab.h	45;"	d
YYTRANSLATE	def/def.tab.cpp	711;"	d	file:
YYUNDEFTOK	def/def.tab.cpp	708;"	d	file:
YYUSE	def/def.tab.cpp	539;"	d	file:
YYUSE	def/def.tab.cpp	541;"	d	file:
YY_	def/def.tab.cpp	502;"	d	file:
YY_	def/def.tab.cpp	506;"	d	file:
YY_ATTRIBUTE	def/def.tab.cpp	514;"	d	file:
YY_ATTRIBUTE	def/def.tab.cpp	516;"	d	file:
YY_ATTRIBUTE_PURE	def/def.tab.cpp	521;"	d	file:
YY_ATTRIBUTE_UNUSED	def/def.tab.cpp	525;"	d	file:
YY_DEFYY_DEF_TAB_H_INCLUDED	def/def.tab.cpp	163;"	d	file:
YY_DEFYY_DEF_TAB_H_INCLUDED	def/def.tab.h	34;"	d
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	def/def.tab.cpp	546;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_BEGIN	def/def.tab.cpp	556;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	def/def.tab.cpp	550;"	d	file:
YY_IGNORE_MAYBE_UNINITIALIZED_END	def/def.tab.cpp	557;"	d	file:
YY_INITIAL_VALUE	def/def.tab.cpp	553;"	d	file:
YY_INITIAL_VALUE	def/def.tab.cpp	560;"	d	file:
YY_LOCATION_PRINT	def/def.tab.cpp	2291;"	d	file:
YY_NULLPTR	def/def.tab.cpp	146;"	d	file:
YY_NULLPTR	def/def.tab.cpp	148;"	d	file:
YY_REDUCE_PRINT	def/def.tab.cpp	2389;"	d	file:
YY_REDUCE_PRINT	def/def.tab.cpp	2402;"	d	file:
YY_STACK_PRINT	def/def.tab.cpp	2358;"	d	file:
YY_STACK_PRINT	def/def.tab.cpp	2401;"	d	file:
YY_SYMBOL_PRINT	def/def.tab.cpp	2295;"	d	file:
YY_SYMBOL_PRINT	def/def.tab.cpp	2400;"	d	file:
_Noreturn	def/def.tab.cpp	531;"	d	file:
_Noreturn	def/def.tab.cpp	533;"	d	file:
aOxide	def/defrData.hpp	/^    int  aOxide; \/\/ keep track for oxide$/;"	m	class:defrData
aOxide	include/defrData.hpp	/^    int  aOxide; \/\/ keep track for oxide$/;"	m	class:defrData
ad	def/defiPartition.cpp	/^static char* ad(const char* in) {$/;"	f	file:
addAPinDiffArea	def/defiPinCap.cpp	/^void defiPin::addAPinDiffArea(int value, const char* layer) {$/;"	f	class:defiPin
addAPinGateArea	def/defiPinCap.cpp	/^void defiPin::addAPinGateArea(int value, const char* layer) {$/;"	f	class:defiPin
addAPinGateArea	def/defiPinCap.cpp	/^void defiPinAntennaModel::addAPinGateArea(int value, const char* layer) {$/;"	f	class:defiPinAntennaModel
addAPinMaxAreaCar	def/defiPinCap.cpp	/^void defiPin::addAPinMaxAreaCar(int value, const char* layer) {$/;"	f	class:defiPin
addAPinMaxAreaCar	def/defiPinCap.cpp	/^void defiPinAntennaModel::addAPinMaxAreaCar(int value, const char* layer) {$/;"	f	class:defiPinAntennaModel
addAPinMaxCutCar	def/defiPinCap.cpp	/^void defiPin::addAPinMaxCutCar(int value, const char* layer) {$/;"	f	class:defiPin
addAPinMaxCutCar	def/defiPinCap.cpp	/^void defiPinAntennaModel::addAPinMaxCutCar(int value, const char* layer) {$/;"	f	class:defiPinAntennaModel
addAPinMaxSideAreaCar	def/defiPinCap.cpp	/^void defiPin::addAPinMaxSideAreaCar(int value, const char* layer) {$/;"	f	class:defiPin
addAPinMaxSideAreaCar	def/defiPinCap.cpp	/^void defiPinAntennaModel::addAPinMaxSideAreaCar(int value, const char* layer) {$/;"	f	class:defiPinAntennaModel
addAPinPartialCutArea	def/defiPinCap.cpp	/^void defiPin::addAPinPartialCutArea(int value, const char* layer) {$/;"	f	class:defiPin
addAPinPartialMetalArea	def/defiPinCap.cpp	/^void defiPin::addAPinPartialMetalArea(int value, const char* layer) {$/;"	f	class:defiPin
addAPinPartialMetalSideArea	def/defiPinCap.cpp	/^void defiPin::addAPinPartialMetalSideArea(int value, const char* layer) {$/;"	f	class:defiPin
addAntennaModel	def/defiPinCap.cpp	/^void defiPin::addAntennaModel(int oxide) {$/;"	f	class:defiPin
addComps	def/defiFPC.cpp	/^void defiFPC::addComps(const char* name) {$/;"	f	class:defiFPC
addCutPattern	def/defiVia.cpp	/^void defiVia::addCutPattern(char* cutPattern) {$/;"	f	class:defiVia
addDiagWidth	def/defiNonDefault.cpp	/^void defiNonDefault::addDiagWidth(double num) { $/;"	f	class:defiNonDefault
addFallMax	def/defiPartition.cpp	/^void defiPartition::addFallMax(double d) {$/;"	f	class:defiPartition
addFallMaxRange	def/defiPartition.cpp	/^void defiPartition::addFallMaxRange(double l, double h) {$/;"	f	class:defiPartition
addFallMin	def/defiPartition.cpp	/^void defiPartition::addFallMin(double d) {$/;"	f	class:defiPartition
addFallMinRange	def/defiPartition.cpp	/^void defiPartition::addFallMinRange(double l, double h) {$/;"	f	class:defiPartition
addFloatingIn	def/defiScanchain.cpp	/^void defiScanchain::addFloatingIn(const char* name) {$/;"	f	class:defiScanchain
addFloatingInst	def/defiScanchain.cpp	/^void defiScanchain::addFloatingInst(const char* name) {$/;"	f	class:defiScanchain
addFloatingOut	def/defiScanchain.cpp	/^void defiScanchain::addFloatingOut(const char* name) {$/;"	f	class:defiScanchain
addFlushPoint	def/defiPath.cpp	/^void defiPath::addFlushPoint(int x, int y, int ext) {$/;"	f	class:defiPath
addIn	def/defiScanchain.cpp	/^void defiOrdered::addIn(const char* pin) {$/;"	f	class:defiOrdered
addItem	def/defiFPC.cpp	/^void defiFPC::addItem(char item, const char* name) {$/;"	f	class:defiFPC
addLayer	def/defiNonDefault.cpp	/^void defiNonDefault::addLayer(const char* name) { $/;"	f	class:defiNonDefault
addLayer	def/defiPath.cpp	/^void defiPath::addLayer(const char* l) {$/;"	f	class:defiPath
addLayer	def/defiPinCap.cpp	/^void defiPin::addLayer(const char* layer) {$/;"	f	class:defiPin
addLayer	def/defiPinCap.cpp	/^void defiPinPort::addLayer(const char* layer) {$/;"	f	class:defiPinPort
addLayer	def/defiRowTrack.cpp	/^void defiTrack::addLayer(const char* layer) {$/;"	f	class:defiTrack
addLayer	def/defiVia.cpp	/^void defiVia::addLayer(const char* layer, int xl, int yl, int xh, int yh, int colorMask) {$/;"	f	class:defiVia
addLayerDesignRuleWidth	def/defiPinCap.cpp	/^void defiPin::addLayerDesignRuleWidth(int effectiveWidth) {$/;"	f	class:defiPin
addLayerDesignRuleWidth	def/defiPinCap.cpp	/^void defiPinPort::addLayerDesignRuleWidth(int effectiveWidth) {$/;"	f	class:defiPinPort
addLayerMask	def/defiPinCap.cpp	/^void defiPin::addLayerMask(int mask) {$/;"	f	class:defiPin
addLayerMask	def/defiPinCap.cpp	/^void defiPinPort::addLayerMask(int mask) {$/;"	f	class:defiPinPort
addLayerPts	def/defiPinCap.cpp	/^void defiPin::addLayerPts(int xl, int yl, int xh, int yh) {$/;"	f	class:defiPin
addLayerPts	def/defiPinCap.cpp	/^void defiPinPort::addLayerPts(int xl, int yl, int xh, int yh) {$/;"	f	class:defiPinPort
addLayerSpacing	def/defiPinCap.cpp	/^void defiPin::addLayerSpacing(int minSpacing) {$/;"	f	class:defiPin
addLayerSpacing	def/defiPinCap.cpp	/^void defiPinPort::addLayerSpacing(int minSpacing) {$/;"	f	class:defiPinPort
addMask	def/defiPath.cpp	/^void defiPath::addMask(int colorMask) {$/;"	f	class:defiPath
addMask	def/defiRowTrack.cpp	/^void defiTrack::addMask(int colorMask, int sameMask) {$/;"	f	class:defiTrack
addMaskShiftLayer	def/defiComponent.cpp	/^void defiComponentMaskShiftLayer::addMaskShiftLayer(const char* layer) {$/;"	f	class:defiComponentMaskShiftLayer
addMinCuts	def/defiNonDefault.cpp	/^void defiNonDefault::addMinCuts(const char* name, int numCuts) {$/;"	f	class:defiNonDefault
addMustPin	def/defiNet.cpp	/^void defiNet::addMustPin(const char* instance, const char* pin, int syn) {$/;"	f	class:defiNet
addMustPin	def/defiNet.cpp	/^void defiSubnet::addMustPin(const char* instance, const char* pin, int syn) {$/;"	f	class:defiSubnet
addNet	def/defiAssertion.cpp	/^void defiAssertion::addNet(const char* name) {$/;"	f	class:defiAssertion
addNet	def/defiComponent.cpp	/^void defiComponent::addNet(const char* net) {$/;"	f	class:defiComponent
addNoShield	def/defiNet.cpp	/^void defiNet::addNoShield(const char* name) {$/;"	f	class:defiNet
addNumProp	def/defiNet.cpp	/^void defiNet::addNumProp(const char* name, const double d,$/;"	f	class:defiNet
addNumProperty	def/defiComponent.cpp	/^void defiComponent::addNumProperty(const char* name, const double d,$/;"	f	class:defiComponent
addNumProperty	def/defiGroup.cpp	/^void defiGroup::addNumProperty(const char* name, const double d,$/;"	f	class:defiGroup
addNumProperty	def/defiNonDefault.cpp	/^void defiNonDefault::addNumProperty(const char* name, const double d,$/;"	f	class:defiNonDefault
addNumProperty	def/defiPinProp.cpp	/^void defiPinProp::addNumProperty(const char* name, const double d,$/;"	f	class:defiPinProp
addNumProperty	def/defiRegion.cpp	/^void defiRegion::addNumProperty(const char* name, const double d,$/;"	f	class:defiRegion
addNumProperty	def/defiRowTrack.cpp	/^void defiRow::addNumProperty(const char* name, const double d,$/;"	f	class:defiRow
addOffset	def/defiVia.cpp	/^void defiVia::addOffset(int xBotOs, int yBotOs, int xTopOs, int yTopOs) {$/;"	f	class:defiVia
addOrdered	def/defiScanchain.cpp	/^void defiOrdered::addOrdered(const char* inst) {$/;"	f	class:defiOrdered
addOrderedIn	def/defiScanchain.cpp	/^void defiScanchain::addOrderedIn(const char* name) {$/;"	f	class:defiScanchain
addOrderedInst	def/defiScanchain.cpp	/^void defiScanchain::addOrderedInst(const char* name) {$/;"	f	class:defiScanchain
addOrderedList	def/defiScanchain.cpp	/^void defiScanchain::addOrderedList() {$/;"	f	class:defiScanchain
addOrderedOut	def/defiScanchain.cpp	/^void defiScanchain::addOrderedOut(const char* name) {$/;"	f	class:defiScanchain
addOrigin	def/defiVia.cpp	/^void defiVia::addOrigin(int xOffset, int yOffset) {$/;"	f	class:defiVia
addOut	def/defiScanchain.cpp	/^void defiOrdered::addOut(const char* pin) {$/;"	f	class:defiOrdered
addPath	def/defiAssertion.cpp	/^void defiAssertion::addPath(const char* fromInst, const char* fromPin,$/;"	f	class:defiAssertion
addPath	def/defiNet.cpp	/^void defiShield::addPath(defiPath* p, int reset, int netOsnet, int *needCbk) {$/;"	f	class:defiShield
addPath	def/defiNet.cpp	/^void defiSubnet::addPath(defiPath* p, int reset, int netOsnet, int *needCbk) {$/;"	f	class:defiSubnet
addPath	def/defiNet.cpp	/^void defiWire::addPath(defiPath* p, int reset, int netOsnet, int *needCbk) {$/;"	f	class:defiWire
addPattern	def/defiVia.cpp	/^void defiVia::addPattern(const char* pattern) {$/;"	f	class:defiVia
addPin	def/defiNet.cpp	/^void defiNet::addPin(const char* instance, const char* pin, int syn) {$/;"	f	class:defiNet
addPin	def/defiNet.cpp	/^void defiSubnet::addPin(const char* instance, const char* pin, int syn) {$/;"	f	class:defiSubnet
addPin	def/defiPartition.cpp	/^void defiPartition::addPin(const char* name) {$/;"	f	class:defiPartition
addPoint	def/defiPath.cpp	/^void defiPath::addPoint(int x, int y) {$/;"	f	class:defiPath
addPoint	def/defiSite.cpp	/^void defiBox::addPoint(defiGeometries* geom) {$/;"	f	class:defiBox
addPolyDesignRuleWidth	def/defiPinCap.cpp	/^void defiPin::addPolyDesignRuleWidth(int effectiveWidth) {$/;"	f	class:defiPin
addPolyDesignRuleWidth	def/defiPinCap.cpp	/^void defiPinPort::addPolyDesignRuleWidth(int effectiveWidth) {$/;"	f	class:defiPinPort
addPolyMask	def/defiPinCap.cpp	/^void defiPin::addPolyMask(int color) {$/;"	f	class:defiPin
addPolyMask	def/defiPinCap.cpp	/^void defiPinPort::addPolyMask(int color) {$/;"	f	class:defiPinPort
addPolySpacing	def/defiPinCap.cpp	/^void defiPin::addPolySpacing(int minSpacing) {$/;"	f	class:defiPin
addPolySpacing	def/defiPinCap.cpp	/^void defiPinPort::addPolySpacing(int minSpacing) {$/;"	f	class:defiPinPort
addPolygon	def/defiBlockage.cpp	/^void defiBlockage::addPolygon(defiGeometries* geom) {$/;"	f	class:defiBlockage
addPolygon	def/defiFill.cpp	/^void defiFill::addPolygon(defiGeometries* geom) {$/;"	f	class:defiFill
addPolygon	def/defiNet.cpp	/^void defiNet::addPolygon(const char* layerName, defiGeometries* geom,$/;"	f	class:defiNet
addPolygon	def/defiPinCap.cpp	/^void defiPin::addPolygon(const char* layerName) {$/;"	f	class:defiPin
addPolygon	def/defiPinCap.cpp	/^void defiPinPort::addPolygon(const char* layerName) {$/;"	f	class:defiPinPort
addPolygon	def/defiSlot.cpp	/^void defiSlot::addPolygon(defiGeometries* geom) {$/;"	f	class:defiSlot
addPolygon	def/defiVia.cpp	/^void defiVia::addPolygon(const char* layer, defiGeometries* geom, int colorMask) {$/;"	f	class:defiVia
addPolygonPts	def/defiPinCap.cpp	/^void defiPin::addPolygonPts(defiGeometries* geom) {$/;"	f	class:defiPin
addPolygonPts	def/defiPinCap.cpp	/^void defiPinPort::addPolygonPts(defiGeometries* geom) {$/;"	f	class:defiPinPort
addPort	def/defiPinCap.cpp	/^void defiPin::addPort() {$/;"	f	class:defiPin
addPortLayer	def/defiPinCap.cpp	/^void defiPin::addPortLayer(const char* layer) {$/;"	f	class:defiPin
addPortLayerDesignRuleWidth	def/defiPinCap.cpp	/^void defiPin::addPortLayerDesignRuleWidth(int effectiveWidth) {$/;"	f	class:defiPin
addPortLayerMask	def/defiPinCap.cpp	/^void defiPin::addPortLayerMask(int color) {$/;"	f	class:defiPin
addPortLayerPts	def/defiPinCap.cpp	/^void defiPin::addPortLayerPts(int xl, int yl, int xh, int yh) {$/;"	f	class:defiPin
addPortLayerSpacing	def/defiPinCap.cpp	/^void defiPin::addPortLayerSpacing(int minSpacing) {$/;"	f	class:defiPin
addPortPolyDesignRuleWidth	def/defiPinCap.cpp	/^void defiPin::addPortPolyDesignRuleWidth(int effectiveWidth) {$/;"	f	class:defiPin
addPortPolyMask	def/defiPinCap.cpp	/^void defiPin::addPortPolyMask(int color) {$/;"	f	class:defiPin
addPortPolySpacing	def/defiPinCap.cpp	/^void defiPin::addPortPolySpacing(int minSpacing) {$/;"	f	class:defiPin
addPortPolygon	def/defiPinCap.cpp	/^void defiPin::addPortPolygon(const char* layerName) {$/;"	f	class:defiPin
addPortPolygonPts	def/defiPinCap.cpp	/^void defiPin::addPortPolygonPts(defiGeometries* geom) {$/;"	f	class:defiPin
addPortVia	def/defiPinCap.cpp	/^void defiPin::addPortVia(const char* via, int viaX, int viaY, int color) {$/;"	f	class:defiPin
addProp	def/defiNet.cpp	/^void defiNet::addProp(const char* name, const char* value, const char type) {$/;"	f	class:defiNet
addProperty	def/defiComponent.cpp	/^void defiComponent::addProperty(const char* name, const char* value,$/;"	f	class:defiComponent
addProperty	def/defiGroup.cpp	/^void defiGroup::addProperty(const char* name, const char* value,$/;"	f	class:defiGroup
addProperty	def/defiNonDefault.cpp	/^void defiNonDefault::addProperty(const char* name, const char* value,$/;"	f	class:defiNonDefault
addProperty	def/defiPinProp.cpp	/^void defiPinProp::addProperty(const char* name, const char* value,$/;"	f	class:defiPinProp
addProperty	def/defiRegion.cpp	/^void defiRegion::addProperty(const char* name, const char* value,$/;"	f	class:defiRegion
addProperty	def/defiRowTrack.cpp	/^void defiRow::addProperty(const char* name, const char* value, const char type) $/;"	f	class:defiRow
addPts	def/defiFill.cpp	/^void defiFill::addPts(defiGeometries* geom) {$/;"	f	class:defiFill
addPts	def/defiNet.cpp	/^void defiNet::addPts(const char* viaName, int o, defiGeometries* geom, $/;"	f	class:defiNet
addRect	def/defiBlockage.cpp	/^void defiBlockage::addRect(int xl, int yl, int xh, int yh) {$/;"	f	class:defiBlockage
addRect	def/defiFill.cpp	/^void defiFill::addRect(int xl, int yl, int xh, int yh) {$/;"	f	class:defiFill
addRect	def/defiNet.cpp	/^void defiNet::addRect(const char* layerName, int xl, int yl, int xh, int yh,$/;"	f	class:defiNet
addRect	def/defiRegion.cpp	/^void defiRegion::addRect(int xl, int yl, int xh, int yh) {$/;"	f	class:defiRegion
addRect	def/defiSlot.cpp	/^void defiSlot::addRect(int xl, int yl, int xh, int yh) {$/;"	f	class:defiSlot
addRegionRect	def/defiGroup.cpp	/^void defiGroup::addRegionRect(int xl, int yl, int xh, int yh) {$/;"	f	class:defiGroup
addRiseMax	def/defiPartition.cpp	/^void defiPartition::addRiseMax(double d) {$/;"	f	class:defiPartition
addRiseMaxRange	def/defiPartition.cpp	/^void defiPartition::addRiseMaxRange(double l, double h) {$/;"	f	class:defiPartition
addRiseMin	def/defiPartition.cpp	/^void defiPartition::addRiseMin(double d) {$/;"	f	class:defiPartition
addRiseMinRange	def/defiPartition.cpp	/^void defiPartition::addRiseMinRange(double l, double h) {$/;"	f	class:defiPartition
addRow	def/defiFPC.cpp	/^void defiFPC::addRow(const char* name) {$/;"	f	class:defiFPC
addRowCol	def/defiVia.cpp	/^void defiVia::addRowCol(int numCutRows, int numCutCols) {$/;"	f	class:defiVia
addShape	def/defiPath.cpp	/^void defiPath::addShape(const char* l) {$/;"	f	class:defiPath
addShield	def/defiNet.cpp	/^void defiNet::addShield(const char* name) {$/;"	f	class:defiNet
addShieldNet	def/defiNet.cpp	/^void defiNet::addShieldNet(const char* name) {$/;"	f	class:defiNet
addShieldPath	def/defiNet.cpp	/^void defiNet::addShieldPath(defiPath* p, int reset, int netOsnet, int *needCbk) {$/;"	f	class:defiNet
addSpacing	def/defiNonDefault.cpp	/^void defiNonDefault::addSpacing(double num) { $/;"	f	class:defiNonDefault
addStyle	def/defiPath.cpp	/^void defiPath::addStyle(int s) {$/;"	f	class:defiPath
addSubnet	def/defiNet.cpp	/^void defiNet::addSubnet(defiSubnet* subnet) {$/;"	f	class:defiNet
addTaperRule	def/defiPath.cpp	/^void defiPath::addTaperRule(const char* l) {$/;"	f	class:defiPath
addToList	def/defiMisc.cpp	/^void defiGeometries::addToList(int x, int y) {$/;"	f	class:defiGeometries
addTurnOff	def/defiPartition.cpp	/^void defiPartition::addTurnOff(const char* setup, const char* hold) {$/;"	f	class:defiPartition
addVia	def/defiNonDefault.cpp	/^void defiNonDefault::addVia(const char* name) {$/;"	f	class:defiNonDefault
addVia	def/defiPath.cpp	/^void defiPath::addVia(const char* l) {$/;"	f	class:defiPath
addVia	def/defiPinCap.cpp	/^void defiPin::addVia(const char* viaName, int ptX, int ptY, int color) {$/;"	f	class:defiPin
addVia	def/defiPinCap.cpp	/^void defiPinPort::addVia(const char* viaName, int ptX, int ptY, int color) {$/;"	f	class:defiPinPort
addViaData	def/defiPath.cpp	/^void defiPath::addViaData(int numX, int numY, int stepX, int stepY) {$/;"	f	class:defiPath
addViaMask	def/defiPath.cpp	/^void defiPath::addViaMask(int colorMask) {$/;"	f	class:defiPath
addViaRect	def/defiPath.cpp	/^void defiPath::addViaRect(int deltaX1, int deltaY1, int deltaX2, int deltaY2) {$/;"	f	class:defiPath
addViaRotation	def/defiPath.cpp	/^void defiPath::addViaRotation(int o) {$/;"	f	class:defiPath
addViaRule	def/defiNonDefault.cpp	/^void defiNonDefault::addViaRule(const char* name) {$/;"	f	class:defiNonDefault
addViaRule	def/defiVia.cpp	/^void defiVia::addViaRule(char* viaRuleName, int xSize, int ySize,$/;"	f	class:defiVia
addVirtualPoint	def/defiPath.cpp	/^void defiPath::addVirtualPoint(int x, int y) {$/;"	f	class:defiPath
addVpin	def/defiNet.cpp	/^void defiNet::addVpin(const char* name) {$/;"	f	class:defiNet
addVpinBounds	def/defiNet.cpp	/^void defiNet::addVpinBounds(int xl, int yl, int xh, int yh) {$/;"	f	class:defiNet
addVpinLayer	def/defiNet.cpp	/^void defiNet::addVpinLayer(const char* name) {$/;"	f	class:defiNet
addVpinLoc	def/defiNet.cpp	/^void defiNet::addVpinLoc(const char* status, int x, int y, int orient) {$/;"	f	class:defiNet
addWidth	def/defiNonDefault.cpp	/^void defiNonDefault::addWidth(double num) { $/;"	f	class:defiNonDefault
addWidth	def/defiPath.cpp	/^void defiPath::addWidth(int w) {$/;"	f	class:defiPath
addWire	def/defiNet.cpp	/^void defiNet::addWire(const char* type, const char* wireShieldName) {$/;"	f	class:defiNet
addWire	def/defiNet.cpp	/^void defiSubnet::addWire(const char* type) {$/;"	f	class:defiSubnet
addWireExt	def/defiNonDefault.cpp	/^void defiNonDefault::addWireExt(double num) { $/;"	f	class:defiNonDefault
addWirePath	def/defiNet.cpp	/^void defiNet::addWirePath(defiPath* p, int reset, int netOsnet, int *needCbk) {$/;"	f	class:defiNet
addWirePath	def/defiNet.cpp	/^void defiSubnet::addWirePath(defiPath* p, int reset, int netOsnet, int *needCbk) {$/;"	f	class:defiSubnet
address	defdiff/diffDefRW.cpp	/^char* address(const char* in) {$/;"	f
address	defrw/defrw.cpp	/^char* address(const char* in) {$/;"	f
alignMax	def/defiFPC.cpp	/^double defiFPC::alignMax() const {$/;"	f	class:defiFPC
alignMin	def/defiFPC.cpp	/^double defiFPC::alignMin() const {$/;"	f	class:defiFPC
alloca	def/def.tab.cpp	578;"	d	file:
allocated_	def/defiScanchain.hpp	/^  int allocated_;$/;"	m	class:defiOrdered
allocated_	include/defiScanchain.hpp	/^  int allocated_;$/;"	m	class:defiOrdered
amper_lookup	def/def_keywords.cpp	/^defrData::amper_lookup(YYSTYPE *pYylval, char *tkn)$/;"	f	class:defrData
an	defrw/defrw.cpp	/^int an(defrCallbackType_e c, const char* h, defiUserData ud) {$/;"	f
antennaModel	def/defiPinCap.cpp	/^defiPinAntennaModel* defiPin::antennaModel(int index) const {$/;"	f	class:defiPin
antennaModelAllocated_	def/defiPinCap.hpp	/^  int antennaModelAllocated_;$/;"	m	class:defiPin
antennaModelAllocated_	include/defiPinCap.hpp	/^  int antennaModelAllocated_;$/;"	m	class:defiPin
antennaModel_	def/defiPinCap.hpp	/^  defiPinAntennaModel** antennaModel_;$/;"	m	class:defiPin
antennaModel_	include/defiPinCap.hpp	/^  defiPinAntennaModel** antennaModel_;$/;"	m	class:defiPin
antennaOxide	def/defiPinCap.cpp	/^char* defiPinAntennaModel::antennaOxide() const {$/;"	f	class:defiPinAntennaModel
arrayCB	defwrite/defwriteCbs.cpp	/^int arrayCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
array_name	def/def.y	/^array_name: K_ARRAY {defData->dumb_mode = 1; defData->no_num = 1;} T_STRING ';'$/;"	l
assertionWarnings	def/defrData.hpp	/^    int  assertionWarnings; $/;"	m	class:defrData
assertionWarnings	include/defrData.hpp	/^    int  assertionWarnings; $/;"	m	class:defrData
assertions_end	def/def.y	/^assertions_end: K_END K_ASSERTIONS$/;"	l
assertions_section	def/def.y	/^assertions_section: assertions_start constraint_rules assertions_end$/;"	l
assertions_start	def/def.y	/^assertions_start: K_ASSERTIONS NUMBER ';'$/;"	l
bbn	defdiff/diffDefRW.cpp	/^int bbn(defrCallbackType_e c, const char* h, defiUserData ud) {$/;"	f
bbn	defrw/defrw.cpp	/^int bbn(defrCallbackType_e c, const char* h, defiUserData ud) {$/;"	f
begOperand	defdiff/diffDefRW.cpp	/^int begOperand;    \/\/ to keep track for constraint, to print - as the 1st char$/;"	v
begOperand	defrw/defrw.cpp	/^int begOperand;    \/\/ to keep track for constraint, to print - as the 1st char$/;"	v
begin_pin_props	def/def.y	/^begin_pin_props: K_PINPROPERTIES NUMBER opt_semi$/;"	l
bit_is_keyword	def/defrData.hpp	/^    int  bit_is_keyword; $/;"	m	class:defrData
bit_is_keyword	include/defrData.hpp	/^    int  bit_is_keyword; $/;"	m	class:defrData
bits	def/defiScanchain.cpp	/^int* defiOrdered::bits() const {$/;"	f	class:defiOrdered
bitsNum	def/defrData.hpp	/^    int  bitsNum; \/\/ Scanchain Bits value$/;"	m	class:defrData
bitsNum	include/defrData.hpp	/^    int  bitsNum; \/\/ Scanchain Bits value$/;"	m	class:defrData
bits_	def/defiScanchain.hpp	/^  int*   bits_;                       \/\/ 5.4.1$/;"	m	class:defiOrdered
bits_	include/defiScanchain.hpp	/^  int*   bits_;                       \/\/ 5.4.1$/;"	m	class:defiOrdered
blockageWarnings	def/defrData.hpp	/^    int  blockageWarnings; $/;"	m	class:defrData
blockageWarnings	include/defrData.hpp	/^    int  blockageWarnings; $/;"	m	class:defrData
blockage_def	def/def.y	/^blockage_def: blockage_rule rectPoly_blockage rectPoly_blockage_rules$/;"	l
blockage_defs	def/def.y	/^blockage_defs: \/\/ empty $/;"	l
blockage_end	def/def.y	/^blockage_end: K_END K_BLOCKAGES$/;"	l
blockage_rule	def/def.y	/^blockage_rule: '-' K_LAYER { defData->dumb_mode = 1; defData->no_num = 1; } T_STRING $/;"	l
blockage_section	def/def.y	/^blockage_section: blockage_start blockage_defs blockage_end ;$/;"	l
blockage_start	def/def.y	/^blockage_start: K_BLOCKAGES NUMBER ';'$/;"	l
bool	cdef/defiTypedefs.h	41;"	d
bool	include/defiTypedefs.h	41;"	d
botLayerLength_	def/defiVia.hpp	/^  int   botLayerLength_;    \/\/ 5.6$/;"	m	class:defiVia
botLayerLength_	include/defiVia.hpp	/^  int   botLayerLength_;    \/\/ 5.6$/;"	m	class:defiVia
botLayer_	def/defiVia.hpp	/^  char* botLayer_;          \/\/ 5.6$/;"	m	class:defiVia
botLayer_	include/defiVia.hpp	/^  char* botLayer_;          \/\/ 5.6$/;"	m	class:defiVia
bottomHalo_	def/defiComponent.hpp	/^  int bottomHalo_;$/;"	m	class:defiComponent
bottomHalo_	include/defiComponent.hpp	/^  int bottomHalo_;$/;"	m	class:defiComponent
bottomMaskNum	def/defiNet.cpp	/^const int defiNet::bottomMaskNum(int index) const {$/;"	f	class:defiNet
bounds	def/defiPinCap.cpp	/^void defiPin::bounds(int index, int* xl, int* yl, int* xh, int* yh) const {$/;"	f	class:defiPin
bounds	def/defiPinCap.cpp	/^void defiPinPort::bounds(int index, int* xl, int* yl, int* xh, int* yh) const {$/;"	f	class:defiPinPort
buffer	def/defrData.hpp	/^    char buffer[IN_BUF_SIZE];$/;"	m	class:defrData
buffer	include/defrData.hpp	/^    char buffer[IN_BUF_SIZE];$/;"	m	class:defrData
bump	def/defiScanchain.cpp	/^void defiOrdered::bump() {$/;"	f	class:defiOrdered
bumpEEQ	def/defiComponent.cpp	/^void defiComponent::bumpEEQ(int size) {$/;"	f	class:defiComponent
bumpForeignName	def/defiComponent.cpp	/^void defiComponent::bumpForeignName(int size) {$/;"	f	class:defiComponent
bumpId	def/defiComponent.cpp	/^void defiComponent::bumpId(int size) {$/;"	f	class:defiComponent
bumpItems	def/defiAssertion.cpp	/^void defiAssertion::bumpItems() {$/;"	f	class:defiAssertion
bumpLayers	def/defiComponent.cpp	/^void defiComponentMaskShiftLayer::bumpLayers(int size) {$/;"	f	class:defiComponentMaskShiftLayer
bumpMaxLayer	def/defiComponent.cpp	/^void defiComponent::bumpMaxLayer(int size) {$/;"	f	class:defiComponent
bumpMinLayer	def/defiComponent.cpp	/^void defiComponent::bumpMinLayer(int size) {$/;"	f	class:defiComponent
bumpName	def/defiComponent.cpp	/^void defiComponent::bumpName(int size) {$/;"	f	class:defiComponent
bumpName	def/defiNet.cpp	/^void defiNet::bumpName(int size) {$/;"	f	class:defiNet
bumpName	def/defiNet.cpp	/^void defiSubnet::bumpName(int size) {$/;"	f	class:defiSubnet
bumpName	def/defiProp.cpp	/^void defiProp::bumpName(int size) {$/;"	f	class:defiProp
bumpName	def/defiSite.cpp	/^void defiSite::bumpName(int size) {$/;"	f	class:defiSite
bumpNets	def/defiComponent.cpp	/^void defiComponent::bumpNets(int size) {$/;"	f	class:defiComponent
bumpPaths	def/defiNet.cpp	/^void defiNet::bumpPaths(int size) {$/;"	f	class:defiNet
bumpPaths	def/defiNet.cpp	/^void defiShield::bumpPaths(int size) {$/;"	f	class:defiShield
bumpPaths	def/defiNet.cpp	/^void defiSubnet::bumpPaths(int size) {$/;"	f	class:defiSubnet
bumpPaths	def/defiNet.cpp	/^void defiWire::bumpPaths(int size) {$/;"	f	class:defiWire
bumpPins	def/defiNet.cpp	/^void defiNet::bumpPins(int size) {$/;"	f	class:defiNet
bumpPins	def/defiNet.cpp	/^void defiSubnet::bumpPins(int size) {$/;"	f	class:defiSubnet
bumpProps	def/defiNet.cpp	/^void defiNet::bumpProps(int size) {$/;"	f	class:defiNet
bumpProps	def/defiPropType.cpp	/^void defiPropType::bumpProps() {$/;"	f	class:defiPropType
bumpRegionName	def/defiComponent.cpp	/^void defiComponent::bumpRegionName(int size) {$/;"	f	class:defiComponent
bumpShieldNets	def/defiNet.cpp	/^void defiNet::bumpShieldNets(int size) {$/;"	f	class:defiNet
bumpSize	def/defiPath.cpp	/^void defiPath::bumpSize(int size) {$/;"	f	class:defiPath
bumpSize	def/defiProp.cpp	/^void defiProp::bumpSize(int size) {$/;"	f	class:defiProp
bumpSubnets	def/defiNet.cpp	/^void defiNet::bumpSubnets(int size) {$/;"	f	class:defiNet
bus_bit_chars	def/def.y	/^bus_bit_chars: K_BUSBITCHARS QSTRING ';'$/;"	l
busbitCB	defwrite/defwriteCbs.cpp	/^int busbitCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
by_is_keyword	def/defrData.hpp	/^    int  by_is_keyword; $/;"	m	class:defrData
by_is_keyword	include/defrData.hpp	/^    int  by_is_keyword; $/;"	m	class:defrData
callbacks	def/defrData.hpp	/^    const defrCallbacks *callbacks;$/;"	m	class:defrData
callbacks	def/defrData.hpp	/^    defrCallbacks         *callbacks;$/;"	m	class:defrContext
callbacks	include/defrData.hpp	/^    const defrCallbacks *callbacks;$/;"	m	class:defrData
callbacks	include/defrData.hpp	/^    defrCallbacks         *callbacks;$/;"	m	class:defrContext
cannotoccupy	def/def.y	/^cannotoccupy: K_CANNOTOCCUPY {defData->dumb_mode = 1;defData->no_num = 1; } T_STRING NUMBER NUMBER$/;"	l
canplace	def/def.y	/^canplace: K_CANPLACE {defData->dumb_mode = 1;defData->no_num = 1; } T_STRING NUMBER NUMBER$/;"	l
cap	def/defiNet.cpp	/^double defiNet::cap() const {$/;"	f	class:defiNet
cap	def/defiPinCap.cpp	/^double defiPinCap::cap() const {$/;"	f	class:defiPinCap
cap_	def/defiNet.hpp	/^  double cap_;           \/\/ cap value$/;"	m	class:defiNet
cap_	def/defiPinCap.hpp	/^  double cap_;     \/\/ capacitance$/;"	m	class:defiPinCap
cap_	include/defiNet.hpp	/^  double cap_;           \/\/ cap value$/;"	m	class:defiNet
cap_	include/defiPinCap.hpp	/^  double cap_;     \/\/ capacitance$/;"	m	class:defiPinCap
capacitance	def/defiIOTiming.cpp	/^double defiIOTiming::capacitance() const {$/;"	f	class:defiIOTiming
capacitance_	def/defiIOTiming.hpp	/^  double capacitance_;$/;"	m	class:defiIOTiming
capacitance_	include/defiIOTiming.hpp	/^  double capacitance_;$/;"	m	class:defiIOTiming
caseSensitiveWarnings	def/defrData.hpp	/^    int  caseSensitiveWarnings; $/;"	m	class:defrData
caseSensitiveWarnings	include/defrData.hpp	/^    int  caseSensitiveWarnings; $/;"	m	class:defrData
case_sens_stmt	def/def.y	/^case_sens_stmt: \/\/ empty $/;"	l
casesens	defdiff/diffDefRW.cpp	/^int casesens(defrCallbackType_e c, int d, defiUserData ud) {$/;"	f
casesens	defrw/defrw.cpp	/^int casesens(defrCallbackType_e c, int d, defiUserData ud) {$/;"	f
ccr1131444	defrw/defrw.cpp	/^static int ccr1131444 = 0;$/;"	v	file:
ch	def/defrData.hpp	/^    char*  ch; $/;"	m	class:defrData
ch	include/defrData.hpp	/^    char*  ch; $/;"	m	class:defrData
changeIdAndName	def/defiComponent.cpp	/^void defiComponent::changeIdAndName(const char* id, const char* name) {$/;"	f	class:defiComponent
changeInstance	def/defiNet.cpp	/^void defiNet::changeInstance(const char* instance, int index) {$/;"	f	class:defiNet
changeNetName	def/defiNet.cpp	/^void defiNet::changeNetName(const char* name) {$/;"	f	class:defiNet
changePin	def/defiNet.cpp	/^void defiNet::changePin(const char* pin, int index) {$/;"	f	class:defiNet
changePinName	def/defiPinCap.cpp	/^void defiPin::changePinName(const char* pinName) {$/;"	f	class:defiPin
checkDouble	defdiff/diffDefRW.cpp	/^double checkDouble(double num) {$/;"	f
checkErrors	def/defrData.hpp	/^defrData::checkErrors()$/;"	f	class:defrData
checkErrors	include/defrData.hpp	/^defrData::checkErrors()$/;"	f	class:defrData
checkType	defdiff/diffDefRW.cpp	/^void checkType(defrCallbackType_e c) {$/;"	f
checkType	defrw/defrw.cpp	/^void checkType(defrCallbackType_e c) {$/;"	f
checkType	defwrite/defwriteCbs.cpp	/^void checkType(defwCallbackType_e c) {$/;"	f
clear	def/defiAssertion.cpp	/^void defiAssertion::clear() {$/;"	f	class:defiAssertion
clear	def/defiBlockage.cpp	/^void defiBlockage::clear() {$/;"	f	class:defiBlockage
clear	def/defiComponent.cpp	/^void defiComponent::clear() {$/;"	f	class:defiComponent
clear	def/defiComponent.cpp	/^void defiComponentMaskShiftLayer::clear() {$/;"	f	class:defiComponentMaskShiftLayer
clear	def/defiFPC.cpp	/^void defiFPC::clear() {$/;"	f	class:defiFPC
clear	def/defiFill.cpp	/^void defiFill::clear() {$/;"	f	class:defiFill
clear	def/defiGroup.cpp	/^void defiGroup::clear() {$/;"	f	class:defiGroup
clear	def/defiIOTiming.cpp	/^void defiIOTiming::clear() {$/;"	f	class:defiIOTiming
clear	def/defiMisc.cpp	/^void defiStyles::clear() {$/;"	f	class:defiStyles
clear	def/defiNet.cpp	/^void defiNet::clear() {$/;"	f	class:defiNet
clear	def/defiNet.cpp	/^void defiShield::clear() {$/;"	f	class:defiShield
clear	def/defiNet.cpp	/^void defiSubnet::clear() {$/;"	f	class:defiSubnet
clear	def/defiNet.cpp	/^void defiWire::clear() {$/;"	f	class:defiWire
clear	def/defiNonDefault.cpp	/^void defiNonDefault::clear() { $/;"	f	class:defiNonDefault
clear	def/defiPartition.cpp	/^void defiPartition::clear() {$/;"	f	class:defiPartition
clear	def/defiPath.cpp	/^void defiPath::clear() {$/;"	f	class:defiPath
clear	def/defiPinCap.cpp	/^void defiPin::clear() {$/;"	f	class:defiPin
clear	def/defiPinCap.cpp	/^void defiPinAntennaModel::clear() {$/;"	f	class:defiPinAntennaModel
clear	def/defiPinCap.cpp	/^void defiPinPort::clear() {$/;"	f	class:defiPinPort
clear	def/defiPinProp.cpp	/^void defiPinProp::clear() {$/;"	f	class:defiPinProp
clear	def/defiProp.cpp	/^void defiProp::clear() {$/;"	f	class:defiProp
clear	def/defiRegion.cpp	/^void defiRegion::clear() {$/;"	f	class:defiRegion
clear	def/defiRowTrack.cpp	/^void defiRow::clear() {$/;"	f	class:defiRow
clear	def/defiScanchain.cpp	/^void defiOrdered::clear() {$/;"	f	class:defiOrdered
clear	def/defiScanchain.cpp	/^void defiScanchain::clear() {$/;"	f	class:defiScanchain
clear	def/defiSite.cpp	/^void defiSite::clear() {$/;"	f	class:defiSite
clear	def/defiSlot.cpp	/^void defiSlot::clear() {$/;"	f	class:defiSlot
clear	def/defiTimingDisable.cpp	/^void defiTimingDisable::clear() {$/;"	f	class:defiTimingDisable
clear	def/defiVia.cpp	/^void defiVia::clear() {$/;"	f	class:defiVia
clearPoly	def/defiBlockage.cpp	/^void defiBlockage::clearPoly() {$/;"	f	class:defiBlockage
clearPoly	def/defiFill.cpp	/^void defiFill::clearPoly() {$/;"	f	class:defiFill
clearPoly	def/defiSlot.cpp	/^void defiSlot::clearPoly() {$/;"	f	class:defiSlot
clearPts	def/defiFill.cpp	/^void defiFill::clearPts() {$/;"	f	class:defiFill
clearRectPoly	def/defiNet.cpp	/^void defiNet::clearRectPoly() {$/;"	f	class:defiNet
clearRectPolyNPath	def/defiNet.cpp	/^void defiNet::clearRectPolyNPath() {$/;"	f	class:defiNet
clearVia	def/defiNet.cpp	/^void defiNet::clearVia() {$/;"	f	class:defiNet
cls	defdiff/diffDefRW.cpp	/^int cls(defrCallbackType_e c, void* cl, defiUserData ud) {$/;"	f
cls	defrw/defrw.cpp	/^int cls(defrCallbackType_e c, void* cl, defiUserData ud) {$/;"	f
cols_	def/defiVia.hpp	/^  int   cols_;              \/\/ 5.6$/;"	m	class:defiVia
cols_	include/defiVia.hpp	/^  int   cols_;              \/\/ 5.6$/;"	m	class:defiVia
commonInPin	def/defiScanchain.cpp	/^const char* defiScanchain::commonInPin() const {$/;"	f	class:defiScanchain
commonInPin_	def/defiScanchain.hpp	/^  char* commonInPin_;$/;"	m	class:defiScanchain
commonInPin_	include/defiScanchain.hpp	/^  char* commonInPin_;$/;"	m	class:defiScanchain
commonOutPin	def/defiScanchain.cpp	/^const char* defiScanchain::commonOutPin() const {$/;"	f	class:defiScanchain
commonOutPin_	def/defiScanchain.hpp	/^  char* commonOutPin_;$/;"	m	class:defiScanchain
commonOutPin_	include/defiScanchain.hpp	/^  char* commonOutPin_;$/;"	m	class:defiScanchain
comp	def/def.y	/^comp: comp_start comp_options ';'$/;"	l
compMSL	defdiff/diffDefRW.cpp	/^int compMSL(defrCallbackType_e c, defiComponentMaskShiftLayer* co, defiUserData ud) {$/;"	f
compMSL	defrw/defrw.cpp	/^int compMSL(defrCallbackType_e c, defiComponentMaskShiftLayer* co, defiUserData ud) {$/;"	f
comp_blockage_rule	def/def.y	/^comp_blockage_rule:$/;"	l
comp_eeq	def/def.y	/^comp_eeq: '+' K_EEQMASTER {defData->dumb_mode=1; defData->no_num = 1; } T_STRING$/;"	l
comp_extension_stmt	def/def.y	/^comp_extension_stmt: extension_stmt$/;"	l
comp_foreign	def/def.y	/^comp_foreign: '+' K_FOREIGN { defData->dumb_mode = 1; defData->no_num = 1; } T_STRING$/;"	l
comp_generate	def/def.y	/^comp_generate: '+' K_COMP_GEN { defData->dumb_mode = 2;  defData->no_num = 2; } T_STRING$/;"	l
comp_halo	def/def.y	/^comp_halo: '+' K_HALO                    \/\/ 5.7 $/;"	l
comp_id_and_name	def/def.y	/^comp_id_and_name: '-' {defData->dumb_mode = DEF_MAX_INT; defData->no_num = DEF_MAX_INT; }$/;"	l
comp_name	def/def.y	/^comp_name: '(' {defData->dumb_mode=2; defData->no_num = 2; } T_STRING$/;"	l
comp_names	def/def.y	/^comp_names: \/\/ empty $/;"	l
comp_net_list	def/def.y	/^comp_net_list: \/\/ empty $/;"	l
comp_option	def/def.y	/^comp_option:  comp_generate | comp_source | comp_type | weight | maskShift |$/;"	l
comp_options	def/def.y	/^comp_options: \/\/ empty $/;"	l
comp_pnt_list	def/def.y	/^comp_pnt_list: pt pt$/;"	l
comp_prop	def/def.y	/^comp_prop: T_STRING NUMBER$/;"	l
comp_prop_list	def/def.y	/^comp_prop_list: comp_prop$/;"	l
comp_property	def/def.y	/^comp_property: '+' K_PROPERTY { defData->dumb_mode = DEF_MAX_INT; }$/;"	l
comp_region	def/def.y	/^comp_region:$/;"	l
comp_region_start	def/def.y	/^comp_region_start: '+' K_REGION$/;"	l
comp_routehalo	def/def.y	/^comp_routehalo: '+' K_ROUTEHALO NUMBER { defData->dumb_mode = 2; defData->no_num = 2; } T_STRING T_STRING$/;"	l
comp_source	def/def.y	/^comp_source: '+' K_SOURCE source_type $/;"	l
comp_start	def/def.y	/^comp_start: comp_id_and_name comp_net_list$/;"	l
comp_type	def/def.y	/^comp_type: placement_status pt orient$/;"	l
compf	defdiff/diffDefRW.cpp	/^int compf(defrCallbackType_e c, defiComponent* co, defiUserData ud) {$/;"	f
compf	defrw/defrw.cpp	/^int compf(defrCallbackType_e c, defiComponent* co, defiUserData ud) {$/;"	f
componentCB	defwrite/defwriteCbs.cpp	/^int componentCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
componentNameLength_	def/defiBlockage.hpp	/^  int    componentNameLength_;$/;"	m	class:defiBlockage
componentNameLength_	include/defiBlockage.hpp	/^  int    componentNameLength_;$/;"	m	class:defiBlockage
componentName_	def/defiBlockage.hpp	/^  char*  componentName_;$/;"	m	class:defiBlockage
componentName_	include/defiBlockage.hpp	/^  char*  componentName_;$/;"	m	class:defiBlockage
componentWarnings	def/defrData.hpp	/^    int  componentWarnings; $/;"	m	class:defrData
componentWarnings	include/defrData.hpp	/^    int  componentWarnings; $/;"	m	class:defrData
comps_maskShift_section	def/def.y	/^comps_maskShift_section : K_COMPSMASKSHIFT  layer_statement ';'$/;"	l
comps_rule	def/def.y	/^comps_rule: \/\/ empty $/;"	l
comps_section	def/def.y	/^comps_section: start_comps comps_rule end_comps$/;"	l
conn_opt	def/def.y	/^conn_opt: \/\/ empty $/;"	l
constrain_what	def/def.y	/^constrain_what: '+' K_BOTTOMLEFT$/;"	l
constrain_what_list	def/def.y	/^constrain_what_list: \/\/ empty $/;"	l
constraint	defdiff/diffDefRW.cpp	/^int constraint(defrCallbackType_e c, defiAssertion* a, defiUserData ud) {$/;"	f
constraint	defrw/defrw.cpp	/^int constraint(defrCallbackType_e c, defiAssertion* a, defiUserData ud) {$/;"	f
constraintWarnings	def/defrData.hpp	/^    int  constraintWarnings; $/;"	m	class:defrData
constraintWarnings	include/defrData.hpp	/^    int  constraintWarnings; $/;"	m	class:defrData
constraint_rule	def/def.y	/^constraint_rule:   operand_rule $/;"	l
constraint_rules	def/def.y	/^constraint_rules: \/\/ empty $/;"	l
constraint_section	def/def.y	/^constraint_section: constraints_start constraint_rules constraints_end$/;"	l
constraint_type	def/def.y	/^constraint_type: K_ALIGN$/;"	l
constraints_end	def/def.y	/^constraints_end: K_END K_CONSTRAINTS$/;"	l
constraints_start	def/def.y	/^constraints_start: K_CONSTRAINTS NUMBER ';'$/;"	l
constraintst	defrw/defrw.cpp	/^int constraintst(defrCallbackType_e c, int num, defiUserData ud) {$/;"	f
convert_defname2num	def/defrData.cpp	/^defrData::convert_defname2num(char *versionName)$/;"	f	class:defrData
corner_	def/defiFPC.hpp	/^  char corner_;   \/\/ Bottomleft or Topright$/;"	m	class:defiFPC
corner_	include/defiFPC.hpp	/^  char corner_;   \/\/ Bottomleft or Topright$/;"	m	class:defiFPC
cover_is_keyword	def/defrData.hpp	/^    int  cover_is_keyword; $/;"	m	class:defrData
cover_is_keyword	include/defrData.hpp	/^    int  cover_is_keyword; $/;"	m	class:defrData
cs	defrw/defrw.cpp	/^int cs(defrCallbackType_e c, int num, defiUserData ud) {$/;"	f
curVer	defdiff/diffDefRW.cpp	/^static double curVer = 5.7;$/;"	v	file:
curVer	defrw/defrw.cpp	/^static double curVer = 0;$/;"	v	file:
currentType	def/defiPath.cpp	/^defiPath::currentType() const$/;"	f	class:defiPath
cutLayerLength_	def/defiVia.hpp	/^  int   cutLayerLength_;    \/\/ 5.6$/;"	m	class:defiVia
cutLayerLength_	include/defiVia.hpp	/^  int   cutLayerLength_;    \/\/ 5.6$/;"	m	class:defiVia
cutLayerName	def/defiNonDefault.cpp	/^const char* defiNonDefault::cutLayerName(int index) const {$/;"	f	class:defiNonDefault
cutLayerName_	def/defiNonDefault.hpp	/^  char**  cutLayerName_;$/;"	m	class:defiNonDefault
cutLayerName_	include/defiNonDefault.hpp	/^  char**  cutLayerName_;$/;"	m	class:defiNonDefault
cutLayer_	def/defiVia.hpp	/^  char* cutLayer_;          \/\/ 5.6$/;"	m	class:defiVia
cutLayer_	include/defiVia.hpp	/^  char* cutLayer_;          \/\/ 5.6$/;"	m	class:defiVia
cutMaskNum	def/defiNet.cpp	/^const int defiNet::cutMaskNum(int index) const {$/;"	f	class:defiNet
cutPattern	def/defiVia.cpp	/^const char* defiVia::cutPattern() const {$/;"	f	class:defiVia
cutPatternLength_	def/defiVia.hpp	/^  int   cutPatternLength_;  \/\/ 5.6$/;"	m	class:defiVia
cutPatternLength_	include/defiVia.hpp	/^  int   cutPatternLength_;  \/\/ 5.6$/;"	m	class:defiVia
cutPattern_	def/defiVia.hpp	/^  char* cutPattern_;        \/\/ 5.6$/;"	m	class:defiVia
cutPattern_	include/defiVia.hpp	/^  char* cutPattern_;        \/\/ 5.6$/;"	m	class:defiVia
d_	def/defiProp.hpp	/^  double d_;            \/\/ if it is a real or int the number is here.$/;"	m	class:defiProp
d_	include/defiProp.hpp	/^  double d_;            \/\/ if it is a real or int the number is here.$/;"	m	class:defiProp
data	def/defiDefs.hpp	/^    int data;$/;"	m	struct:deftoken
data	def/defrData.hpp	/^    defrData              *data;$/;"	m	class:defrContext
data	include/defiDefs.hpp	/^    int data;$/;"	m	struct:deftoken
data	include/defrData.hpp	/^    defrData              *data;$/;"	m	class:defrContext
dataError	defdiff/diffDefRW.cpp	/^void dataError() {$/;"	f
dataError	defrw/defrw.cpp	/^void dataError() {$/;"	f
dataError	defwrite/defwriteCbs.cpp	/^void dataError() {$/;"	f
dataType	def/defiProp.cpp	/^char defiProp::dataType() const {$/;"	f	class:defiProp
dataType_	def/defiProp.hpp	/^  char dataType_;       \/\/ either I:integer R:real S:string Q:quotedstring.$/;"	m	class:defiProp
dataType_	include/defiProp.hpp	/^  char dataType_;       \/\/ either I:integer R:real S:string Q:quotedstring.$/;"	m	class:defiProp
data_	def/defiPath.hpp	/^  void** data_;         \/\/ extra data$/;"	m	class:defiPath
data_	include/defiPath.hpp	/^  void** data_;         \/\/ extra data$/;"	m	class:defiPath
defAliasIterator	def/defiAlias.cpp	/^class defAliasIterator {$/;"	c	file:
defAliasMap	def/defrData.hpp	/^typedef std::map<std::string, std::string, defCompareStrings> defAliasMap;$/;"	t
defAliasMap	include/defrData.hpp	/^typedef std::map<std::string, std::string, defCompareStrings> defAliasMap;$/;"	t
defCompareCStrings	def/defrSettings.hpp	/^struct defCompareCStrings $/;"	s
defCompareCStrings	include/defrSettings.hpp	/^struct defCompareCStrings $/;"	s
defCompareStrings	def/defrData.hpp	/^struct defCompareStrings $/;"	s
defCompareStrings	include/defrData.hpp	/^struct defCompareStrings $/;"	s
defContext	def/defrData.cpp	/^defrContext defContext;$/;"	v
defData	def/defiAlias.hpp	/^  defrData *defData;$/;"	m	class:defiAlias_itr
defData	def/defiAssertion.hpp	/^  defrData *defData;$/;"	m	class:defiAssertion
defData	def/defiBlockage.hpp	/^  defrData *defData;$/;"	m	class:defiBlockage
defData	def/defiComponent.hpp	/^    defrData    *defData;$/;"	m	class:defiComponentMaskShiftLayer
defData	def/defiComponent.hpp	/^  defrData *defData;$/;"	m	class:defiComponent
defData	def/defiFPC.hpp	/^  defrData *defData;$/;"	m	class:defiFPC
defData	def/defiFill.hpp	/^  defrData *defData;$/;"	m	class:defiFill
defData	def/defiGroup.hpp	/^  defrData *defData;$/;"	m	class:defiGroup
defData	def/defiIOTiming.hpp	/^  defrData *defData;$/;"	m	class:defiIOTiming
defData	def/defiMisc.hpp	/^  defrData *defData;$/;"	m	class:defiGeometries
defData	def/defiNet.hpp	/^  defrData  *defData;$/;"	m	class:defiWire
defData	def/defiNet.hpp	/^  defrData *defData;$/;"	m	class:defiNet
defData	def/defiNet.hpp	/^  defrData *defData;$/;"	m	class:defiShield
defData	def/defiNet.hpp	/^  defrData *defData;$/;"	m	class:defiSubnet
defData	def/defiNet.hpp	/^  defrData *defData;$/;"	m	class:defiVpin
defData	def/defiNonDefault.hpp	/^  defrData *defData;$/;"	m	class:defiNonDefault
defData	def/defiPartition.hpp	/^  defrData *defData;$/;"	m	class:defiPartition
defData	def/defiPath.hpp	/^  defrData *defData;$/;"	m	class:defiPath
defData	def/defiPinCap.hpp	/^  defrData *defData;$/;"	m	class:defiPin
defData	def/defiPinCap.hpp	/^  defrData *defData;$/;"	m	class:defiPinAntennaModel
defData	def/defiPinCap.hpp	/^  defrData *defData;$/;"	m	class:defiPinPort
defData	def/defiPinProp.hpp	/^  defrData *defData;$/;"	m	class:defiPinProp
defData	def/defiProp.hpp	/^  defrData *defData;$/;"	m	class:defiProp
defData	def/defiRegion.hpp	/^  defrData *defData;$/;"	m	class:defiRegion
defData	def/defiRowTrack.hpp	/^  defrData *defData;$/;"	m	class:defiGcellGrid
defData	def/defiRowTrack.hpp	/^  defrData *defData;$/;"	m	class:defiRow
defData	def/defiRowTrack.hpp	/^  defrData *defData;$/;"	m	class:defiTrack
defData	def/defiScanchain.hpp	/^  defrData *defData;$/;"	m	class:defiOrdered
defData	def/defiScanchain.hpp	/^  defrData *defData;$/;"	m	class:defiScanchain
defData	def/defiSite.hpp	/^  defrData *defData;$/;"	m	class:defiSite
defData	def/defiSlot.hpp	/^  defrData *defData;$/;"	m	class:defiSlot
defData	def/defiTimingDisable.hpp	/^  defrData *defData;$/;"	m	class:defiTimingDisable
defData	def/defiVia.hpp	/^  defrData *defData;$/;"	m	class:defiVia
defData	include/defiAlias.hpp	/^  defrData *defData;$/;"	m	class:defiAlias_itr
defData	include/defiAssertion.hpp	/^  defrData *defData;$/;"	m	class:defiAssertion
defData	include/defiBlockage.hpp	/^  defrData *defData;$/;"	m	class:defiBlockage
defData	include/defiComponent.hpp	/^    defrData    *defData;$/;"	m	class:defiComponentMaskShiftLayer
defData	include/defiComponent.hpp	/^  defrData *defData;$/;"	m	class:defiComponent
defData	include/defiFPC.hpp	/^  defrData *defData;$/;"	m	class:defiFPC
defData	include/defiFill.hpp	/^  defrData *defData;$/;"	m	class:defiFill
defData	include/defiGroup.hpp	/^  defrData *defData;$/;"	m	class:defiGroup
defData	include/defiIOTiming.hpp	/^  defrData *defData;$/;"	m	class:defiIOTiming
defData	include/defiMisc.hpp	/^  defrData *defData;$/;"	m	class:defiGeometries
defData	include/defiNet.hpp	/^  defrData  *defData;$/;"	m	class:defiWire
defData	include/defiNet.hpp	/^  defrData *defData;$/;"	m	class:defiNet
defData	include/defiNet.hpp	/^  defrData *defData;$/;"	m	class:defiShield
defData	include/defiNet.hpp	/^  defrData *defData;$/;"	m	class:defiSubnet
defData	include/defiNet.hpp	/^  defrData *defData;$/;"	m	class:defiVpin
defData	include/defiNonDefault.hpp	/^  defrData *defData;$/;"	m	class:defiNonDefault
defData	include/defiPartition.hpp	/^  defrData *defData;$/;"	m	class:defiPartition
defData	include/defiPath.hpp	/^  defrData *defData;$/;"	m	class:defiPath
defData	include/defiPinCap.hpp	/^  defrData *defData;$/;"	m	class:defiPin
defData	include/defiPinCap.hpp	/^  defrData *defData;$/;"	m	class:defiPinAntennaModel
defData	include/defiPinCap.hpp	/^  defrData *defData;$/;"	m	class:defiPinPort
defData	include/defiPinProp.hpp	/^  defrData *defData;$/;"	m	class:defiPinProp
defData	include/defiProp.hpp	/^  defrData *defData;$/;"	m	class:defiProp
defData	include/defiRegion.hpp	/^  defrData *defData;$/;"	m	class:defiRegion
defData	include/defiRowTrack.hpp	/^  defrData *defData;$/;"	m	class:defiGcellGrid
defData	include/defiRowTrack.hpp	/^  defrData *defData;$/;"	m	class:defiRow
defData	include/defiRowTrack.hpp	/^  defrData *defData;$/;"	m	class:defiTrack
defData	include/defiScanchain.hpp	/^  defrData *defData;$/;"	m	class:defiOrdered
defData	include/defiScanchain.hpp	/^  defrData *defData;$/;"	m	class:defiScanchain
defData	include/defiSite.hpp	/^  defrData *defData;$/;"	m	class:defiSite
defData	include/defiSlot.hpp	/^  defrData *defData;$/;"	m	class:defiSlot
defData	include/defiTimingDisable.hpp	/^  defrData *defData;$/;"	m	class:defiTimingDisable
defData	include/defiVia.hpp	/^  defrData *defData;$/;"	m	class:defiVia
defDefineMap	def/defrData.hpp	/^typedef std::map<std::string, std::string, defCompareStrings> defDefineMap;$/;"	t
defDefineMap	include/defrData.hpp	/^typedef std::map<std::string, std::string, defCompareStrings> defDefineMap;$/;"	t
defError	def/def_keywords.cpp	/^defrData::defError(int msgNum, const char *s) {$/;"	f	class:defrData
defGZFile	cdefzlib/defzlib.h	/^typedef void* defGZFile;$/;"	t
defGZFile	defzlib/defzlib.hpp	/^typedef void* defGZFile;$/;"	t
defGZFile	include/defzlib.h	/^typedef void* defGZFile;$/;"	t
defGZFile	include/defzlib.hpp	/^typedef void* defGZFile;$/;"	t
defGZipClose	cdefzlib/cdefzlib.c	/^int defGZipClose(defGZFile filePtr) {$/;"	f
defGZipClose	defzlib/defzlib.cpp	/^int defGZipClose(defGZFile filePtr) {$/;"	f
defGZipOpen	cdefzlib/cdefzlib.c	/^defGZipOpen(const char *gzipPath, const char* mode) {$/;"	f
defGZipOpen	defzlib/defzlib.cpp	/^defGZipOpen(const char *gzipPath, const char* mode) {$/;"	f
defGZip_read	cdefzlib/cdefzlib.c	/^size_t defGZip_read(FILE* file, char* buf, size_t len) {$/;"	f
defGZip_read	defzlib/defzlib.cpp	/^size_t defGZip_read(FILE* file, char* buf, size_t len) {$/;"	f
defGetAlias	def/def_keywords.cpp	/^defrData::defGetAlias(const string &name, string &result) $/;"	f	class:defrData
defGetDefine	def/def_keywords.cpp	/^int defrData::defGetDefine(const string &name, string &result) $/;"	f	class:defrData
defGetKeyword	def/def_keywords.cpp	/^int defrData::defGetKeyword(const char* name, int *result) $/;"	f	class:defrData
defIgnoreVersion	def/defrData.hpp	/^    int  defIgnoreVersion; \/\/ ignore checking version number$/;"	m	class:defrData
defIgnoreVersion	include/defrData.hpp	/^    int  defIgnoreVersion; \/\/ ignore checking version number$/;"	m	class:defrData
defInfo	def/def_keywords.cpp	/^defrData::defInfo(int msgNum, const char *s) {$/;"	f	class:defrData
defInvalidChar	def/defrData.hpp	/^    int  defInvalidChar; $/;"	m	class:defrData
defInvalidChar	include/defrData.hpp	/^    int  defInvalidChar; $/;"	m	class:defrData
defKeywordMap	def/defrSettings.hpp	/^typedef std::map<const char*, int, defCompareCStrings>  defKeywordMap;$/;"	t
defKeywordMap	include/defrSettings.hpp	/^typedef std::map<const char*, int, defCompareCStrings>  defKeywordMap;$/;"	t
defMsg	def/defrData.hpp	/^    char*  defMsg; $/;"	m	class:defrData
defMsg	include/defrData.hpp	/^    char*  defMsg; $/;"	m	class:defrData
defMsgCnt	def/defrData.hpp	/^    int  defMsgCnt; $/;"	m	class:defrData
defMsgCnt	include/defrData.hpp	/^    int  defMsgCnt; $/;"	m	class:defrData
defMsgPrinted	def/defrData.hpp	/^    int  defMsgPrinted; \/\/ number of msgs output so far$/;"	m	class:defrData
defMsgPrinted	include/defrData.hpp	/^    int  defMsgPrinted; \/\/ number of msgs output so far$/;"	m	class:defrData
defPOINT	def/defiDefs.hpp	/^typedef struct defpoint defPOINT;$/;"	t	typeref:struct:defpoint
defPOINT	include/defiDefs.hpp	/^typedef struct defpoint defPOINT;$/;"	t	typeref:struct:defpoint
defPrintTokens	def/defrData.hpp	/^    int  defPrintTokens; $/;"	m	class:defrData
defPrintTokens	include/defrData.hpp	/^    int  defPrintTokens; $/;"	m	class:defrData
defPropDefType	def/defrData.hpp	/^    char   defPropDefType; \/\/ save the current type of the property$/;"	m	class:defrData
defPropDefType	include/defrData.hpp	/^    char   defPropDefType; \/\/ save the current type of the property$/;"	m	class:defrData
defRECT	def/defiDefs.hpp	/^typedef struct defrect defRECT;$/;"	t	typeref:struct:defrect
defRECT	include/defiDefs.hpp	/^typedef struct defrect defRECT;$/;"	t	typeref:struct:defrect
defRetVal	def/defrData.hpp	/^    int  defRetVal; $/;"	m	class:defrData
defRetVal	include/defrData.hpp	/^    int  defRetVal; $/;"	m	class:defrData
defTOKEN	def/defiDefs.hpp	/^typedef struct deftoken defTOKEN;$/;"	t	typeref:struct:deftoken
defTOKEN	include/defiDefs.hpp	/^typedef struct deftoken defTOKEN;$/;"	t	typeref:struct:deftoken
defUnusedCallbackCount	def/defrReader.cpp	/^defUnusedCallbackCount()$/;"	f
defValidNum	def/defrData.cpp	/^defrData::defValidNum(int values) {$/;"	f	class:defrData
defVersionNum	def/defwWriter.cpp	/^static double defVersionNum = 5.7;  \/\/ default to 5.7$/;"	v	file:
defWRetVal	def/defwWriterCalls.cpp	/^int defWRetVal;$/;"	v
defWarning	def/def_keywords.cpp	/^defrData::defWarning(int msgNum, const char *s) {$/;"	f	class:defrData
def_alias_set	def/defrData.hpp	/^    defAliasMap        def_alias_set; $/;"	m	class:defrData
def_alias_set	include/defrData.hpp	/^    defAliasMap        def_alias_set; $/;"	m	class:defrData
def_defines_set	def/defrData.hpp	/^    defDefineMap       def_defines_set;$/;"	m	class:defrData
def_defines_set	include/defrData.hpp	/^    defDefineMap       def_defines_set;$/;"	m	class:defrData
def_file	def/def.y	/^def_file: version_stmt case_sens_stmt rules end_design$/;"	l
def_init	def/defrReader.cpp	/^def_init(const char  *func)$/;"	f
def_warnings	def/defrData.hpp	/^    int  def_warnings; $/;"	m	class:defrData
def_warnings	include/defrData.hpp	/^    int  def_warnings; $/;"	m	class:defrData
defaultCapWarnings	def/defrData.hpp	/^    int  defaultCapWarnings; $/;"	m	class:defrData
defaultCapWarnings	include/defrData.hpp	/^    int  defaultCapWarnings; $/;"	m	class:defrData
defaultName	defdiff/diffDefRW.cpp	/^char defaultName[64];$/;"	v
defaultName	defrw/defrw.cpp	/^char defaultName[64];$/;"	v
defaultOut	defdiff/diffDefRW.cpp	/^char defaultOut[64];$/;"	v
defaultOut	defrw/defrw.cpp	/^char defaultOut[64];$/;"	v
defaultOut	defwrite/defwrite.cpp	/^char defaultOut[128];$/;"	v
defaultOut	defwrite/defwriteCbs.cpp	/^char  defaultOut[128];$/;"	v
defiALIAS_h	def/defiAlias.hpp	31;"	d
defiALIAS_h	include/defiAlias.hpp	31;"	d
defiAdoptedSubObjects	def/defiDefs.hpp	/^  defiAdoptedSubObjects       \/\/ shallow copy + delete$/;"	e	enum:__anon9
defiAdoptedSubObjects	include/defiDefs.hpp	/^  defiAdoptedSubObjects       \/\/ shallow copy + delete$/;"	e	enum:__anon2
defiAlias_itr	cdef/defiTypedefs.h	/^typedef void *defiAlias_itr;$/;"	t
defiAlias_itr	def/defiAlias.cpp	/^defiAlias_itr::defiAlias_itr(defrData *data) $/;"	f	class:defiAlias_itr
defiAlias_itr	def/defiAlias.hpp	/^class defiAlias_itr {$/;"	c
defiAlias_itr	include/defiAlias.hpp	/^class defiAlias_itr {$/;"	c
defiAlias_itr	include/defiTypedefs.h	/^typedef void *defiAlias_itr;$/;"	t
defiAssertPath	def/defiAssertion.cpp	/^struct defiAssertPath {$/;"	s	file:
defiAssertion	cdef/defiTypedefs.h	/^typedef void *defiAssertion;$/;"	t
defiAssertion	def/defiAssertion.cpp	/^defiAssertion::defiAssertion(defrData *data)$/;"	f	class:defiAssertion
defiAssertion	def/defiAssertion.hpp	/^class defiAssertion {$/;"	c
defiAssertion	include/defiAssertion.hpp	/^class defiAssertion {$/;"	c
defiAssertion	include/defiTypedefs.h	/^typedef void *defiAssertion;$/;"	t
defiAssertion_distance	cdef/xdefiAssertion.cpp	/^double defiAssertion_distance (const ::defiAssertion* obj) {$/;"	f
defiAssertion_fallMax	cdef/xdefiAssertion.cpp	/^double defiAssertion_fallMax (const ::defiAssertion* obj) {$/;"	f
defiAssertion_fallMin	cdef/xdefiAssertion.cpp	/^double defiAssertion_fallMin (const ::defiAssertion* obj) {$/;"	f
defiAssertion_h	def/defiAssertion.hpp	31;"	d
defiAssertion_h	include/defiAssertion.hpp	31;"	d
defiAssertion_hasFallMax	cdef/xdefiAssertion.cpp	/^int defiAssertion_hasFallMax (const ::defiAssertion* obj) {$/;"	f
defiAssertion_hasFallMin	cdef/xdefiAssertion.cpp	/^int defiAssertion_hasFallMin (const ::defiAssertion* obj) {$/;"	f
defiAssertion_hasRiseMax	cdef/xdefiAssertion.cpp	/^int defiAssertion_hasRiseMax (const ::defiAssertion* obj) {$/;"	f
defiAssertion_hasRiseMin	cdef/xdefiAssertion.cpp	/^int defiAssertion_hasRiseMin (const ::defiAssertion* obj) {$/;"	f
defiAssertion_isAssertion	cdef/xdefiAssertion.cpp	/^int defiAssertion_isAssertion (const ::defiAssertion* obj) {$/;"	f
defiAssertion_isConstraint	cdef/xdefiAssertion.cpp	/^int defiAssertion_isConstraint (const ::defiAssertion* obj) {$/;"	f
defiAssertion_isDelay	cdef/xdefiAssertion.cpp	/^int defiAssertion_isDelay (const ::defiAssertion* obj) {$/;"	f
defiAssertion_isDiff	cdef/xdefiAssertion.cpp	/^int defiAssertion_isDiff (const ::defiAssertion* obj) {$/;"	f
defiAssertion_isNet	cdef/xdefiAssertion.cpp	/^int defiAssertion_isNet (const ::defiAssertion* obj, int  index) {$/;"	f
defiAssertion_isPath	cdef/xdefiAssertion.cpp	/^int defiAssertion_isPath (const ::defiAssertion* obj, int  index) {$/;"	f
defiAssertion_isSum	cdef/xdefiAssertion.cpp	/^int defiAssertion_isSum (const ::defiAssertion* obj) {$/;"	f
defiAssertion_isWiredlogic	cdef/xdefiAssertion.cpp	/^int defiAssertion_isWiredlogic (const ::defiAssertion* obj) {$/;"	f
defiAssertion_net	cdef/xdefiAssertion.cpp	/^void defiAssertion_net (const ::defiAssertion* obj, int  index, char**  netName) {$/;"	f
defiAssertion_netName	cdef/xdefiAssertion.cpp	/^const char* defiAssertion_netName (const ::defiAssertion* obj) {$/;"	f
defiAssertion_numItems	cdef/xdefiAssertion.cpp	/^int defiAssertion_numItems (const ::defiAssertion* obj) {$/;"	f
defiAssertion_path	cdef/xdefiAssertion.cpp	/^void defiAssertion_path (const ::defiAssertion* obj, int  index, char**  fromInst, char**  fromPin, char**  toInst, char**  toPin) {$/;"	f
defiAssertion_print	cdef/xdefiAssertion.cpp	/^void defiAssertion_print (const ::defiAssertion* obj, FILE*  f) {$/;"	f
defiAssertion_riseMax	cdef/xdefiAssertion.cpp	/^double defiAssertion_riseMax (const ::defiAssertion* obj) {$/;"	f
defiAssertion_riseMin	cdef/xdefiAssertion.cpp	/^double defiAssertion_riseMin (const ::defiAssertion* obj) {$/;"	f
defiBLOCKAGES_h	def/defiBlockage.hpp	31;"	d
defiBLOCKAGES_h	include/defiBlockage.hpp	31;"	d
defiBlockage	cdef/defiTypedefs.h	/^typedef void *defiBlockage;$/;"	t
defiBlockage	def/defiBlockage.cpp	/^defiBlockage::defiBlockage(defrData *data) $/;"	f	class:defiBlockage
defiBlockage	def/defiBlockage.hpp	/^class defiBlockage {$/;"	c
defiBlockage	include/defiBlockage.hpp	/^class defiBlockage {$/;"	c
defiBlockage	include/defiTypedefs.h	/^typedef void *defiBlockage;$/;"	t
defiBlockage_designRuleWidth	cdef/xdefiBlockage.cpp	/^int defiBlockage_designRuleWidth (const ::defiBlockage* obj) {$/;"	f
defiBlockage_getPolygon	cdef/xdefiBlockage.cpp	/^::defiPoints defiBlockage_getPolygon (const ::defiBlockage* obj, int  index) {$/;"	f
defiBlockage_hasComponent	cdef/xdefiBlockage.cpp	/^int defiBlockage_hasComponent (const ::defiBlockage* obj) {$/;"	f
defiBlockage_hasDesignRuleWidth	cdef/xdefiBlockage.cpp	/^int defiBlockage_hasDesignRuleWidth (const ::defiBlockage* obj) {$/;"	f
defiBlockage_hasExceptpgnet	cdef/xdefiBlockage.cpp	/^int defiBlockage_hasExceptpgnet (const ::defiBlockage* obj) {$/;"	f
defiBlockage_hasFills	cdef/xdefiBlockage.cpp	/^int defiBlockage_hasFills (const ::defiBlockage* obj) {$/;"	f
defiBlockage_hasLayer	cdef/xdefiBlockage.cpp	/^int defiBlockage_hasLayer (const ::defiBlockage* obj) {$/;"	f
defiBlockage_hasMask	cdef/xdefiBlockage.cpp	/^int defiBlockage_hasMask (const ::defiBlockage* obj) {$/;"	f
defiBlockage_hasPartial	cdef/xdefiBlockage.cpp	/^int defiBlockage_hasPartial (const ::defiBlockage* obj) {$/;"	f
defiBlockage_hasPlacement	cdef/xdefiBlockage.cpp	/^int defiBlockage_hasPlacement (const ::defiBlockage* obj) {$/;"	f
defiBlockage_hasPushdown	cdef/xdefiBlockage.cpp	/^int defiBlockage_hasPushdown (const ::defiBlockage* obj) {$/;"	f
defiBlockage_hasSlots	cdef/xdefiBlockage.cpp	/^int defiBlockage_hasSlots (const ::defiBlockage* obj) {$/;"	f
defiBlockage_hasSoft	cdef/xdefiBlockage.cpp	/^int defiBlockage_hasSoft (const ::defiBlockage* obj) {$/;"	f
defiBlockage_hasSpacing	cdef/xdefiBlockage.cpp	/^int defiBlockage_hasSpacing (const ::defiBlockage* obj) {$/;"	f
defiBlockage_layerComponentName	cdef/xdefiBlockage.cpp	/^const char* defiBlockage_layerComponentName (const ::defiBlockage* obj) {$/;"	f
defiBlockage_layerName	cdef/xdefiBlockage.cpp	/^const char* defiBlockage_layerName (const ::defiBlockage* obj) {$/;"	f
defiBlockage_mask	cdef/xdefiBlockage.cpp	/^int defiBlockage_mask (const ::defiBlockage* obj) {$/;"	f
defiBlockage_minSpacing	cdef/xdefiBlockage.cpp	/^int defiBlockage_minSpacing (const ::defiBlockage* obj) {$/;"	f
defiBlockage_numPolygons	cdef/xdefiBlockage.cpp	/^int defiBlockage_numPolygons (const ::defiBlockage* obj) {$/;"	f
defiBlockage_numRectangles	cdef/xdefiBlockage.cpp	/^int defiBlockage_numRectangles (const ::defiBlockage* obj) {$/;"	f
defiBlockage_placementComponentName	cdef/xdefiBlockage.cpp	/^const char* defiBlockage_placementComponentName (const ::defiBlockage* obj) {$/;"	f
defiBlockage_placementMaxDensity	cdef/xdefiBlockage.cpp	/^double defiBlockage_placementMaxDensity (const ::defiBlockage* obj) {$/;"	f
defiBlockage_print	cdef/xdefiBlockage.cpp	/^void defiBlockage_print (const ::defiBlockage* obj, FILE*  f) {$/;"	f
defiBlockage_xh	cdef/xdefiBlockage.cpp	/^int defiBlockage_xh (const ::defiBlockage* obj, int  index) {$/;"	f
defiBlockage_xl	cdef/xdefiBlockage.cpp	/^int defiBlockage_xl (const ::defiBlockage* obj, int  index) {$/;"	f
defiBlockage_yh	cdef/xdefiBlockage.cpp	/^int defiBlockage_yh (const ::defiBlockage* obj, int  index) {$/;"	f
defiBlockage_yl	cdef/xdefiBlockage.cpp	/^int defiBlockage_yl (const ::defiBlockage* obj, int  index) {$/;"	f
defiBoolean	def/defiDefs.hpp	/^typedef int defiBoolean;$/;"	t
defiBoolean	include/defiDefs.hpp	/^typedef int defiBoolean;$/;"	t
defiBox	cdef/defiTypedefs.h	/^typedef void *defiBox;$/;"	t
defiBox	def/defiSite.cpp	/^defiBox::defiBox() {$/;"	f	class:defiBox
defiBox	def/defiSite.hpp	/^class defiBox {$/;"	c
defiBox	include/defiSite.hpp	/^class defiBox {$/;"	c
defiBox	include/defiTypedefs.h	/^typedef void *defiBox;$/;"	t
defiBox_getPoint	cdef/xdefiSite.cpp	/^::defiPoints defiBox_getPoint (const ::defiBox* obj) {$/;"	f
defiBox_print	cdef/xdefiSite.cpp	/^void defiBox_print (const ::defiBox* obj, FILE*  f) {$/;"	f
defiBox_xh	cdef/xdefiSite.cpp	/^int defiBox_xh (const ::defiBox* obj) {$/;"	f
defiBox_xl	cdef/xdefiSite.cpp	/^int defiBox_xl (const ::defiBox* obj) {$/;"	f
defiBox_yh	cdef/xdefiSite.cpp	/^int defiBox_yh (const ::defiBox* obj) {$/;"	f
defiBox_yl	cdef/xdefiSite.cpp	/^int defiBox_yl (const ::defiBox* obj) {$/;"	f
defiComponent	cdef/defiTypedefs.h	/^typedef void *defiComponent;$/;"	t
defiComponent	def/defiComponent.cpp	/^defiComponent::defiComponent(defrData *data) $/;"	f	class:defiComponent
defiComponent	def/defiComponent.hpp	/^class defiComponent {$/;"	c
defiComponent	include/defiComponent.hpp	/^class defiComponent {$/;"	c
defiComponent	include/defiTypedefs.h	/^typedef void *defiComponent;$/;"	t
defiComponentMaskShiftLayer	cdef/defiTypedefs.h	/^typedef void *defiComponentMaskShiftLayer;$/;"	t
defiComponentMaskShiftLayer	def/defiComponent.cpp	/^defiComponentMaskShiftLayer::defiComponentMaskShiftLayer(defrData *data)$/;"	f	class:defiComponentMaskShiftLayer
defiComponentMaskShiftLayer	def/defiComponent.hpp	/^class defiComponentMaskShiftLayer {$/;"	c
defiComponentMaskShiftLayer	include/defiComponent.hpp	/^class defiComponentMaskShiftLayer {$/;"	c
defiComponentMaskShiftLayer	include/defiTypedefs.h	/^typedef void *defiComponentMaskShiftLayer;$/;"	t
defiComponentMaskShiftLayer_maskShiftLayer	cdef/xdefiComponent.cpp	/^const char* defiComponentMaskShiftLayer_maskShiftLayer (const ::defiComponentMaskShiftLayer* obj, int  index) {$/;"	f
defiComponentMaskShiftLayer_numMaskShiftLayers	cdef/xdefiComponent.cpp	/^int defiComponentMaskShiftLayer_numMaskShiftLayers (const ::defiComponentMaskShiftLayer* obj) {$/;"	f
defiComponent_EEQ	cdef/xdefiComponent.cpp	/^const char* defiComponent_EEQ (const ::defiComponent* obj) {$/;"	f
defiComponent_foreignName	cdef/xdefiComponent.cpp	/^const char* defiComponent_foreignName (const ::defiComponent* obj) {$/;"	f
defiComponent_foreignOri	cdef/xdefiComponent.cpp	/^const char* defiComponent_foreignOri (const ::defiComponent* obj) {$/;"	f
defiComponent_foreignOrient	cdef/xdefiComponent.cpp	/^int defiComponent_foreignOrient (const ::defiComponent* obj) {$/;"	f
defiComponent_foreignX	cdef/xdefiComponent.cpp	/^int defiComponent_foreignX (const ::defiComponent* obj) {$/;"	f
defiComponent_foreignY	cdef/xdefiComponent.cpp	/^int defiComponent_foreignY (const ::defiComponent* obj) {$/;"	f
defiComponent_generateName	cdef/xdefiComponent.cpp	/^const char* defiComponent_generateName (const ::defiComponent* obj) {$/;"	f
defiComponent_h	def/defiComponent.hpp	31;"	d
defiComponent_h	include/defiComponent.hpp	31;"	d
defiComponent_haloDist	cdef/xdefiComponent.cpp	/^int defiComponent_haloDist (const ::defiComponent* obj) {$/;"	f
defiComponent_hasEEQ	cdef/xdefiComponent.cpp	/^int defiComponent_hasEEQ (const ::defiComponent* obj) {$/;"	f
defiComponent_hasForeignName	cdef/xdefiComponent.cpp	/^int defiComponent_hasForeignName (const ::defiComponent* obj) {$/;"	f
defiComponent_hasFori	cdef/xdefiComponent.cpp	/^int defiComponent_hasFori (const ::defiComponent* obj) {$/;"	f
defiComponent_hasGenerate	cdef/xdefiComponent.cpp	/^int defiComponent_hasGenerate (const ::defiComponent* obj) {$/;"	f
defiComponent_hasHalo	cdef/xdefiComponent.cpp	/^int defiComponent_hasHalo (const ::defiComponent* obj) {$/;"	f
defiComponent_hasHaloSoft	cdef/xdefiComponent.cpp	/^int defiComponent_hasHaloSoft (const ::defiComponent* obj) {$/;"	f
defiComponent_hasNets	cdef/xdefiComponent.cpp	/^int defiComponent_hasNets (const ::defiComponent* obj) {$/;"	f
defiComponent_hasRegionBounds	cdef/xdefiComponent.cpp	/^int defiComponent_hasRegionBounds (const ::defiComponent* obj) {$/;"	f
defiComponent_hasRegionName	cdef/xdefiComponent.cpp	/^int defiComponent_hasRegionName (const ::defiComponent* obj) {$/;"	f
defiComponent_hasRouteHalo	cdef/xdefiComponent.cpp	/^int defiComponent_hasRouteHalo (const ::defiComponent* obj) {$/;"	f
defiComponent_hasSource	cdef/xdefiComponent.cpp	/^int defiComponent_hasSource (const ::defiComponent* obj) {$/;"	f
defiComponent_hasWeight	cdef/xdefiComponent.cpp	/^int defiComponent_hasWeight (const ::defiComponent* obj) {$/;"	f
defiComponent_id	cdef/xdefiComponent.cpp	/^const char* defiComponent_id (const ::defiComponent* obj) {$/;"	f
defiComponent_isCover	cdef/xdefiComponent.cpp	/^int defiComponent_isCover (const ::defiComponent* obj) {$/;"	f
defiComponent_isFixed	cdef/xdefiComponent.cpp	/^int defiComponent_isFixed (const ::defiComponent* obj) {$/;"	f
defiComponent_isPlaced	cdef/xdefiComponent.cpp	/^int defiComponent_isPlaced (const ::defiComponent* obj) {$/;"	f
defiComponent_isUnplaced	cdef/xdefiComponent.cpp	/^int defiComponent_isUnplaced (const ::defiComponent* obj) {$/;"	f
defiComponent_macroName	cdef/xdefiComponent.cpp	/^const char* defiComponent_macroName (const ::defiComponent* obj) {$/;"	f
defiComponent_maskShift	cdef/xdefiComponent.cpp	/^int defiComponent_maskShift (const ::defiComponent* obj, int  index) {$/;"	f
defiComponent_maskShiftSize	cdef/xdefiComponent.cpp	/^int defiComponent_maskShiftSize (const ::defiComponent* obj) {$/;"	f
defiComponent_maxLayer	cdef/xdefiComponent.cpp	/^const char* defiComponent_maxLayer (const ::defiComponent* obj) {$/;"	f
defiComponent_minLayer	cdef/xdefiComponent.cpp	/^const char* defiComponent_minLayer (const ::defiComponent* obj) {$/;"	f
defiComponent_name	cdef/xdefiComponent.cpp	/^const char* defiComponent_name (const ::defiComponent* obj) {$/;"	f
defiComponent_net	cdef/xdefiComponent.cpp	/^const char* defiComponent_net (const ::defiComponent* obj, int  index) {$/;"	f
defiComponent_numNets	cdef/xdefiComponent.cpp	/^int defiComponent_numNets (const ::defiComponent* obj) {$/;"	f
defiComponent_numProps	cdef/xdefiComponent.cpp	/^int defiComponent_numProps (const ::defiComponent* obj) {$/;"	f
defiComponent_placementOrient	cdef/xdefiComponent.cpp	/^int defiComponent_placementOrient (const ::defiComponent* obj) {$/;"	f
defiComponent_placementOrientStr	cdef/xdefiComponent.cpp	/^const char* defiComponent_placementOrientStr (const ::defiComponent* obj) {$/;"	f
defiComponent_placementStatus	cdef/xdefiComponent.cpp	/^int defiComponent_placementStatus (const ::defiComponent* obj) {$/;"	f
defiComponent_placementX	cdef/xdefiComponent.cpp	/^int defiComponent_placementX (const ::defiComponent* obj) {$/;"	f
defiComponent_placementY	cdef/xdefiComponent.cpp	/^int defiComponent_placementY (const ::defiComponent* obj) {$/;"	f
defiComponent_print	cdef/xdefiComponent.cpp	/^void defiComponent_print (const ::defiComponent* obj, FILE*  fout) {$/;"	f
defiComponent_propIsNumber	cdef/xdefiComponent.cpp	/^int defiComponent_propIsNumber (const ::defiComponent* obj, int  index) {$/;"	f
defiComponent_propIsString	cdef/xdefiComponent.cpp	/^int defiComponent_propIsString (const ::defiComponent* obj, int  index) {$/;"	f
defiComponent_propName	cdef/xdefiComponent.cpp	/^char* defiComponent_propName (const ::defiComponent* obj, int  index) {$/;"	f
defiComponent_propNumber	cdef/xdefiComponent.cpp	/^double defiComponent_propNumber (const ::defiComponent* obj, int  index) {$/;"	f
defiComponent_propType	cdef/xdefiComponent.cpp	/^char defiComponent_propType (const ::defiComponent* obj, int  index) {$/;"	f
defiComponent_propValue	cdef/xdefiComponent.cpp	/^char* defiComponent_propValue (const ::defiComponent* obj, int  index) {$/;"	f
defiComponent_regionBounds	cdef/xdefiComponent.cpp	/^void defiComponent_regionBounds (const ::defiComponent* obj, int* size, int**  xl, int**  yl, int**  xh, int**  yh) {$/;"	f
defiComponent_regionName	cdef/xdefiComponent.cpp	/^const char* defiComponent_regionName (const ::defiComponent* obj) {$/;"	f
defiComponent_source	cdef/xdefiComponent.cpp	/^const char* defiComponent_source (const ::defiComponent* obj) {$/;"	f
defiComponent_weight	cdef/xdefiComponent.cpp	/^int defiComponent_weight (const ::defiComponent* obj) {$/;"	f
defiDebug	cdef/xdefiDebug.cpp	/^int defiDebug (int  num) {$/;"	f
defiDebug	def/defiDebug.cpp	/^int defiDebug(int) {$/;"	f
defiDebug_h	def/defiDebug.hpp	31;"	d
defiDebug_h	include/defiDebug.hpp	31;"	d
defiDeltaNumberLines	def/defrSettings.hpp	/^    int defiDeltaNumberLines;$/;"	m	class:defrSettings
defiDeltaNumberLines	include/defrSettings.hpp	/^    int defiDeltaNumberLines;$/;"	m	class:defrSettings
defiError	cdef/xdefiDebug.cpp	/^void defiError (int  check, int  msgNum, const char*  message) {$/;"	f
defiError	def/defiDebug.cpp	/^void defiError(int check, int msgNum, const char* mess, defrData *defData) {$/;"	f
defiError	def/defrData.cpp	/^defrData::defiError(int check, int msgNum, const char* mess) $/;"	f	class:defrData
defiFILL_h	def/defiFill.hpp	31;"	d
defiFILL_h	include/defiFill.hpp	31;"	d
defiFPC	cdef/defiTypedefs.h	/^typedef void *defiFPC;$/;"	t
defiFPC	def/defiFPC.cpp	/^defiFPC::defiFPC(defrData *data)$/;"	f	class:defiFPC
defiFPC	def/defiFPC.hpp	/^class defiFPC {$/;"	c
defiFPC	include/defiFPC.hpp	/^class defiFPC {$/;"	c
defiFPC	include/defiTypedefs.h	/^typedef void *defiFPC;$/;"	t
defiFPC_alignMax	cdef/xdefiFPC.cpp	/^double defiFPC_alignMax (const ::defiFPC* obj) {$/;"	f
defiFPC_alignMin	cdef/xdefiFPC.cpp	/^double defiFPC_alignMin (const ::defiFPC* obj) {$/;"	f
defiFPC_equal	cdef/xdefiFPC.cpp	/^double defiFPC_equal (const ::defiFPC* obj) {$/;"	f
defiFPC_getPart	cdef/xdefiFPC.cpp	/^void defiFPC_getPart (const ::defiFPC* obj, int  index, int*  corner, int*  typ, char**  name) {$/;"	f
defiFPC_h	def/defiFPC.hpp	31;"	d
defiFPC_h	include/defiFPC.hpp	31;"	d
defiFPC_hasAlign	cdef/xdefiFPC.cpp	/^int defiFPC_hasAlign (const ::defiFPC* obj) {$/;"	f
defiFPC_hasEqual	cdef/xdefiFPC.cpp	/^int defiFPC_hasEqual (const ::defiFPC* obj) {$/;"	f
defiFPC_hasMax	cdef/xdefiFPC.cpp	/^int defiFPC_hasMax (const ::defiFPC* obj) {$/;"	f
defiFPC_hasMin	cdef/xdefiFPC.cpp	/^int defiFPC_hasMin (const ::defiFPC* obj) {$/;"	f
defiFPC_isHorizontal	cdef/xdefiFPC.cpp	/^int defiFPC_isHorizontal (const ::defiFPC* obj) {$/;"	f
defiFPC_isVertical	cdef/xdefiFPC.cpp	/^int defiFPC_isVertical (const ::defiFPC* obj) {$/;"	f
defiFPC_name	cdef/xdefiFPC.cpp	/^const char* defiFPC_name (const ::defiFPC* obj) {$/;"	f
defiFPC_numParts	cdef/xdefiFPC.cpp	/^int defiFPC_numParts (const ::defiFPC* obj) {$/;"	f
defiFPC_print	cdef/xdefiFPC.cpp	/^void defiFPC_print (const ::defiFPC* obj, FILE*  f) {$/;"	f
defiFill	cdef/defiTypedefs.h	/^typedef void *defiFill;$/;"	t
defiFill	def/defiFill.cpp	/^defiFill::defiFill(defrData *data) $/;"	f	class:defiFill
defiFill	def/defiFill.hpp	/^class defiFill {$/;"	c
defiFill	include/defiFill.hpp	/^class defiFill {$/;"	c
defiFill	include/defiTypedefs.h	/^typedef void *defiFill;$/;"	t
defiFill_getPolygon	cdef/xdefiFill.cpp	/^::defiPoints defiFill_getPolygon (const ::defiFill* obj, int  index) {$/;"	f
defiFill_getViaPts	cdef/xdefiFill.cpp	/^::defiPoints defiFill_getViaPts (const ::defiFill* obj, int  index) {$/;"	f
defiFill_hasLayer	cdef/xdefiFill.cpp	/^int defiFill_hasLayer (const ::defiFill* obj) {$/;"	f
defiFill_hasLayerOpc	cdef/xdefiFill.cpp	/^int defiFill_hasLayerOpc (const ::defiFill* obj) {$/;"	f
defiFill_hasVia	cdef/xdefiFill.cpp	/^int defiFill_hasVia (const ::defiFill* obj) {$/;"	f
defiFill_hasViaOpc	cdef/xdefiFill.cpp	/^int defiFill_hasViaOpc (const ::defiFill* obj) {$/;"	f
defiFill_layerMask	cdef/xdefiFill.cpp	/^int defiFill_layerMask (const ::defiFill* obj) {$/;"	f
defiFill_layerName	cdef/xdefiFill.cpp	/^const char* defiFill_layerName (const ::defiFill* obj) {$/;"	f
defiFill_numPolygons	cdef/xdefiFill.cpp	/^int defiFill_numPolygons (const ::defiFill* obj) {$/;"	f
defiFill_numRectangles	cdef/xdefiFill.cpp	/^int defiFill_numRectangles (const ::defiFill* obj) {$/;"	f
defiFill_numViaPts	cdef/xdefiFill.cpp	/^int defiFill_numViaPts (const ::defiFill* obj) {$/;"	f
defiFill_print	cdef/xdefiFill.cpp	/^void defiFill_print (const ::defiFill* obj, FILE*  f) {$/;"	f
defiFill_viaBottomMask	cdef/xdefiFill.cpp	/^int defiFill_viaBottomMask (const ::defiFill* obj) {$/;"	f
defiFill_viaCutMask	cdef/xdefiFill.cpp	/^int defiFill_viaCutMask (const ::defiFill* obj) {$/;"	f
defiFill_viaName	cdef/xdefiFill.cpp	/^const char* defiFill_viaName (const ::defiFill* obj) {$/;"	f
defiFill_viaTopMask	cdef/xdefiFill.cpp	/^int defiFill_viaTopMask (const ::defiFill* obj) {$/;"	f
defiFill_xh	cdef/xdefiFill.cpp	/^int defiFill_xh (const ::defiFill* obj, int  index) {$/;"	f
defiFill_xl	cdef/xdefiFill.cpp	/^int defiFill_xl (const ::defiFill* obj, int  index) {$/;"	f
defiFill_yh	cdef/xdefiFill.cpp	/^int defiFill_yh (const ::defiFill* obj, int  index) {$/;"	f
defiFill_yl	cdef/xdefiFill.cpp	/^int defiFill_yl (const ::defiFill* obj, int  index) {$/;"	f
defiGcellGrid	cdef/defiTypedefs.h	/^typedef void *defiGcellGrid;$/;"	t
defiGcellGrid	def/defiRowTrack.cpp	/^defiGcellGrid::defiGcellGrid(defrData *data)$/;"	f	class:defiGcellGrid
defiGcellGrid	def/defiRowTrack.hpp	/^class defiGcellGrid {$/;"	c
defiGcellGrid	include/defiRowTrack.hpp	/^class defiGcellGrid {$/;"	c
defiGcellGrid	include/defiTypedefs.h	/^typedef void *defiGcellGrid;$/;"	t
defiGcellGrid_macro	cdef/xdefiRowTrack.cpp	/^const char* defiGcellGrid_macro (const ::defiGcellGrid* obj) {$/;"	f
defiGcellGrid_print	cdef/xdefiRowTrack.cpp	/^void defiGcellGrid_print (const ::defiGcellGrid* obj, FILE*  f) {$/;"	f
defiGcellGrid_x	cdef/xdefiRowTrack.cpp	/^int defiGcellGrid_x (const ::defiGcellGrid* obj) {$/;"	f
defiGcellGrid_xNum	cdef/xdefiRowTrack.cpp	/^int defiGcellGrid_xNum (const ::defiGcellGrid* obj) {$/;"	f
defiGcellGrid_xStep	cdef/xdefiRowTrack.cpp	/^double defiGcellGrid_xStep (const ::defiGcellGrid* obj) {$/;"	f
defiGeometries	cdef/defiTypedefs.h	/^typedef void *defiGeometries;$/;"	t
defiGeometries	def/defiMisc.cpp	/^defiGeometries::defiGeometries(defrData *data)$/;"	f	class:defiGeometries
defiGeometries	def/defiMisc.hpp	/^class defiGeometries {$/;"	c
defiGeometries	include/defiMisc.hpp	/^class defiGeometries {$/;"	c
defiGeometries	include/defiTypedefs.h	/^typedef void *defiGeometries;$/;"	t
defiGeometries_numPoints	cdef/xdefiMisc.cpp	/^int defiGeometries_numPoints (const ::defiGeometries* obj) {$/;"	f
defiGeometries_points	cdef/xdefiMisc.cpp	/^void defiGeometries_points (const ::defiGeometries* obj, int  index, int*  x, int*  y) {$/;"	f
defiGroup	cdef/defiTypedefs.h	/^typedef void *defiGroup;$/;"	t
defiGroup	def/defiGroup.cpp	/^defiGroup::defiGroup(defrData *data) $/;"	f	class:defiGroup
defiGroup	def/defiGroup.hpp	/^class defiGroup {$/;"	c
defiGroup	include/defiGroup.hpp	/^class defiGroup {$/;"	c
defiGroup	include/defiTypedefs.h	/^typedef void *defiGroup;$/;"	t
defiGroup_h	def/defiGroup.hpp	31;"	d
defiGroup_h	include/defiGroup.hpp	31;"	d
defiGroup_hasMaxX	cdef/xdefiGroup.cpp	/^int defiGroup_hasMaxX (const ::defiGroup* obj) {$/;"	f
defiGroup_hasMaxY	cdef/xdefiGroup.cpp	/^int defiGroup_hasMaxY (const ::defiGroup* obj) {$/;"	f
defiGroup_hasPerim	cdef/xdefiGroup.cpp	/^int defiGroup_hasPerim (const ::defiGroup* obj) {$/;"	f
defiGroup_hasRegionBox	cdef/xdefiGroup.cpp	/^int defiGroup_hasRegionBox (const ::defiGroup* obj) {$/;"	f
defiGroup_hasRegionName	cdef/xdefiGroup.cpp	/^int defiGroup_hasRegionName (const ::defiGroup* obj) {$/;"	f
defiGroup_maxX	cdef/xdefiGroup.cpp	/^int defiGroup_maxX (const ::defiGroup* obj) {$/;"	f
defiGroup_maxY	cdef/xdefiGroup.cpp	/^int defiGroup_maxY (const ::defiGroup* obj) {$/;"	f
defiGroup_name	cdef/xdefiGroup.cpp	/^const char* defiGroup_name (const ::defiGroup* obj) {$/;"	f
defiGroup_numProps	cdef/xdefiGroup.cpp	/^int defiGroup_numProps (const ::defiGroup* obj) {$/;"	f
defiGroup_perim	cdef/xdefiGroup.cpp	/^int defiGroup_perim (const ::defiGroup* obj) {$/;"	f
defiGroup_print	cdef/xdefiGroup.cpp	/^void defiGroup_print (const ::defiGroup* obj, FILE*  f) {$/;"	f
defiGroup_propIsNumber	cdef/xdefiGroup.cpp	/^int defiGroup_propIsNumber (const ::defiGroup* obj, int  index) {$/;"	f
defiGroup_propIsString	cdef/xdefiGroup.cpp	/^int defiGroup_propIsString (const ::defiGroup* obj, int  index) {$/;"	f
defiGroup_propName	cdef/xdefiGroup.cpp	/^const char* defiGroup_propName (const ::defiGroup* obj, int  index) {$/;"	f
defiGroup_propNumber	cdef/xdefiGroup.cpp	/^double defiGroup_propNumber (const ::defiGroup* obj, int  index) {$/;"	f
defiGroup_propType	cdef/xdefiGroup.cpp	/^const char defiGroup_propType (const ::defiGroup* obj, int  index) {$/;"	f
defiGroup_propValue	cdef/xdefiGroup.cpp	/^const char* defiGroup_propValue (const ::defiGroup* obj, int  index) {$/;"	f
defiGroup_regionName	cdef/xdefiGroup.cpp	/^const char* defiGroup_regionName (const ::defiGroup* obj) {$/;"	f
defiGroup_regionRects	cdef/xdefiGroup.cpp	/^void defiGroup_regionRects (const ::defiGroup* obj, int*  size, int**  xl, int** yl, int**  xh, int**  yh) {$/;"	f
defiIOTiming	cdef/defiTypedefs.h	/^typedef void *defiIOTiming;$/;"	t
defiIOTiming	def/defiIOTiming.cpp	/^defiIOTiming::defiIOTiming(defrData *data)$/;"	f	class:defiIOTiming
defiIOTiming	def/defiIOTiming.hpp	/^class defiIOTiming {$/;"	c
defiIOTiming	include/defiIOTiming.hpp	/^class defiIOTiming {$/;"	c
defiIOTiming	include/defiTypedefs.h	/^typedef void *defiIOTiming;$/;"	t
defiIOTiming_capacitance	cdef/xdefiIOTiming.cpp	/^double defiIOTiming_capacitance (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_driveCell	cdef/xdefiIOTiming.cpp	/^const char* defiIOTiming_driveCell (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_from	cdef/xdefiIOTiming.cpp	/^const char* defiIOTiming_from (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_h	def/defiIOTiming.hpp	31;"	d
defiIOTiming_h	include/defiIOTiming.hpp	31;"	d
defiIOTiming_hasCapacitance	cdef/xdefiIOTiming.cpp	/^int defiIOTiming_hasCapacitance (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_hasDriveCell	cdef/xdefiIOTiming.cpp	/^int defiIOTiming_hasDriveCell (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_hasFrom	cdef/xdefiIOTiming.cpp	/^int defiIOTiming_hasFrom (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_hasParallel	cdef/xdefiIOTiming.cpp	/^int defiIOTiming_hasParallel (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_hasSlewFall	cdef/xdefiIOTiming.cpp	/^int defiIOTiming_hasSlewFall (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_hasSlewRise	cdef/xdefiIOTiming.cpp	/^int defiIOTiming_hasSlewRise (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_hasTo	cdef/xdefiIOTiming.cpp	/^int defiIOTiming_hasTo (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_hasVariableFall	cdef/xdefiIOTiming.cpp	/^int defiIOTiming_hasVariableFall (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_hasVariableRise	cdef/xdefiIOTiming.cpp	/^int defiIOTiming_hasVariableRise (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_inst	cdef/xdefiIOTiming.cpp	/^const char* defiIOTiming_inst (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_parallel	cdef/xdefiIOTiming.cpp	/^double defiIOTiming_parallel (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_pin	cdef/xdefiIOTiming.cpp	/^const char* defiIOTiming_pin (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_print	cdef/xdefiIOTiming.cpp	/^void defiIOTiming_print (const ::defiIOTiming* obj, FILE*  f) {$/;"	f
defiIOTiming_slewFallMax	cdef/xdefiIOTiming.cpp	/^double defiIOTiming_slewFallMax (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_slewFallMin	cdef/xdefiIOTiming.cpp	/^double defiIOTiming_slewFallMin (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_slewRiseMax	cdef/xdefiIOTiming.cpp	/^double defiIOTiming_slewRiseMax (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_slewRiseMin	cdef/xdefiIOTiming.cpp	/^double defiIOTiming_slewRiseMin (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_to	cdef/xdefiIOTiming.cpp	/^const char* defiIOTiming_to (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_variableFallMax	cdef/xdefiIOTiming.cpp	/^double defiIOTiming_variableFallMax (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_variableFallMin	cdef/xdefiIOTiming.cpp	/^double defiIOTiming_variableFallMin (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_variableRiseMax	cdef/xdefiIOTiming.cpp	/^double defiIOTiming_variableRiseMax (const ::defiIOTiming* obj) {$/;"	f
defiIOTiming_variableRiseMin	cdef/xdefiIOTiming.cpp	/^double defiIOTiming_variableRiseMin (const ::defiIOTiming* obj) {$/;"	f
defiInvalidMemoryPolicy	def/defiDefs.hpp	/^  defiInvalidMemoryPolicy = 23950,$/;"	e	enum:__anon9
defiInvalidMemoryPolicy	include/defiDefs.hpp	/^  defiInvalidMemoryPolicy = 23950,$/;"	e	enum:__anon2
defiInvalidObject	def/defiDefs.hpp	/^  defiInvalidObject = 41713, $/;"	e	enum:__anon8
defiInvalidObject	include/defiDefs.hpp	/^  defiInvalidObject = 41713, $/;"	e	enum:__anon1
defiKRDEFS_h	def/defiKRDefs.hpp	31;"	d
defiKRDEFS_h	include/defiKRDefs.hpp	31;"	d
defiMemoryPolicy_e	def/defiDefs.hpp	/^} defiMemoryPolicy_e;$/;"	t	typeref:enum:__anon9
defiMemoryPolicy_e	include/defiDefs.hpp	/^} defiMemoryPolicy_e;$/;"	t	typeref:enum:__anon2
defiMisc_h	def/defiMisc.hpp	31;"	d
defiMisc_h	include/defiMisc.hpp	31;"	d
defiNet	cdef/defiTypedefs.h	/^typedef void *defiNet;$/;"	t
defiNet	def/defiNet.cpp	/^defiNet::defiNet(defrData *data)$/;"	f	class:defiNet
defiNet	def/defiNet.hpp	/^class defiNet {$/;"	c
defiNet	include/defiNet.hpp	/^class defiNet {$/;"	c
defiNet	include/defiTypedefs.h	/^typedef void *defiNet;$/;"	t
defiNet_XTalk	cdef/xdefiNet.cpp	/^int defiNet_XTalk (const ::defiNet* obj) {$/;"	f
defiNet_bottomMaskNum	cdef/xdefiNet.cpp	/^const int defiNet_bottomMaskNum (const ::defiNet* obj, int  index) {$/;"	f
defiNet_cap	cdef/xdefiNet.cpp	/^double defiNet_cap (const ::defiNet* obj) {$/;"	f
defiNet_cutMaskNum	cdef/xdefiNet.cpp	/^const int defiNet_cutMaskNum (const ::defiNet* obj, int  index) {$/;"	f
defiNet_frequency	cdef/xdefiNet.cpp	/^double defiNet_frequency (const ::defiNet* obj) {$/;"	f
defiNet_getPolygon	cdef/xdefiNet.cpp	/^::defiPoints defiNet_getPolygon (const ::defiNet* obj, int  index) {$/;"	f
defiNet_getViaPts	cdef/xdefiNet.cpp	/^::defiPoints defiNet_getViaPts (const ::defiNet* obj, int  index) {$/;"	f
defiNet_h	def/defiNet.hpp	31;"	d
defiNet_h	include/defiNet.hpp	31;"	d
defiNet_hasCap	cdef/xdefiNet.cpp	/^int defiNet_hasCap (const ::defiNet* obj) {$/;"	f
defiNet_hasFixedbump	cdef/xdefiNet.cpp	/^int defiNet_hasFixedbump (const ::defiNet* obj) {$/;"	f
defiNet_hasFrequency	cdef/xdefiNet.cpp	/^int defiNet_hasFrequency (const ::defiNet* obj) {$/;"	f
defiNet_hasNonDefaultRule	cdef/xdefiNet.cpp	/^int defiNet_hasNonDefaultRule (const ::defiNet* obj) {$/;"	f
defiNet_hasOriginal	cdef/xdefiNet.cpp	/^int defiNet_hasOriginal (const ::defiNet* obj) {$/;"	f
defiNet_hasPattern	cdef/xdefiNet.cpp	/^int defiNet_hasPattern (const ::defiNet* obj) {$/;"	f
defiNet_hasProps	cdef/xdefiNet.cpp	/^int defiNet_hasProps (const ::defiNet* obj) {$/;"	f
defiNet_hasSource	cdef/xdefiNet.cpp	/^int defiNet_hasSource (const ::defiNet* obj) {$/;"	f
defiNet_hasSpacingRules	cdef/xdefiNet.cpp	/^int defiNet_hasSpacingRules (const ::defiNet* obj) {$/;"	f
defiNet_hasStyle	cdef/xdefiNet.cpp	/^int defiNet_hasStyle (const ::defiNet* obj) {$/;"	f
defiNet_hasSubnets	cdef/xdefiNet.cpp	/^int defiNet_hasSubnets (const ::defiNet* obj) {$/;"	f
defiNet_hasUse	cdef/xdefiNet.cpp	/^int defiNet_hasUse (const ::defiNet* obj) {$/;"	f
defiNet_hasVoltage	cdef/xdefiNet.cpp	/^int defiNet_hasVoltage (const ::defiNet* obj) {$/;"	f
defiNet_hasWeight	cdef/xdefiNet.cpp	/^int defiNet_hasWeight (const ::defiNet* obj) {$/;"	f
defiNet_hasWidthRules	cdef/xdefiNet.cpp	/^int defiNet_hasWidthRules (const ::defiNet* obj) {$/;"	f
defiNet_hasXTalk	cdef/xdefiNet.cpp	/^int defiNet_hasXTalk (const ::defiNet* obj) {$/;"	f
defiNet_instance	cdef/xdefiNet.cpp	/^const char* defiNet_instance (const ::defiNet* obj, int  index) {$/;"	f
defiNet_isCover	cdef/xdefiNet.cpp	/^int defiNet_isCover (const ::defiNet* obj) {$/;"	f
defiNet_isFixed	cdef/xdefiNet.cpp	/^int defiNet_isFixed (const ::defiNet* obj) {$/;"	f
defiNet_isRouted	cdef/xdefiNet.cpp	/^int defiNet_isRouted (const ::defiNet* obj) {$/;"	f
defiNet_name	cdef/xdefiNet.cpp	/^const char* defiNet_name (const ::defiNet* obj) {$/;"	f
defiNet_noShield	cdef/xdefiNet.cpp	/^const ::defiShield* defiNet_noShield (const ::defiNet* obj, int  index) {$/;"	f
defiNet_nonDefaultRule	cdef/xdefiNet.cpp	/^const char* defiNet_nonDefaultRule (const ::defiNet* obj) {$/;"	f
defiNet_numConnections	cdef/xdefiNet.cpp	/^int defiNet_numConnections (const ::defiNet* obj) {$/;"	f
defiNet_numNoShields	cdef/xdefiNet.cpp	/^int defiNet_numNoShields (const ::defiNet* obj) {$/;"	f
defiNet_numPaths	cdef/xdefiNet.cpp	/^int defiNet_numPaths (const ::defiNet* obj) {$/;"	f
defiNet_numPolygons	cdef/xdefiNet.cpp	/^int defiNet_numPolygons (const ::defiNet* obj) {$/;"	f
defiNet_numProps	cdef/xdefiNet.cpp	/^int defiNet_numProps (const ::defiNet* obj) {$/;"	f
defiNet_numRectangles	cdef/xdefiNet.cpp	/^int defiNet_numRectangles (const ::defiNet* obj) {$/;"	f
defiNet_numShieldNets	cdef/xdefiNet.cpp	/^int defiNet_numShieldNets (const ::defiNet* obj) {$/;"	f
defiNet_numShields	cdef/xdefiNet.cpp	/^int defiNet_numShields (const ::defiNet* obj) {$/;"	f
defiNet_numSpacingRules	cdef/xdefiNet.cpp	/^int defiNet_numSpacingRules (const ::defiNet* obj) {$/;"	f
defiNet_numSubnets	cdef/xdefiNet.cpp	/^int defiNet_numSubnets (const ::defiNet* obj) {$/;"	f
defiNet_numViaSpecs	cdef/xdefiNet.cpp	/^int defiNet_numViaSpecs (const ::defiNet* obj) {$/;"	f
defiNet_numVpins	cdef/xdefiNet.cpp	/^int defiNet_numVpins (const ::defiNet* obj) {$/;"	f
defiNet_numWidthRules	cdef/xdefiNet.cpp	/^int defiNet_numWidthRules (const ::defiNet* obj) {$/;"	f
defiNet_numWires	cdef/xdefiNet.cpp	/^int defiNet_numWires (const ::defiNet* obj) {$/;"	f
defiNet_original	cdef/xdefiNet.cpp	/^const char* defiNet_original (const ::defiNet* obj) {$/;"	f
defiNet_path	cdef/xdefiNet.cpp	/^const ::defiPath* defiNet_path (const ::defiNet* obj, int  index) {$/;"	f
defiNet_pattern	cdef/xdefiNet.cpp	/^const char* defiNet_pattern (const ::defiNet* obj) {$/;"	f
defiNet_pin	cdef/xdefiNet.cpp	/^const char* defiNet_pin (const ::defiNet* obj, int  index) {$/;"	f
defiNet_pinIsMustJoin	cdef/xdefiNet.cpp	/^int defiNet_pinIsMustJoin (const ::defiNet* obj, int  index) {$/;"	f
defiNet_pinIsSynthesized	cdef/xdefiNet.cpp	/^int defiNet_pinIsSynthesized (const ::defiNet* obj, int  index) {$/;"	f
defiNet_polyMask	cdef/xdefiNet.cpp	/^int defiNet_polyMask (const ::defiNet* obj, int  index) {$/;"	f
defiNet_polyRouteStatus	cdef/xdefiNet.cpp	/^const char* defiNet_polyRouteStatus (const ::defiNet* obj, int  index) {$/;"	f
defiNet_polyRouteStatusShieldName	cdef/xdefiNet.cpp	/^const char* defiNet_polyRouteStatusShieldName (const ::defiNet* obj, int  index) {$/;"	f
defiNet_polyShapeType	cdef/xdefiNet.cpp	/^const char* defiNet_polyShapeType (const ::defiNet* obj, int  index) {$/;"	f
defiNet_polygonName	cdef/xdefiNet.cpp	/^const char* defiNet_polygonName (const ::defiNet* obj, int  index) {$/;"	f
defiNet_print	cdef/xdefiNet.cpp	/^void defiNet_print (const ::defiNet* obj, FILE*  f) {$/;"	f
defiNet_propIsNumber	cdef/xdefiNet.cpp	/^int defiNet_propIsNumber (const ::defiNet* obj, int  index) {$/;"	f
defiNet_propIsString	cdef/xdefiNet.cpp	/^int defiNet_propIsString (const ::defiNet* obj, int  index) {$/;"	f
defiNet_propName	cdef/xdefiNet.cpp	/^const char* defiNet_propName (const ::defiNet* obj, int  index) {$/;"	f
defiNet_propNumber	cdef/xdefiNet.cpp	/^double defiNet_propNumber (const ::defiNet* obj, int  index) {$/;"	f
defiNet_propType	cdef/xdefiNet.cpp	/^const char defiNet_propType (const ::defiNet* obj, int  index) {$/;"	f
defiNet_propValue	cdef/xdefiNet.cpp	/^const char* defiNet_propValue (const ::defiNet* obj, int  index) {$/;"	f
defiNet_rectMask	cdef/xdefiNet.cpp	/^int defiNet_rectMask (const ::defiNet* obj, int  index) {$/;"	f
defiNet_rectName	cdef/xdefiNet.cpp	/^const char* defiNet_rectName (const ::defiNet* obj, int  index) {$/;"	f
defiNet_rectRouteStatus	cdef/xdefiNet.cpp	/^const char* defiNet_rectRouteStatus (const ::defiNet* obj, int  index) {$/;"	f
defiNet_rectRouteStatusShieldName	cdef/xdefiNet.cpp	/^const char* defiNet_rectRouteStatusShieldName (const ::defiNet* obj, int  index) {$/;"	f
defiNet_rectShapeType	cdef/xdefiNet.cpp	/^const char* defiNet_rectShapeType (const ::defiNet* obj, int  index) {$/;"	f
defiNet_shield	cdef/xdefiNet.cpp	/^const ::defiShield* defiNet_shield (const ::defiNet* obj, int  index) {$/;"	f
defiNet_shieldNet	cdef/xdefiNet.cpp	/^const char* defiNet_shieldNet (const ::defiNet* obj, int  index) {$/;"	f
defiNet_source	cdef/xdefiNet.cpp	/^const char* defiNet_source (const ::defiNet* obj) {$/;"	f
defiNet_spacingRule	cdef/xdefiNet.cpp	/^void defiNet_spacingRule (const ::defiNet* obj, int  index, char**  layer, double*  dist, double*  left, double*  right) {$/;"	f
defiNet_style	cdef/xdefiNet.cpp	/^int defiNet_style (const ::defiNet* obj) {$/;"	f
defiNet_subnet	cdef/xdefiNet.cpp	/^const ::defiSubnet* defiNet_subnet (const ::defiNet* obj, int  index) {$/;"	f
defiNet_topMaskNum	cdef/xdefiNet.cpp	/^const int defiNet_topMaskNum (const ::defiNet* obj, int  index) {$/;"	f
defiNet_use	cdef/xdefiNet.cpp	/^const char* defiNet_use (const ::defiNet* obj) {$/;"	f
defiNet_viaName	cdef/xdefiNet.cpp	/^const char* defiNet_viaName (const ::defiNet* obj, int  index) {$/;"	f
defiNet_viaOrient	cdef/xdefiNet.cpp	/^const int defiNet_viaOrient (const ::defiNet* obj, int  index) {$/;"	f
defiNet_viaOrientStr	cdef/xdefiNet.cpp	/^const char* defiNet_viaOrientStr (const ::defiNet* obj, int  index) {$/;"	f
defiNet_viaRouteStatus	cdef/xdefiNet.cpp	/^const char* defiNet_viaRouteStatus (const ::defiNet* obj, int  index) {$/;"	f
defiNet_viaRouteStatusShieldName	cdef/xdefiNet.cpp	/^const char* defiNet_viaRouteStatusShieldName (const ::defiNet* obj, int  index) {$/;"	f
defiNet_viaShapeType	cdef/xdefiNet.cpp	/^const char* defiNet_viaShapeType (const ::defiNet* obj, int  index) {$/;"	f
defiNet_voltage	cdef/xdefiNet.cpp	/^double defiNet_voltage (const ::defiNet* obj) {$/;"	f
defiNet_vpin	cdef/xdefiNet.cpp	/^const ::defiVpin* defiNet_vpin (const ::defiNet* obj, int  index) {$/;"	f
defiNet_weight	cdef/xdefiNet.cpp	/^int defiNet_weight (const ::defiNet* obj) {$/;"	f
defiNet_widthRule	cdef/xdefiNet.cpp	/^void defiNet_widthRule (const ::defiNet* obj, int  index, char**  layer, double*  dist) {$/;"	f
defiNet_wire	cdef/xdefiNet.cpp	/^const ::defiWire* defiNet_wire (const ::defiNet* obj, int  index) {$/;"	f
defiNet_xh	cdef/xdefiNet.cpp	/^int defiNet_xh (const ::defiNet* obj, int  index) {$/;"	f
defiNet_xl	cdef/xdefiNet.cpp	/^int defiNet_xl (const ::defiNet* obj, int  index) {$/;"	f
defiNet_yh	cdef/xdefiNet.cpp	/^int defiNet_yh (const ::defiNet* obj, int  index) {$/;"	f
defiNet_yl	cdef/xdefiNet.cpp	/^int defiNet_yl (const ::defiNet* obj, int  index) {$/;"	f
defiNonDefault	cdef/defiTypedefs.h	/^typedef void *defiNonDefault;$/;"	t
defiNonDefault	def/defiNonDefault.cpp	/^defiNonDefault::defiNonDefault(defrData *data)$/;"	f	class:defiNonDefault
defiNonDefault	def/defiNonDefault.hpp	/^class defiNonDefault {$/;"	c
defiNonDefault	include/defiNonDefault.hpp	/^class defiNonDefault {$/;"	c
defiNonDefault	include/defiTypedefs.h	/^typedef void *defiNonDefault;$/;"	t
defiNonDefault_cutLayerName	cdef/xdefiNonDefault.cpp	/^const char* defiNonDefault_cutLayerName (const ::defiNonDefault* obj, int  index) {$/;"	f
defiNonDefault_h	def/defiNonDefault.hpp	31;"	d
defiNonDefault_h	include/defiNonDefault.hpp	31;"	d
defiNonDefault_hasHardspacing	cdef/xdefiNonDefault.cpp	/^int defiNonDefault_hasHardspacing (const ::defiNonDefault* obj) {$/;"	f
defiNonDefault_hasLayerDiagWidth	cdef/xdefiNonDefault.cpp	/^int defiNonDefault_hasLayerDiagWidth (const ::defiNonDefault* obj, int  index) {$/;"	f
defiNonDefault_hasLayerSpacing	cdef/xdefiNonDefault.cpp	/^int defiNonDefault_hasLayerSpacing (const ::defiNonDefault* obj, int  index) {$/;"	f
defiNonDefault_hasLayerWireExt	cdef/xdefiNonDefault.cpp	/^int defiNonDefault_hasLayerWireExt (const ::defiNonDefault* obj, int  index) {$/;"	f
defiNonDefault_layerDiagWidth	cdef/xdefiNonDefault.cpp	/^double defiNonDefault_layerDiagWidth (const ::defiNonDefault* obj, int  index) {$/;"	f
defiNonDefault_layerDiagWidthVal	cdef/xdefiNonDefault.cpp	/^int defiNonDefault_layerDiagWidthVal (const ::defiNonDefault* obj, int  index) {$/;"	f
defiNonDefault_layerName	cdef/xdefiNonDefault.cpp	/^const char* defiNonDefault_layerName (const ::defiNonDefault* obj, int  index) {$/;"	f
defiNonDefault_layerSpacing	cdef/xdefiNonDefault.cpp	/^double defiNonDefault_layerSpacing (const ::defiNonDefault* obj, int  index) {$/;"	f
defiNonDefault_layerSpacingVal	cdef/xdefiNonDefault.cpp	/^int defiNonDefault_layerSpacingVal (const ::defiNonDefault* obj, int  index) {$/;"	f
defiNonDefault_layerWidth	cdef/xdefiNonDefault.cpp	/^double defiNonDefault_layerWidth (const ::defiNonDefault* obj, int  index) {$/;"	f
defiNonDefault_layerWidthVal	cdef/xdefiNonDefault.cpp	/^int defiNonDefault_layerWidthVal (const ::defiNonDefault* obj, int  index) {$/;"	f
defiNonDefault_layerWireExt	cdef/xdefiNonDefault.cpp	/^double defiNonDefault_layerWireExt (const ::defiNonDefault* obj, int  index) {$/;"	f
defiNonDefault_layerWireExtVal	cdef/xdefiNonDefault.cpp	/^int defiNonDefault_layerWireExtVal (const ::defiNonDefault* obj, int  index) {$/;"	f
defiNonDefault_name	cdef/xdefiNonDefault.cpp	/^const char* defiNonDefault_name (const ::defiNonDefault* obj) {$/;"	f
defiNonDefault_numCuts	cdef/xdefiNonDefault.cpp	/^int defiNonDefault_numCuts (const ::defiNonDefault* obj, int  index) {$/;"	f
defiNonDefault_numLayers	cdef/xdefiNonDefault.cpp	/^int defiNonDefault_numLayers (const ::defiNonDefault* obj) {$/;"	f
defiNonDefault_numMinCuts	cdef/xdefiNonDefault.cpp	/^int defiNonDefault_numMinCuts (const ::defiNonDefault* obj) {$/;"	f
defiNonDefault_numProps	cdef/xdefiNonDefault.cpp	/^int defiNonDefault_numProps (const ::defiNonDefault* obj) {$/;"	f
defiNonDefault_numViaRules	cdef/xdefiNonDefault.cpp	/^int defiNonDefault_numViaRules (const ::defiNonDefault* obj) {$/;"	f
defiNonDefault_numVias	cdef/xdefiNonDefault.cpp	/^int defiNonDefault_numVias (const ::defiNonDefault* obj) {$/;"	f
defiNonDefault_print	cdef/xdefiNonDefault.cpp	/^void defiNonDefault_print (const ::defiNonDefault* obj, FILE*  f) {$/;"	f
defiNonDefault_propIsNumber	cdef/xdefiNonDefault.cpp	/^int defiNonDefault_propIsNumber (const ::defiNonDefault* obj, int  index) {$/;"	f
defiNonDefault_propIsString	cdef/xdefiNonDefault.cpp	/^int defiNonDefault_propIsString (const ::defiNonDefault* obj, int  index) {$/;"	f
defiNonDefault_propName	cdef/xdefiNonDefault.cpp	/^const char* defiNonDefault_propName (const ::defiNonDefault* obj, int  index) {$/;"	f
defiNonDefault_propNumber	cdef/xdefiNonDefault.cpp	/^double defiNonDefault_propNumber (const ::defiNonDefault* obj, int  index) {$/;"	f
defiNonDefault_propType	cdef/xdefiNonDefault.cpp	/^const char defiNonDefault_propType (const ::defiNonDefault* obj, int  index) {$/;"	f
defiNonDefault_propValue	cdef/xdefiNonDefault.cpp	/^const char* defiNonDefault_propValue (const ::defiNonDefault* obj, int  index) {$/;"	f
defiNonDefault_viaName	cdef/xdefiNonDefault.cpp	/^const char* defiNonDefault_viaName (const ::defiNonDefault* obj, int  index) {$/;"	f
defiNonDefault_viaRuleName	cdef/xdefiNonDefault.cpp	/^const char* defiNonDefault_viaRuleName (const ::defiNonDefault* obj, int  index) {$/;"	f
defiObjectType_e	def/defiDefs.hpp	/^} defiObjectType_e;$/;"	t	typeref:enum:__anon8
defiObjectType_e	include/defiDefs.hpp	/^} defiObjectType_e;$/;"	t	typeref:enum:__anon1
defiOrdered	cdef/defiTypedefs.h	/^typedef void *defiOrdered;$/;"	t
defiOrdered	def/defiScanchain.cpp	/^defiOrdered::defiOrdered(defrData *data)$/;"	f	class:defiOrdered
defiOrdered	def/defiScanchain.hpp	/^class defiOrdered {$/;"	c
defiOrdered	include/defiScanchain.hpp	/^class defiOrdered {$/;"	c
defiOrdered	include/defiTypedefs.h	/^typedef void *defiOrdered;$/;"	t
defiOrdered_bits	cdef/xdefiScanchain.cpp	/^int* defiOrdered_bits (const ::defiOrdered* obj) {$/;"	f
defiOrdered_in	cdef/xdefiScanchain.cpp	/^char** defiOrdered_in (const ::defiOrdered* obj) {$/;"	f
defiOrdered_inst	cdef/xdefiScanchain.cpp	/^char** defiOrdered_inst (const ::defiOrdered* obj) {$/;"	f
defiOrdered_num	cdef/xdefiScanchain.cpp	/^int defiOrdered_num (const ::defiOrdered* obj) {$/;"	f
defiOrdered_out	cdef/xdefiScanchain.cpp	/^char** defiOrdered_out (const ::defiOrdered* obj) {$/;"	f
defiOrientStr	def/defiUtil.cpp	/^const char* defiOrientStr(int orient) {$/;"	f
defiOrphanSubObjects	def/defiDefs.hpp	/^  defiOrphanSubObjects,       \/\/ deep copy, no delete$/;"	e	enum:__anon9
defiOrphanSubObjects	include/defiDefs.hpp	/^  defiOrphanSubObjects,       \/\/ deep copy, no delete$/;"	e	enum:__anon2
defiPartition	cdef/defiTypedefs.h	/^typedef void *defiPartition;$/;"	t
defiPartition	def/defiPartition.cpp	/^defiPartition::defiPartition(defrData *data)$/;"	f	class:defiPartition
defiPartition	def/defiPartition.hpp	/^class defiPartition {$/;"	c
defiPartition	include/defiPartition.hpp	/^class defiPartition {$/;"	c
defiPartition	include/defiTypedefs.h	/^typedef void *defiPartition;$/;"	t
defiPartition_direction	cdef/xdefiPartition.cpp	/^char defiPartition_direction (const ::defiPartition* obj) {$/;"	f
defiPartition_fallMax	cdef/xdefiPartition.cpp	/^double defiPartition_fallMax (const ::defiPartition* obj) {$/;"	f
defiPartition_fallMaxLeft	cdef/xdefiPartition.cpp	/^double defiPartition_fallMaxLeft (const ::defiPartition* obj) {$/;"	f
defiPartition_fallMaxRight	cdef/xdefiPartition.cpp	/^double defiPartition_fallMaxRight (const ::defiPartition* obj) {$/;"	f
defiPartition_fallMin	cdef/xdefiPartition.cpp	/^double defiPartition_fallMin (const ::defiPartition* obj) {$/;"	f
defiPartition_fallMinLeft	cdef/xdefiPartition.cpp	/^double defiPartition_fallMinLeft (const ::defiPartition* obj) {$/;"	f
defiPartition_fallMinRight	cdef/xdefiPartition.cpp	/^double defiPartition_fallMinRight (const ::defiPartition* obj) {$/;"	f
defiPartition_h	def/defiPartition.hpp	31;"	d
defiPartition_h	include/defiPartition.hpp	31;"	d
defiPartition_hasFallMax	cdef/xdefiPartition.cpp	/^int defiPartition_hasFallMax (const ::defiPartition* obj) {$/;"	f
defiPartition_hasFallMaxRange	cdef/xdefiPartition.cpp	/^int defiPartition_hasFallMaxRange (const ::defiPartition* obj) {$/;"	f
defiPartition_hasFallMin	cdef/xdefiPartition.cpp	/^int defiPartition_hasFallMin (const ::defiPartition* obj) {$/;"	f
defiPartition_hasFallMinRange	cdef/xdefiPartition.cpp	/^int defiPartition_hasFallMinRange (const ::defiPartition* obj) {$/;"	f
defiPartition_hasMax	cdef/xdefiPartition.cpp	/^int defiPartition_hasMax (const ::defiPartition* obj) {$/;"	f
defiPartition_hasMin	cdef/xdefiPartition.cpp	/^int defiPartition_hasMin (const ::defiPartition* obj) {$/;"	f
defiPartition_hasRiseMax	cdef/xdefiPartition.cpp	/^int defiPartition_hasRiseMax (const ::defiPartition* obj) {$/;"	f
defiPartition_hasRiseMaxRange	cdef/xdefiPartition.cpp	/^int defiPartition_hasRiseMaxRange (const ::defiPartition* obj) {$/;"	f
defiPartition_hasRiseMin	cdef/xdefiPartition.cpp	/^int defiPartition_hasRiseMin (const ::defiPartition* obj) {$/;"	f
defiPartition_hasRiseMinRange	cdef/xdefiPartition.cpp	/^int defiPartition_hasRiseMinRange (const ::defiPartition* obj) {$/;"	f
defiPartition_instName	cdef/xdefiPartition.cpp	/^const char* defiPartition_instName (const ::defiPartition* obj) {$/;"	f
defiPartition_isHoldFall	cdef/xdefiPartition.cpp	/^int defiPartition_isHoldFall (const ::defiPartition* obj) {$/;"	f
defiPartition_isHoldRise	cdef/xdefiPartition.cpp	/^int defiPartition_isHoldRise (const ::defiPartition* obj) {$/;"	f
defiPartition_isSetupFall	cdef/xdefiPartition.cpp	/^int defiPartition_isSetupFall (const ::defiPartition* obj) {$/;"	f
defiPartition_isSetupRise	cdef/xdefiPartition.cpp	/^int defiPartition_isSetupRise (const ::defiPartition* obj) {$/;"	f
defiPartition_itemType	cdef/xdefiPartition.cpp	/^const char* defiPartition_itemType (const ::defiPartition* obj) {$/;"	f
defiPartition_name	cdef/xdefiPartition.cpp	/^const char* defiPartition_name (const ::defiPartition* obj) {$/;"	f
defiPartition_numPins	cdef/xdefiPartition.cpp	/^int defiPartition_numPins (const ::defiPartition* obj) {$/;"	f
defiPartition_partitionMax	cdef/xdefiPartition.cpp	/^double defiPartition_partitionMax (const ::defiPartition* obj) {$/;"	f
defiPartition_partitionMin	cdef/xdefiPartition.cpp	/^double defiPartition_partitionMin (const ::defiPartition* obj) {$/;"	f
defiPartition_pin	cdef/xdefiPartition.cpp	/^const char* defiPartition_pin (const ::defiPartition* obj, int  index) {$/;"	f
defiPartition_pinName	cdef/xdefiPartition.cpp	/^const char* defiPartition_pinName (const ::defiPartition* obj) {$/;"	f
defiPartition_print	cdef/xdefiPartition.cpp	/^void defiPartition_print (const ::defiPartition* obj, FILE*  f) {$/;"	f
defiPartition_riseMax	cdef/xdefiPartition.cpp	/^double defiPartition_riseMax (const ::defiPartition* obj) {$/;"	f
defiPartition_riseMaxLeft	cdef/xdefiPartition.cpp	/^double defiPartition_riseMaxLeft (const ::defiPartition* obj) {$/;"	f
defiPartition_riseMaxRight	cdef/xdefiPartition.cpp	/^double defiPartition_riseMaxRight (const ::defiPartition* obj) {$/;"	f
defiPartition_riseMin	cdef/xdefiPartition.cpp	/^double defiPartition_riseMin (const ::defiPartition* obj) {$/;"	f
defiPartition_riseMinLeft	cdef/xdefiPartition.cpp	/^double defiPartition_riseMinLeft (const ::defiPartition* obj) {$/;"	f
defiPartition_riseMinRight	cdef/xdefiPartition.cpp	/^double defiPartition_riseMinRight (const ::defiPartition* obj) {$/;"	f
defiPath	cdef/defiTypedefs.h	/^typedef void *defiPath;$/;"	t
defiPath	def/defiPath.cpp	/^defiPath::defiPath(defiPath *defiPathRef) $/;"	f	class:defiPath
defiPath	def/defiPath.cpp	/^defiPath::defiPath(defrData *data)$/;"	f	class:defiPath
defiPath	def/defiPath.hpp	/^class defiPath {$/;"	c
defiPath	include/defiPath.hpp	/^class defiPath {$/;"	c
defiPath	include/defiTypedefs.h	/^typedef void *defiPath;$/;"	t
defiPath_e	cdef/defiPath.h	/^enum defiPath_e {$/;"	g
defiPath_e	def/defiPath.hpp	/^enum defiPath_e {$/;"	g
defiPath_e	include/defiPath.h	/^enum defiPath_e {$/;"	g
defiPath_e	include/defiPath.hpp	/^enum defiPath_e {$/;"	g
defiPath_getFlushPoint	cdef/xdefiPath.cpp	/^void defiPath_getFlushPoint (const ::defiPath* obj, int*  x, int*  y, int*  ext) {$/;"	f
defiPath_getLayer	cdef/xdefiPath.cpp	/^const char* defiPath_getLayer (const ::defiPath* obj) {$/;"	f
defiPath_getMask	cdef/xdefiPath.cpp	/^int defiPath_getMask (const ::defiPath* obj) {$/;"	f
defiPath_getPoint	cdef/xdefiPath.cpp	/^void defiPath_getPoint (const ::defiPath* obj, int*  x, int*  y) {$/;"	f
defiPath_getRectMask	cdef/xdefiPath.cpp	/^int defiPath_getRectMask (const ::defiPath* obj) {$/;"	f
defiPath_getShape	cdef/xdefiPath.cpp	/^const char* defiPath_getShape (const ::defiPath* obj) {$/;"	f
defiPath_getStyle	cdef/xdefiPath.cpp	/^int defiPath_getStyle (const ::defiPath* obj) {$/;"	f
defiPath_getTaper	cdef/xdefiPath.cpp	/^int defiPath_getTaper (const ::defiPath* obj) {$/;"	f
defiPath_getTaperRule	cdef/xdefiPath.cpp	/^const char* defiPath_getTaperRule (const ::defiPath* obj) {$/;"	f
defiPath_getVia	cdef/xdefiPath.cpp	/^const char* defiPath_getVia (const ::defiPath* obj) {$/;"	f
defiPath_getViaBottomMask	cdef/xdefiPath.cpp	/^int defiPath_getViaBottomMask (const ::defiPath* obj) {$/;"	f
defiPath_getViaCutMask	cdef/xdefiPath.cpp	/^int defiPath_getViaCutMask (const ::defiPath* obj) {$/;"	f
defiPath_getViaData	cdef/xdefiPath.cpp	/^void defiPath_getViaData (const ::defiPath* obj, int*  numX, int*  numY, int*  stepX, int*  stepY) {$/;"	f
defiPath_getViaRect	cdef/xdefiPath.cpp	/^void defiPath_getViaRect (const ::defiPath* obj, int*  deltaX1, int*  deltaY1, int*  deltaX2, int*  deltaY2) {$/;"	f
defiPath_getViaRotation	cdef/xdefiPath.cpp	/^int defiPath_getViaRotation (const ::defiPath* obj) {$/;"	f
defiPath_getViaRotationStr	cdef/xdefiPath.cpp	/^const char* defiPath_getViaRotationStr (const ::defiPath* obj) {$/;"	f
defiPath_getViaTopMask	cdef/xdefiPath.cpp	/^int defiPath_getViaTopMask (const ::defiPath* obj) {$/;"	f
defiPath_getVirtualPoint	cdef/xdefiPath.cpp	/^void defiPath_getVirtualPoint (const ::defiPath* obj, int*  x, int*  y) {$/;"	f
defiPath_getWidth	cdef/xdefiPath.cpp	/^int defiPath_getWidth (const ::defiPath* obj) {$/;"	f
defiPath_h	def/defiPath.hpp	31;"	d
defiPath_h	include/defiPath.hpp	31;"	d
defiPath_initTraverse	cdef/xdefiPath.cpp	/^void defiPath_initTraverse (const ::defiPath* obj) {$/;"	f
defiPath_initTraverseBackwards	cdef/xdefiPath.cpp	/^void defiPath_initTraverseBackwards (const ::defiPath* obj) {$/;"	f
defiPath_next	cdef/xdefiPath.cpp	/^int defiPath_next (const ::defiPath* obj) {$/;"	f
defiPath_prev	cdef/xdefiPath.cpp	/^int defiPath_prev (const ::defiPath* obj) {$/;"	f
defiPath_print	cdef/xdefiPath.cpp	/^void defiPath_print (const ::defiPath* obj, FILE*  fout) {$/;"	f
defiPin	cdef/defiTypedefs.h	/^typedef void *defiPin;$/;"	t
defiPin	def/defiPinCap.cpp	/^defiPin::defiPin(defrData *data)$/;"	f	class:defiPin
defiPin	def/defiPinCap.hpp	/^class defiPin {$/;"	c
defiPin	include/defiPinCap.hpp	/^class defiPin {$/;"	c
defiPin	include/defiTypedefs.h	/^typedef void *defiPin;$/;"	t
defiPinAntennaModel	cdef/defiTypedefs.h	/^typedef void *defiPinAntennaModel;$/;"	t
defiPinAntennaModel	def/defiPinCap.cpp	/^defiPinAntennaModel::defiPinAntennaModel(defrData *data)$/;"	f	class:defiPinAntennaModel
defiPinAntennaModel	def/defiPinCap.hpp	/^class defiPinAntennaModel {$/;"	c
defiPinAntennaModel	include/defiPinCap.hpp	/^class defiPinAntennaModel {$/;"	c
defiPinAntennaModel	include/defiTypedefs.h	/^typedef void *defiPinAntennaModel;$/;"	t
defiPinAntennaModel_APinGateArea	cdef/xdefiPinCap.cpp	/^int defiPinAntennaModel_APinGateArea (const ::defiPinAntennaModel* obj, int  index) {$/;"	f
defiPinAntennaModel_APinGateAreaLayer	cdef/xdefiPinCap.cpp	/^const char* defiPinAntennaModel_APinGateAreaLayer (const ::defiPinAntennaModel* obj, int  index) {$/;"	f
defiPinAntennaModel_APinMaxAreaCar	cdef/xdefiPinCap.cpp	/^int defiPinAntennaModel_APinMaxAreaCar (const ::defiPinAntennaModel* obj, int  index) {$/;"	f
defiPinAntennaModel_APinMaxAreaCarLayer	cdef/xdefiPinCap.cpp	/^const char* defiPinAntennaModel_APinMaxAreaCarLayer (const ::defiPinAntennaModel* obj, int  index) {$/;"	f
defiPinAntennaModel_APinMaxCutCar	cdef/xdefiPinCap.cpp	/^int defiPinAntennaModel_APinMaxCutCar (const ::defiPinAntennaModel* obj, int  index) {$/;"	f
defiPinAntennaModel_APinMaxCutCarLayer	cdef/xdefiPinCap.cpp	/^const char* defiPinAntennaModel_APinMaxCutCarLayer (const ::defiPinAntennaModel* obj, int  index) {$/;"	f
defiPinAntennaModel_APinMaxSideAreaCar	cdef/xdefiPinCap.cpp	/^int defiPinAntennaModel_APinMaxSideAreaCar (const ::defiPinAntennaModel* obj, int  index) {$/;"	f
defiPinAntennaModel_APinMaxSideAreaCarLayer	cdef/xdefiPinCap.cpp	/^const char* defiPinAntennaModel_APinMaxSideAreaCarLayer (const ::defiPinAntennaModel* obj, int  index) {$/;"	f
defiPinAntennaModel_antennaOxide	cdef/xdefiPinCap.cpp	/^char* defiPinAntennaModel_antennaOxide (const ::defiPinAntennaModel* obj) {$/;"	f
defiPinAntennaModel_hasAPinGateArea	cdef/xdefiPinCap.cpp	/^int defiPinAntennaModel_hasAPinGateArea (const ::defiPinAntennaModel* obj) {$/;"	f
defiPinAntennaModel_hasAPinGateAreaLayer	cdef/xdefiPinCap.cpp	/^int defiPinAntennaModel_hasAPinGateAreaLayer (const ::defiPinAntennaModel* obj, int  index) {$/;"	f
defiPinAntennaModel_hasAPinMaxAreaCar	cdef/xdefiPinCap.cpp	/^int defiPinAntennaModel_hasAPinMaxAreaCar (const ::defiPinAntennaModel* obj) {$/;"	f
defiPinAntennaModel_hasAPinMaxAreaCarLayer	cdef/xdefiPinCap.cpp	/^int defiPinAntennaModel_hasAPinMaxAreaCarLayer (const ::defiPinAntennaModel* obj, int  index) {$/;"	f
defiPinAntennaModel_hasAPinMaxCutCar	cdef/xdefiPinCap.cpp	/^int defiPinAntennaModel_hasAPinMaxCutCar (const ::defiPinAntennaModel* obj) {$/;"	f
defiPinAntennaModel_hasAPinMaxCutCarLayer	cdef/xdefiPinCap.cpp	/^int defiPinAntennaModel_hasAPinMaxCutCarLayer (const ::defiPinAntennaModel* obj, int  index) {$/;"	f
defiPinAntennaModel_hasAPinMaxSideAreaCar	cdef/xdefiPinCap.cpp	/^int defiPinAntennaModel_hasAPinMaxSideAreaCar (const ::defiPinAntennaModel* obj) {$/;"	f
defiPinAntennaModel_hasAPinMaxSideAreaCarLayer	cdef/xdefiPinCap.cpp	/^int defiPinAntennaModel_hasAPinMaxSideAreaCarLayer (const ::defiPinAntennaModel* obj, int  index) {$/;"	f
defiPinAntennaModel_numAPinGateArea	cdef/xdefiPinCap.cpp	/^int defiPinAntennaModel_numAPinGateArea (const ::defiPinAntennaModel* obj) {$/;"	f
defiPinAntennaModel_numAPinMaxAreaCar	cdef/xdefiPinCap.cpp	/^int defiPinAntennaModel_numAPinMaxAreaCar (const ::defiPinAntennaModel* obj) {$/;"	f
defiPinAntennaModel_numAPinMaxCutCar	cdef/xdefiPinCap.cpp	/^int defiPinAntennaModel_numAPinMaxCutCar (const ::defiPinAntennaModel* obj) {$/;"	f
defiPinAntennaModel_numAPinMaxSideAreaCar	cdef/xdefiPinCap.cpp	/^int defiPinAntennaModel_numAPinMaxSideAreaCar (const ::defiPinAntennaModel* obj) {$/;"	f
defiPinCap	cdef/defiTypedefs.h	/^typedef void *defiPinCap;$/;"	t
defiPinCap	def/defiPinCap.hpp	/^class defiPinCap {$/;"	c
defiPinCap	include/defiPinCap.hpp	/^class defiPinCap {$/;"	c
defiPinCap	include/defiTypedefs.h	/^typedef void *defiPinCap;$/;"	t
defiPinCap_cap	cdef/xdefiPinCap.cpp	/^double defiPinCap_cap (const ::defiPinCap* obj) {$/;"	f
defiPinCap_h	def/defiPinCap.hpp	31;"	d
defiPinCap_h	include/defiPinCap.hpp	31;"	d
defiPinCap_pin	cdef/xdefiPinCap.cpp	/^int defiPinCap_pin (const ::defiPinCap* obj) {$/;"	f
defiPinCap_print	cdef/xdefiPinCap.cpp	/^void defiPinCap_print (const ::defiPinCap* obj, FILE*  f) {$/;"	f
defiPinPort	cdef/defiTypedefs.h	/^typedef void *defiPinPort;$/;"	t
defiPinPort	def/defiPinCap.cpp	/^defiPinPort::defiPinPort(defrData *data)$/;"	f	class:defiPinPort
defiPinPort	def/defiPinCap.hpp	/^class defiPinPort {                      \/\/ 5.7$/;"	c
defiPinPort	include/defiPinCap.hpp	/^class defiPinPort {                      \/\/ 5.7$/;"	c
defiPinPort	include/defiTypedefs.h	/^typedef void *defiPinPort;$/;"	t
defiPinPort_bounds	cdef/xdefiPinCap.cpp	/^void defiPinPort_bounds (const ::defiPinPort* obj, int  index, int*  xl, int*  yl, int*  xh, int*  yh) {$/;"	f
defiPinPort_getPolygon	cdef/xdefiPinCap.cpp	/^::defiPoints defiPinPort_getPolygon (const ::defiPinPort* obj, int  index) {$/;"	f
defiPinPort_hasLayerDesignRuleWidth	cdef/xdefiPinCap.cpp	/^int defiPinPort_hasLayerDesignRuleWidth (const ::defiPinPort* obj, int  index) {$/;"	f
defiPinPort_hasLayerSpacing	cdef/xdefiPinCap.cpp	/^int defiPinPort_hasLayerSpacing (const ::defiPinPort* obj, int  index) {$/;"	f
defiPinPort_hasPlacement	cdef/xdefiPinCap.cpp	/^int defiPinPort_hasPlacement (const ::defiPinPort* obj) {$/;"	f
defiPinPort_hasPolygonDesignRuleWidth	cdef/xdefiPinCap.cpp	/^int defiPinPort_hasPolygonDesignRuleWidth (const ::defiPinPort* obj, int  index) {$/;"	f
defiPinPort_hasPolygonSpacing	cdef/xdefiPinCap.cpp	/^int defiPinPort_hasPolygonSpacing (const ::defiPinPort* obj, int  index) {$/;"	f
defiPinPort_isCover	cdef/xdefiPinCap.cpp	/^int defiPinPort_isCover (const ::defiPinPort* obj) {$/;"	f
defiPinPort_isFixed	cdef/xdefiPinCap.cpp	/^int defiPinPort_isFixed (const ::defiPinPort* obj) {$/;"	f
defiPinPort_isPlaced	cdef/xdefiPinCap.cpp	/^int defiPinPort_isPlaced (const ::defiPinPort* obj) {$/;"	f
defiPinPort_layer	cdef/xdefiPinCap.cpp	/^const char* defiPinPort_layer (const ::defiPinPort* obj, int  index) {$/;"	f
defiPinPort_layerDesignRuleWidth	cdef/xdefiPinCap.cpp	/^int defiPinPort_layerDesignRuleWidth (const ::defiPinPort* obj, int  index) {$/;"	f
defiPinPort_layerMask	cdef/xdefiPinCap.cpp	/^int defiPinPort_layerMask (const ::defiPinPort* obj, int  index) {$/;"	f
defiPinPort_layerSpacing	cdef/xdefiPinCap.cpp	/^int defiPinPort_layerSpacing (const ::defiPinPort* obj, int  index) {$/;"	f
defiPinPort_numLayer	cdef/xdefiPinCap.cpp	/^int defiPinPort_numLayer (const ::defiPinPort* obj) {$/;"	f
defiPinPort_numPolygons	cdef/xdefiPinCap.cpp	/^int defiPinPort_numPolygons (const ::defiPinPort* obj) {$/;"	f
defiPinPort_numVias	cdef/xdefiPinCap.cpp	/^int defiPinPort_numVias (const ::defiPinPort* obj) {$/;"	f
defiPinPort_orient	cdef/xdefiPinCap.cpp	/^int defiPinPort_orient (const ::defiPinPort* obj) {$/;"	f
defiPinPort_orientStr	cdef/xdefiPinCap.cpp	/^const char* defiPinPort_orientStr (const ::defiPinPort* obj) {$/;"	f
defiPinPort_placementX	cdef/xdefiPinCap.cpp	/^int defiPinPort_placementX (const ::defiPinPort* obj) {$/;"	f
defiPinPort_placementY	cdef/xdefiPinCap.cpp	/^int defiPinPort_placementY (const ::defiPinPort* obj) {$/;"	f
defiPinPort_polygonDesignRuleWidth	cdef/xdefiPinCap.cpp	/^int defiPinPort_polygonDesignRuleWidth (const ::defiPinPort* obj, int  index) {$/;"	f
defiPinPort_polygonMask	cdef/xdefiPinCap.cpp	/^int defiPinPort_polygonMask (const ::defiPinPort* obj, int  index) {$/;"	f
defiPinPort_polygonName	cdef/xdefiPinCap.cpp	/^const char* defiPinPort_polygonName (const ::defiPinPort* obj, int  index) {$/;"	f
defiPinPort_polygonSpacing	cdef/xdefiPinCap.cpp	/^int defiPinPort_polygonSpacing (const ::defiPinPort* obj, int  index) {$/;"	f
defiPinPort_viaBottomMask	cdef/xdefiPinCap.cpp	/^int defiPinPort_viaBottomMask (const ::defiPinPort* obj, int  index) {$/;"	f
defiPinPort_viaCutMask	cdef/xdefiPinCap.cpp	/^int defiPinPort_viaCutMask (const ::defiPinPort* obj, int  index) {$/;"	f
defiPinPort_viaName	cdef/xdefiPinCap.cpp	/^const char* defiPinPort_viaName (const ::defiPinPort* obj, int  index) {$/;"	f
defiPinPort_viaPtX	cdef/xdefiPinCap.cpp	/^int defiPinPort_viaPtX (const ::defiPinPort* obj, int  index) {$/;"	f
defiPinPort_viaPtY	cdef/xdefiPinCap.cpp	/^int defiPinPort_viaPtY (const ::defiPinPort* obj, int  index) {$/;"	f
defiPinPort_viaTopMask	cdef/xdefiPinCap.cpp	/^int defiPinPort_viaTopMask (const ::defiPinPort* obj, int  index) {$/;"	f
defiPinProp	cdef/defiTypedefs.h	/^typedef void *defiPinProp;$/;"	t
defiPinProp	def/defiPinProp.cpp	/^defiPinProp::defiPinProp(defrData *data)$/;"	f	class:defiPinProp
defiPinProp	def/defiPinProp.hpp	/^class defiPinProp {$/;"	c
defiPinProp	include/defiPinProp.hpp	/^class defiPinProp {$/;"	c
defiPinProp	include/defiTypedefs.h	/^typedef void *defiPinProp;$/;"	t
defiPinProp_h	def/defiPinProp.hpp	31;"	d
defiPinProp_h	include/defiPinProp.hpp	31;"	d
defiPinProp_instName	cdef/xdefiPinProp.cpp	/^const char* defiPinProp_instName (const ::defiPinProp* obj) {$/;"	f
defiPinProp_isPin	cdef/xdefiPinProp.cpp	/^int defiPinProp_isPin (const ::defiPinProp* obj) {$/;"	f
defiPinProp_numProps	cdef/xdefiPinProp.cpp	/^int defiPinProp_numProps (const ::defiPinProp* obj) {$/;"	f
defiPinProp_pinName	cdef/xdefiPinProp.cpp	/^const char* defiPinProp_pinName (const ::defiPinProp* obj) {$/;"	f
defiPinProp_print	cdef/xdefiPinProp.cpp	/^void defiPinProp_print (const ::defiPinProp* obj, FILE*  f) {$/;"	f
defiPinProp_propIsNumber	cdef/xdefiPinProp.cpp	/^int defiPinProp_propIsNumber (const ::defiPinProp* obj, int  index) {$/;"	f
defiPinProp_propIsString	cdef/xdefiPinProp.cpp	/^int defiPinProp_propIsString (const ::defiPinProp* obj, int  index) {$/;"	f
defiPinProp_propName	cdef/xdefiPinProp.cpp	/^const char* defiPinProp_propName (const ::defiPinProp* obj, int  index) {$/;"	f
defiPinProp_propNumber	cdef/xdefiPinProp.cpp	/^double defiPinProp_propNumber (const ::defiPinProp* obj, int  index) {$/;"	f
defiPinProp_propType	cdef/xdefiPinProp.cpp	/^const char defiPinProp_propType (const ::defiPinProp* obj, int  index) {$/;"	f
defiPinProp_propValue	cdef/xdefiPinProp.cpp	/^const char* defiPinProp_propValue (const ::defiPinProp* obj, int  index) {$/;"	f
defiPin_APinDiffArea	cdef/xdefiPinCap.cpp	/^int defiPin_APinDiffArea (const ::defiPin* obj, int  index) {$/;"	f
defiPin_APinDiffAreaLayer	cdef/xdefiPinCap.cpp	/^const char* defiPin_APinDiffAreaLayer (const ::defiPin* obj, int  index) {$/;"	f
defiPin_APinPartialCutArea	cdef/xdefiPinCap.cpp	/^int defiPin_APinPartialCutArea (const ::defiPin* obj, int  index) {$/;"	f
defiPin_APinPartialCutAreaLayer	cdef/xdefiPinCap.cpp	/^const char* defiPin_APinPartialCutAreaLayer (const ::defiPin* obj, int  index) {$/;"	f
defiPin_APinPartialMetalArea	cdef/xdefiPinCap.cpp	/^int defiPin_APinPartialMetalArea (const ::defiPin* obj, int  index) {$/;"	f
defiPin_APinPartialMetalAreaLayer	cdef/xdefiPinCap.cpp	/^const char* defiPin_APinPartialMetalAreaLayer (const ::defiPin* obj, int  index) {$/;"	f
defiPin_APinPartialMetalSideArea	cdef/xdefiPinCap.cpp	/^int defiPin_APinPartialMetalSideArea (const ::defiPin* obj, int  index) {$/;"	f
defiPin_APinPartialMetalSideAreaLayer	cdef/xdefiPinCap.cpp	/^const char* defiPin_APinPartialMetalSideAreaLayer (const ::defiPin* obj, int  index) {$/;"	f
defiPin_antennaModel	cdef/xdefiPinCap.cpp	/^const ::defiPinAntennaModel* defiPin_antennaModel (const ::defiPin* obj, int  index) {$/;"	f
defiPin_bounds	cdef/xdefiPinCap.cpp	/^void defiPin_bounds (const ::defiPin* obj, int  index, int*  xl, int*  yl, int*  xh, int*  yh) {$/;"	f
defiPin_direction	cdef/xdefiPinCap.cpp	/^const char* defiPin_direction (const ::defiPin* obj) {$/;"	f
defiPin_getPolygon	cdef/xdefiPinCap.cpp	/^::defiPoints defiPin_getPolygon (const ::defiPin* obj, int  index) {$/;"	f
defiPin_groundSensitivity	cdef/xdefiPinCap.cpp	/^const char* defiPin_groundSensitivity (const ::defiPin* obj) {$/;"	f
defiPin_hasAPinDiffArea	cdef/xdefiPinCap.cpp	/^int defiPin_hasAPinDiffArea (const ::defiPin* obj) {$/;"	f
defiPin_hasAPinDiffAreaLayer	cdef/xdefiPinCap.cpp	/^int defiPin_hasAPinDiffAreaLayer (const ::defiPin* obj, int  index) {$/;"	f
defiPin_hasAPinPartialCutArea	cdef/xdefiPinCap.cpp	/^int defiPin_hasAPinPartialCutArea (const ::defiPin* obj) {$/;"	f
defiPin_hasAPinPartialCutAreaLayer	cdef/xdefiPinCap.cpp	/^int defiPin_hasAPinPartialCutAreaLayer (const ::defiPin* obj, int  index) {$/;"	f
defiPin_hasAPinPartialMetalArea	cdef/xdefiPinCap.cpp	/^int defiPin_hasAPinPartialMetalArea (const ::defiPin* obj) {$/;"	f
defiPin_hasAPinPartialMetalAreaLayer	cdef/xdefiPinCap.cpp	/^int defiPin_hasAPinPartialMetalAreaLayer (const ::defiPin* obj, int  index) {$/;"	f
defiPin_hasAPinPartialMetalSideArea	cdef/xdefiPinCap.cpp	/^int defiPin_hasAPinPartialMetalSideArea (const ::defiPin* obj) {$/;"	f
defiPin_hasAPinPartialMetalSideAreaLayer	cdef/xdefiPinCap.cpp	/^int defiPin_hasAPinPartialMetalSideAreaLayer (const ::defiPin* obj, int  index) {$/;"	f
defiPin_hasDirection	cdef/xdefiPinCap.cpp	/^int defiPin_hasDirection (const ::defiPin* obj) {$/;"	f
defiPin_hasGroundSensitivity	cdef/xdefiPinCap.cpp	/^int defiPin_hasGroundSensitivity (const ::defiPin* obj) {$/;"	f
defiPin_hasLayer	cdef/xdefiPinCap.cpp	/^int defiPin_hasLayer (const ::defiPin* obj) {$/;"	f
defiPin_hasLayerDesignRuleWidth	cdef/xdefiPinCap.cpp	/^int defiPin_hasLayerDesignRuleWidth (const ::defiPin* obj, int  index) {$/;"	f
defiPin_hasLayerSpacing	cdef/xdefiPinCap.cpp	/^int defiPin_hasLayerSpacing (const ::defiPin* obj, int  index) {$/;"	f
defiPin_hasNetExpr	cdef/xdefiPinCap.cpp	/^int defiPin_hasNetExpr (const ::defiPin* obj) {$/;"	f
defiPin_hasPlacement	cdef/xdefiPinCap.cpp	/^int defiPin_hasPlacement (const ::defiPin* obj) {$/;"	f
defiPin_hasPolygonDesignRuleWidth	cdef/xdefiPinCap.cpp	/^int defiPin_hasPolygonDesignRuleWidth (const ::defiPin* obj, int  index) {$/;"	f
defiPin_hasPolygonSpacing	cdef/xdefiPinCap.cpp	/^int defiPin_hasPolygonSpacing (const ::defiPin* obj, int  index) {$/;"	f
defiPin_hasPort	cdef/xdefiPinCap.cpp	/^int defiPin_hasPort (const ::defiPin* obj) {$/;"	f
defiPin_hasSpecial	cdef/xdefiPinCap.cpp	/^int defiPin_hasSpecial (const ::defiPin* obj) {$/;"	f
defiPin_hasSupplySensitivity	cdef/xdefiPinCap.cpp	/^int defiPin_hasSupplySensitivity (const ::defiPin* obj) {$/;"	f
defiPin_hasUse	cdef/xdefiPinCap.cpp	/^int defiPin_hasUse (const ::defiPin* obj) {$/;"	f
defiPin_isCover	cdef/xdefiPinCap.cpp	/^int defiPin_isCover (const ::defiPin* obj) {$/;"	f
defiPin_isFixed	cdef/xdefiPinCap.cpp	/^int defiPin_isFixed (const ::defiPin* obj) {$/;"	f
defiPin_isPlaced	cdef/xdefiPinCap.cpp	/^int defiPin_isPlaced (const ::defiPin* obj) {$/;"	f
defiPin_isUnplaced	cdef/xdefiPinCap.cpp	/^int defiPin_isUnplaced (const ::defiPin* obj) {$/;"	f
defiPin_layer	cdef/xdefiPinCap.cpp	/^const char* defiPin_layer (const ::defiPin* obj, int  index) {$/;"	f
defiPin_layerDesignRuleWidth	cdef/xdefiPinCap.cpp	/^int defiPin_layerDesignRuleWidth (const ::defiPin* obj, int  index) {$/;"	f
defiPin_layerMask	cdef/xdefiPinCap.cpp	/^int defiPin_layerMask (const ::defiPin* obj, int  index) {$/;"	f
defiPin_layerSpacing	cdef/xdefiPinCap.cpp	/^int defiPin_layerSpacing (const ::defiPin* obj, int  index) {$/;"	f
defiPin_netExpr	cdef/xdefiPinCap.cpp	/^const char* defiPin_netExpr (const ::defiPin* obj) {$/;"	f
defiPin_netName	cdef/xdefiPinCap.cpp	/^const char* defiPin_netName (const ::defiPin* obj) {$/;"	f
defiPin_numAPinDiffArea	cdef/xdefiPinCap.cpp	/^int defiPin_numAPinDiffArea (const ::defiPin* obj) {$/;"	f
defiPin_numAPinPartialCutArea	cdef/xdefiPinCap.cpp	/^int defiPin_numAPinPartialCutArea (const ::defiPin* obj) {$/;"	f
defiPin_numAPinPartialMetalArea	cdef/xdefiPinCap.cpp	/^int defiPin_numAPinPartialMetalArea (const ::defiPin* obj) {$/;"	f
defiPin_numAPinPartialMetalSideArea	cdef/xdefiPinCap.cpp	/^int defiPin_numAPinPartialMetalSideArea (const ::defiPin* obj) {$/;"	f
defiPin_numAntennaModel	cdef/xdefiPinCap.cpp	/^int defiPin_numAntennaModel (const ::defiPin* obj) {$/;"	f
defiPin_numLayer	cdef/xdefiPinCap.cpp	/^int defiPin_numLayer (const ::defiPin* obj) {$/;"	f
defiPin_numPolygons	cdef/xdefiPinCap.cpp	/^int defiPin_numPolygons (const ::defiPin* obj) {$/;"	f
defiPin_numPorts	cdef/xdefiPinCap.cpp	/^int defiPin_numPorts (const ::defiPin* obj) {$/;"	f
defiPin_numVias	cdef/xdefiPinCap.cpp	/^int defiPin_numVias (const ::defiPin* obj) {$/;"	f
defiPin_orient	cdef/xdefiPinCap.cpp	/^int defiPin_orient (const ::defiPin* obj) {$/;"	f
defiPin_orientStr	cdef/xdefiPinCap.cpp	/^const char* defiPin_orientStr (const ::defiPin* obj) {$/;"	f
defiPin_pinName	cdef/xdefiPinCap.cpp	/^const char* defiPin_pinName (const ::defiPin* obj) {$/;"	f
defiPin_pinPort	cdef/xdefiPinCap.cpp	/^const ::defiPinPort* defiPin_pinPort (const ::defiPin* obj, int  index) {$/;"	f
defiPin_placementX	cdef/xdefiPinCap.cpp	/^int defiPin_placementX (const ::defiPin* obj) {$/;"	f
defiPin_placementY	cdef/xdefiPinCap.cpp	/^int defiPin_placementY (const ::defiPin* obj) {$/;"	f
defiPin_polygonDesignRuleWidth	cdef/xdefiPinCap.cpp	/^int defiPin_polygonDesignRuleWidth (const ::defiPin* obj, int  index) {$/;"	f
defiPin_polygonMask	cdef/xdefiPinCap.cpp	/^int defiPin_polygonMask (const ::defiPin* obj, int  index) {$/;"	f
defiPin_polygonName	cdef/xdefiPinCap.cpp	/^const char* defiPin_polygonName (const ::defiPin* obj, int  index) {$/;"	f
defiPin_polygonSpacing	cdef/xdefiPinCap.cpp	/^int defiPin_polygonSpacing (const ::defiPin* obj, int  index) {$/;"	f
defiPin_print	cdef/xdefiPinCap.cpp	/^void defiPin_print (const ::defiPin* obj, FILE*  f) {$/;"	f
defiPin_supplySensitivity	cdef/xdefiPinCap.cpp	/^const char* defiPin_supplySensitivity (const ::defiPin* obj) {$/;"	f
defiPin_use	cdef/xdefiPinCap.cpp	/^const char* defiPin_use (const ::defiPin* obj) {$/;"	f
defiPin_viaBottomMask	cdef/xdefiPinCap.cpp	/^int defiPin_viaBottomMask (const ::defiPin* obj, int  index) {$/;"	f
defiPin_viaCutMask	cdef/xdefiPinCap.cpp	/^int defiPin_viaCutMask (const ::defiPin* obj, int  index) {$/;"	f
defiPin_viaName	cdef/xdefiPinCap.cpp	/^const char* defiPin_viaName (const ::defiPin* obj, int  index) {$/;"	f
defiPin_viaPtX	cdef/xdefiPinCap.cpp	/^int defiPin_viaPtX (const ::defiPin* obj, int  index) {$/;"	f
defiPin_viaPtY	cdef/xdefiPinCap.cpp	/^int defiPin_viaPtY (const ::defiPin* obj, int  index) {$/;"	f
defiPin_viaTopMask	cdef/xdefiPinCap.cpp	/^int defiPin_viaTopMask (const ::defiPin* obj, int  index) {$/;"	f
defiPnt	cdef/defiTypedefs.h	/^struct defiPnt {$/;"	s
defiPnt	def/defiPath.hpp	/^struct defiPnt {$/;"	s
defiPnt	include/defiPath.hpp	/^struct defiPnt {$/;"	s
defiPnt	include/defiTypedefs.h	/^struct defiPnt {$/;"	s
defiPoints	cdef/defiTypedefs.h	/^struct defiPoints {$/;"	s
defiPoints	def/defiMisc.hpp	/^struct defiPoints {$/;"	s
defiPoints	include/defiMisc.hpp	/^struct defiPoints {$/;"	s
defiPoints	include/defiTypedefs.h	/^struct defiPoints {$/;"	s
defiPrivateSubObjects	def/defiDefs.hpp	/^  defiPrivateSubObjects,      \/\/ deep copy + delete$/;"	e	enum:__anon9
defiPrivateSubObjects	include/defiDefs.hpp	/^  defiPrivateSubObjects,      \/\/ deep copy + delete$/;"	e	enum:__anon2
defiProp	cdef/defiTypedefs.h	/^typedef void *defiProp;$/;"	t
defiProp	def/defiProp.cpp	/^defiProp::defiProp(defrData *data)$/;"	f	class:defiProp
defiProp	def/defiProp.hpp	/^class defiProp {$/;"	c
defiProp	include/defiProp.hpp	/^class defiProp {$/;"	c
defiProp	include/defiTypedefs.h	/^typedef void *defiProp;$/;"	t
defiPropType	cdef/defiTypedefs.h	/^typedef void *defiPropType;$/;"	t
defiPropType	def/defiPropType.cpp	/^defiPropType::defiPropType() {$/;"	f	class:defiPropType
defiPropType	def/defiPropType.hpp	/^class defiPropType {$/;"	c
defiPropType	include/defiPropType.hpp	/^class defiPropType {$/;"	c
defiPropType	include/defiTypedefs.h	/^typedef void *defiPropType;$/;"	t
defiPropType_h	def/defiPropType.hpp	31;"	d
defiPropType_h	include/defiPropType.hpp	31;"	d
defiPropType_propType	cdef/xdefiPropType.cpp	/^const char defiPropType_propType (const ::defiPropType* obj, char*  name) {$/;"	f
defiProp_dataType	cdef/xdefiProp.cpp	/^char defiProp_dataType (const ::defiProp* obj) {$/;"	f
defiProp_h	def/defiProp.hpp	31;"	d
defiProp_h	include/defiProp.hpp	31;"	d
defiProp_hasNameMapString	cdef/xdefiProp.cpp	/^int defiProp_hasNameMapString (const ::defiProp* obj) {$/;"	f
defiProp_hasNumber	cdef/xdefiProp.cpp	/^int defiProp_hasNumber (const ::defiProp* obj) {$/;"	f
defiProp_hasRange	cdef/xdefiProp.cpp	/^int defiProp_hasRange (const ::defiProp* obj) {$/;"	f
defiProp_hasString	cdef/xdefiProp.cpp	/^int defiProp_hasString (const ::defiProp* obj) {$/;"	f
defiProp_left	cdef/xdefiProp.cpp	/^double defiProp_left (const ::defiProp* obj) {$/;"	f
defiProp_number	cdef/xdefiProp.cpp	/^double defiProp_number (const ::defiProp* obj) {$/;"	f
defiProp_print	cdef/xdefiProp.cpp	/^void defiProp_print (const ::defiProp* obj, FILE*  f) {$/;"	f
defiProp_propName	cdef/xdefiProp.cpp	/^const char* defiProp_propName (const ::defiProp* obj) {$/;"	f
defiProp_propType	cdef/xdefiProp.cpp	/^const char* defiProp_propType (const ::defiProp* obj) {$/;"	f
defiProp_right	cdef/xdefiProp.cpp	/^double defiProp_right (const ::defiProp* obj) {$/;"	f
defiProp_string	cdef/xdefiProp.cpp	/^const char* defiProp_string (const ::defiProp* obj) {$/;"	f
defiReferencedSubObjects	def/defiDefs.hpp	/^  defiReferencedSubObjects,   \/\/ shallow copy, no delete$/;"	e	enum:__anon9
defiReferencedSubObjects	include/defiDefs.hpp	/^  defiReferencedSubObjects,   \/\/ shallow copy, no delete$/;"	e	enum:__anon2
defiRegion	cdef/defiTypedefs.h	/^typedef void *defiRegion;$/;"	t
defiRegion	def/defiRegion.cpp	/^defiRegion::defiRegion(defrData *data)$/;"	f	class:defiRegion
defiRegion	def/defiRegion.hpp	/^class defiRegion {$/;"	c
defiRegion	include/defiRegion.hpp	/^class defiRegion {$/;"	c
defiRegion	include/defiTypedefs.h	/^typedef void *defiRegion;$/;"	t
defiRegion_h	def/defiRegion.hpp	31;"	d
defiRegion_h	include/defiRegion.hpp	31;"	d
defiRegion_hasType	cdef/xdefiRegion.cpp	/^int defiRegion_hasType (const ::defiRegion* obj) {$/;"	f
defiRegion_name	cdef/xdefiRegion.cpp	/^const char* defiRegion_name (const ::defiRegion* obj) {$/;"	f
defiRegion_numProps	cdef/xdefiRegion.cpp	/^int defiRegion_numProps (const ::defiRegion* obj) {$/;"	f
defiRegion_numRectangles	cdef/xdefiRegion.cpp	/^int defiRegion_numRectangles (const ::defiRegion* obj) {$/;"	f
defiRegion_print	cdef/xdefiRegion.cpp	/^void defiRegion_print (const ::defiRegion* obj, FILE*  f) {$/;"	f
defiRegion_propIsNumber	cdef/xdefiRegion.cpp	/^int defiRegion_propIsNumber (const ::defiRegion* obj, int  index) {$/;"	f
defiRegion_propIsString	cdef/xdefiRegion.cpp	/^int defiRegion_propIsString (const ::defiRegion* obj, int  index) {$/;"	f
defiRegion_propName	cdef/xdefiRegion.cpp	/^const char* defiRegion_propName (const ::defiRegion* obj, int  index) {$/;"	f
defiRegion_propNumber	cdef/xdefiRegion.cpp	/^double defiRegion_propNumber (const ::defiRegion* obj, int  index) {$/;"	f
defiRegion_propType	cdef/xdefiRegion.cpp	/^const char defiRegion_propType (const ::defiRegion* obj, int  index) {$/;"	f
defiRegion_propValue	cdef/xdefiRegion.cpp	/^const char* defiRegion_propValue (const ::defiRegion* obj, int  index) {$/;"	f
defiRegion_type	cdef/xdefiRegion.cpp	/^const char* defiRegion_type (const ::defiRegion* obj) {$/;"	f
defiRegion_xh	cdef/xdefiRegion.cpp	/^int defiRegion_xh (const ::defiRegion* obj, int  index) {$/;"	f
defiRegion_xl	cdef/xdefiRegion.cpp	/^int defiRegion_xl (const ::defiRegion* obj, int  index) {$/;"	f
defiRegion_yh	cdef/xdefiRegion.cpp	/^int defiRegion_yh (const ::defiRegion* obj, int  index) {$/;"	f
defiRegion_yl	cdef/xdefiRegion.cpp	/^int defiRegion_yl (const ::defiRegion* obj, int  index) {$/;"	f
defiRow	cdef/defiTypedefs.h	/^typedef void *defiRow;$/;"	t
defiRow	def/defiRowTrack.cpp	/^defiRow::defiRow(defrData *data)$/;"	f	class:defiRow
defiRow	def/defiRowTrack.hpp	/^class defiRow{$/;"	c
defiRow	include/defiRowTrack.hpp	/^class defiRow{$/;"	c
defiRow	include/defiTypedefs.h	/^typedef void *defiRow;$/;"	t
defiRowTrack_h	def/defiRowTrack.hpp	31;"	d
defiRowTrack_h	include/defiRowTrack.hpp	31;"	d
defiRow_hasDo	cdef/xdefiRowTrack.cpp	/^int defiRow_hasDo (const ::defiRow* obj) {$/;"	f
defiRow_hasDoStep	cdef/xdefiRowTrack.cpp	/^int defiRow_hasDoStep (const ::defiRow* obj) {$/;"	f
defiRow_macro	cdef/xdefiRowTrack.cpp	/^const char* defiRow_macro (const ::defiRow* obj) {$/;"	f
defiRow_name	cdef/xdefiRowTrack.cpp	/^const char* defiRow_name (const ::defiRow* obj) {$/;"	f
defiRow_numProps	cdef/xdefiRowTrack.cpp	/^int defiRow_numProps (const ::defiRow* obj) {$/;"	f
defiRow_orient	cdef/xdefiRowTrack.cpp	/^int defiRow_orient (const ::defiRow* obj) {$/;"	f
defiRow_orientStr	cdef/xdefiRowTrack.cpp	/^const char* defiRow_orientStr (const ::defiRow* obj) {$/;"	f
defiRow_print	cdef/xdefiRowTrack.cpp	/^void defiRow_print (const ::defiRow* obj, FILE*  f) {$/;"	f
defiRow_propIsNumber	cdef/xdefiRowTrack.cpp	/^int defiRow_propIsNumber (const ::defiRow* obj, int  index) {$/;"	f
defiRow_propIsString	cdef/xdefiRowTrack.cpp	/^int defiRow_propIsString (const ::defiRow* obj, int  index) {$/;"	f
defiRow_propName	cdef/xdefiRowTrack.cpp	/^const char* defiRow_propName (const ::defiRow* obj, int  index) {$/;"	f
defiRow_propNumber	cdef/xdefiRowTrack.cpp	/^double defiRow_propNumber (const ::defiRow* obj, int  index) {$/;"	f
defiRow_propType	cdef/xdefiRowTrack.cpp	/^const char defiRow_propType (const ::defiRow* obj, int  index) {$/;"	f
defiRow_propValue	cdef/xdefiRowTrack.cpp	/^const char* defiRow_propValue (const ::defiRow* obj, int  index) {$/;"	f
defiRow_x	cdef/xdefiRowTrack.cpp	/^double defiRow_x (const ::defiRow* obj) {$/;"	f
defiRow_xNum	cdef/xdefiRowTrack.cpp	/^double defiRow_xNum (const ::defiRow* obj) {$/;"	f
defiRow_xStep	cdef/xdefiRowTrack.cpp	/^double defiRow_xStep (const ::defiRow* obj) {$/;"	f
defiRow_y	cdef/xdefiRowTrack.cpp	/^double defiRow_y (const ::defiRow* obj) {$/;"	f
defiRow_yNum	cdef/xdefiRowTrack.cpp	/^double defiRow_yNum (const ::defiRow* obj) {$/;"	f
defiRow_yStep	cdef/xdefiRowTrack.cpp	/^double defiRow_yStep (const ::defiRow* obj) {$/;"	f
defiSLOT_h	def/defiSlot.hpp	31;"	d
defiSLOT_h	include/defiSlot.hpp	31;"	d
defiScanchain	cdef/defiTypedefs.h	/^typedef void *defiScanchain;$/;"	t
defiScanchain	def/defiScanchain.cpp	/^defiScanchain::defiScanchain(defrData *data)$/;"	f	class:defiScanchain
defiScanchain	def/defiScanchain.hpp	/^class defiScanchain {$/;"	c
defiScanchain	include/defiScanchain.hpp	/^class defiScanchain {$/;"	c
defiScanchain	include/defiTypedefs.h	/^typedef void *defiScanchain;$/;"	t
defiScanchain_commonInPin	cdef/xdefiScanchain.cpp	/^const char* defiScanchain_commonInPin (const ::defiScanchain* obj) {$/;"	f
defiScanchain_commonOutPin	cdef/xdefiScanchain.cpp	/^const char* defiScanchain_commonOutPin (const ::defiScanchain* obj) {$/;"	f
defiScanchain_floating	cdef/xdefiScanchain.cpp	/^void defiScanchain_floating (const ::defiScanchain* obj, int*  size, char***  inst, char***  inPin, char***  outPin, int**  bits) {$/;"	f
defiScanchain_h	def/defiScanchain.hpp	31;"	d
defiScanchain_h	include/defiScanchain.hpp	31;"	d
defiScanchain_hasCommonInPin	cdef/xdefiScanchain.cpp	/^int defiScanchain_hasCommonInPin (const ::defiScanchain* obj) {$/;"	f
defiScanchain_hasCommonOutPin	cdef/xdefiScanchain.cpp	/^int defiScanchain_hasCommonOutPin (const ::defiScanchain* obj) {$/;"	f
defiScanchain_hasFloating	cdef/xdefiScanchain.cpp	/^int defiScanchain_hasFloating (const ::defiScanchain* obj) {$/;"	f
defiScanchain_hasOrdered	cdef/xdefiScanchain.cpp	/^int defiScanchain_hasOrdered (const ::defiScanchain* obj) {$/;"	f
defiScanchain_hasPartition	cdef/xdefiScanchain.cpp	/^int defiScanchain_hasPartition (const ::defiScanchain* obj) {$/;"	f
defiScanchain_hasPartitionMaxBits	cdef/xdefiScanchain.cpp	/^int defiScanchain_hasPartitionMaxBits (const ::defiScanchain* obj) {$/;"	f
defiScanchain_hasStart	cdef/xdefiScanchain.cpp	/^int defiScanchain_hasStart (const ::defiScanchain* obj) {$/;"	f
defiScanchain_hasStop	cdef/xdefiScanchain.cpp	/^int defiScanchain_hasStop (const ::defiScanchain* obj) {$/;"	f
defiScanchain_name	cdef/xdefiScanchain.cpp	/^const char* defiScanchain_name (const ::defiScanchain* obj) {$/;"	f
defiScanchain_numOrderedLists	cdef/xdefiScanchain.cpp	/^int defiScanchain_numOrderedLists (const ::defiScanchain* obj) {$/;"	f
defiScanchain_ordered	cdef/xdefiScanchain.cpp	/^void defiScanchain_ordered (const ::defiScanchain* obj, int  index, int*  size, char***  inst, char***  inPin, char***  outPin, int**  bits) {$/;"	f
defiScanchain_partitionMaxBits	cdef/xdefiScanchain.cpp	/^int defiScanchain_partitionMaxBits (const ::defiScanchain* obj) {$/;"	f
defiScanchain_partitionName	cdef/xdefiScanchain.cpp	/^const char* defiScanchain_partitionName (const ::defiScanchain* obj) {$/;"	f
defiScanchain_print	cdef/xdefiScanchain.cpp	/^void defiScanchain_print (const ::defiScanchain* obj, FILE*  f) {$/;"	f
defiScanchain_start	cdef/xdefiScanchain.cpp	/^void defiScanchain_start (const ::defiScanchain* obj, char**  inst, char**  pin) {$/;"	f
defiScanchain_stop	cdef/xdefiScanchain.cpp	/^void defiScanchain_stop (const ::defiScanchain* obj, char**  inst, char**  pin) {$/;"	f
defiSetDebug	cdef/xdefiDebug.cpp	/^void defiSetDebug (int  num, int  value) {$/;"	f
defiSetDebug	def/defiDebug.cpp	/^void defiSetDebug(int, int) {$/;"	f
defiShield	cdef/defiTypedefs.h	/^typedef void *defiShield;$/;"	t
defiShield	def/defiNet.cpp	/^defiShield::defiShield(defrData *data)$/;"	f	class:defiShield
defiShield	def/defiNet.hpp	/^class defiShield {$/;"	c
defiShield	include/defiNet.hpp	/^class defiShield {$/;"	c
defiShield	include/defiTypedefs.h	/^typedef void *defiShield;$/;"	t
defiShield_numPaths	cdef/xdefiNet.cpp	/^int defiShield_numPaths (const ::defiShield* obj) {$/;"	f
defiShield_path	cdef/xdefiNet.cpp	/^const ::defiPath* defiShield_path (const ::defiShield* obj, int  index) {$/;"	f
defiShield_shieldName	cdef/xdefiNet.cpp	/^const char* defiShield_shieldName (const ::defiShield* obj) {$/;"	f
defiSite	cdef/defiTypedefs.h	/^typedef void *defiSite;$/;"	t
defiSite	def/defiSite.cpp	/^defiSite::defiSite(defrData *data)$/;"	f	class:defiSite
defiSite	def/defiSite.hpp	/^class defiSite {$/;"	c
defiSite	include/defiSite.hpp	/^class defiSite {$/;"	c
defiSite	include/defiTypedefs.h	/^typedef void *defiSite;$/;"	t
defiSite_h	def/defiSite.hpp	31;"	d
defiSite_h	include/defiSite.hpp	31;"	d
defiSite_name	cdef/xdefiSite.cpp	/^const char* defiSite_name (const ::defiSite* obj) {$/;"	f
defiSite_orient	cdef/xdefiSite.cpp	/^int defiSite_orient (const ::defiSite* obj) {$/;"	f
defiSite_orientStr	cdef/xdefiSite.cpp	/^const char* defiSite_orientStr (const ::defiSite* obj) {$/;"	f
defiSite_print	cdef/xdefiSite.cpp	/^void defiSite_print (const ::defiSite* obj, FILE*  f) {$/;"	f
defiSite_x_num	cdef/xdefiSite.cpp	/^double defiSite_x_num (const ::defiSite* obj) {$/;"	f
defiSite_x_orig	cdef/xdefiSite.cpp	/^double defiSite_x_orig (const ::defiSite* obj) {$/;"	f
defiSite_x_step	cdef/xdefiSite.cpp	/^double defiSite_x_step (const ::defiSite* obj) {$/;"	f
defiSite_y_num	cdef/xdefiSite.cpp	/^double defiSite_y_num (const ::defiSite* obj) {$/;"	f
defiSite_y_orig	cdef/xdefiSite.cpp	/^double defiSite_y_orig (const ::defiSite* obj) {$/;"	f
defiSite_y_step	cdef/xdefiSite.cpp	/^double defiSite_y_step (const ::defiSite* obj) {$/;"	f
defiSlot	cdef/defiTypedefs.h	/^typedef void *defiSlot;$/;"	t
defiSlot	def/defiSlot.cpp	/^defiSlot::defiSlot(defrData *data)$/;"	f	class:defiSlot
defiSlot	def/defiSlot.hpp	/^class defiSlot {$/;"	c
defiSlot	include/defiSlot.hpp	/^class defiSlot {$/;"	c
defiSlot	include/defiTypedefs.h	/^typedef void *defiSlot;$/;"	t
defiSlot_getPolygon	cdef/xdefiSlot.cpp	/^::defiPoints defiSlot_getPolygon (const ::defiSlot* obj, int  index) {$/;"	f
defiSlot_hasLayer	cdef/xdefiSlot.cpp	/^int defiSlot_hasLayer (const ::defiSlot* obj) {$/;"	f
defiSlot_layerName	cdef/xdefiSlot.cpp	/^const char* defiSlot_layerName (const ::defiSlot* obj) {$/;"	f
defiSlot_numPolygons	cdef/xdefiSlot.cpp	/^int defiSlot_numPolygons (const ::defiSlot* obj) {$/;"	f
defiSlot_numRectangles	cdef/xdefiSlot.cpp	/^int defiSlot_numRectangles (const ::defiSlot* obj) {$/;"	f
defiSlot_print	cdef/xdefiSlot.cpp	/^void defiSlot_print (const ::defiSlot* obj, FILE*  f) {$/;"	f
defiSlot_xh	cdef/xdefiSlot.cpp	/^int defiSlot_xh (const ::defiSlot* obj, int  index) {$/;"	f
defiSlot_xl	cdef/xdefiSlot.cpp	/^int defiSlot_xl (const ::defiSlot* obj, int  index) {$/;"	f
defiSlot_yh	cdef/xdefiSlot.cpp	/^int defiSlot_yh (const ::defiSlot* obj, int  index) {$/;"	f
defiSlot_yl	cdef/xdefiSlot.cpp	/^int defiSlot_yl (const ::defiSlot* obj, int  index) {$/;"	f
defiStyles	cdef/defiTypedefs.h	/^typedef void *defiStyles;$/;"	t
defiStyles	def/defiMisc.cpp	/^defiStyles::defiStyles() {$/;"	f	class:defiStyles
defiStyles	def/defiMisc.hpp	/^class defiStyles {$/;"	c
defiStyles	include/defiMisc.hpp	/^class defiStyles {$/;"	c
defiStyles	include/defiTypedefs.h	/^typedef void *defiStyles;$/;"	t
defiStyles_getPolygon	cdef/xdefiMisc.cpp	/^::defiPoints defiStyles_getPolygon (const ::defiStyles* obj) {$/;"	f
defiStyles_style	cdef/xdefiMisc.cpp	/^int defiStyles_style (const ::defiStyles* obj) {$/;"	f
defiSubnet	cdef/defiTypedefs.h	/^typedef void *defiSubnet;$/;"	t
defiSubnet	def/defiNet.cpp	/^defiSubnet::defiSubnet(defrData *data)$/;"	f	class:defiSubnet
defiSubnet	def/defiNet.hpp	/^class defiSubnet {$/;"	c
defiSubnet	include/defiNet.hpp	/^class defiSubnet {$/;"	c
defiSubnet	include/defiTypedefs.h	/^typedef void *defiSubnet;$/;"	t
defiSubnet_hasNonDefaultRule	cdef/xdefiNet.cpp	/^int defiSubnet_hasNonDefaultRule (const ::defiSubnet* obj) {$/;"	f
defiSubnet_instance	cdef/xdefiNet.cpp	/^const char* defiSubnet_instance (const ::defiSubnet* obj, int  index) {$/;"	f
defiSubnet_isCover	cdef/xdefiNet.cpp	/^int defiSubnet_isCover (const ::defiSubnet* obj) {$/;"	f
defiSubnet_isFixed	cdef/xdefiNet.cpp	/^int defiSubnet_isFixed (const ::defiSubnet* obj) {$/;"	f
defiSubnet_isRouted	cdef/xdefiNet.cpp	/^int defiSubnet_isRouted (const ::defiSubnet* obj) {$/;"	f
defiSubnet_name	cdef/xdefiNet.cpp	/^const char* defiSubnet_name (const ::defiSubnet* obj) {$/;"	f
defiSubnet_nonDefaultRule	cdef/xdefiNet.cpp	/^const char* defiSubnet_nonDefaultRule (const ::defiSubnet* obj) {$/;"	f
defiSubnet_numConnections	cdef/xdefiNet.cpp	/^int defiSubnet_numConnections (const ::defiSubnet* obj) {$/;"	f
defiSubnet_numPaths	cdef/xdefiNet.cpp	/^int defiSubnet_numPaths (const ::defiSubnet* obj) {$/;"	f
defiSubnet_numWires	cdef/xdefiNet.cpp	/^int defiSubnet_numWires (const ::defiSubnet* obj) {$/;"	f
defiSubnet_path	cdef/xdefiNet.cpp	/^const ::defiPath* defiSubnet_path (const ::defiSubnet* obj, int  index) {$/;"	f
defiSubnet_pin	cdef/xdefiNet.cpp	/^const char* defiSubnet_pin (const ::defiSubnet* obj, int  index) {$/;"	f
defiSubnet_pinIsMustJoin	cdef/xdefiNet.cpp	/^int defiSubnet_pinIsMustJoin (const ::defiSubnet* obj, int  index) {$/;"	f
defiSubnet_pinIsSynthesized	cdef/xdefiNet.cpp	/^int defiSubnet_pinIsSynthesized (const ::defiSubnet* obj, int  index) {$/;"	f
defiSubnet_print	cdef/xdefiNet.cpp	/^void defiSubnet_print (const ::defiSubnet* obj, FILE*  f) {$/;"	f
defiSubnet_wire	cdef/xdefiNet.cpp	/^const ::defiWire* defiSubnet_wire (const ::defiSubnet* obj, int  index) {$/;"	f
defiTimingDisable	cdef/defiTypedefs.h	/^typedef void *defiTimingDisable;$/;"	t
defiTimingDisable	def/defiTimingDisable.cpp	/^defiTimingDisable::defiTimingDisable(defrData *data)$/;"	f	class:defiTimingDisable
defiTimingDisable	def/defiTimingDisable.hpp	/^class defiTimingDisable {$/;"	c
defiTimingDisable	include/defiTimingDisable.hpp	/^class defiTimingDisable {$/;"	c
defiTimingDisable	include/defiTypedefs.h	/^typedef void *defiTimingDisable;$/;"	t
defiTimingDisable_fromInst	cdef/xdefiTimingDisable.cpp	/^const char* defiTimingDisable_fromInst (const ::defiTimingDisable* obj) {$/;"	f
defiTimingDisable_fromPin	cdef/xdefiTimingDisable.cpp	/^const char* defiTimingDisable_fromPin (const ::defiTimingDisable* obj) {$/;"	f
defiTimingDisable_h	def/defiTimingDisable.hpp	31;"	d
defiTimingDisable_h	include/defiTimingDisable.hpp	31;"	d
defiTimingDisable_hasFromTo	cdef/xdefiTimingDisable.cpp	/^int defiTimingDisable_hasFromTo (const ::defiTimingDisable* obj) {$/;"	f
defiTimingDisable_hasMacroFromTo	cdef/xdefiTimingDisable.cpp	/^int defiTimingDisable_hasMacroFromTo (const ::defiTimingDisable* obj) {$/;"	f
defiTimingDisable_hasMacroThru	cdef/xdefiTimingDisable.cpp	/^int defiTimingDisable_hasMacroThru (const ::defiTimingDisable* obj) {$/;"	f
defiTimingDisable_hasReentrantPathsFlag	cdef/xdefiTimingDisable.cpp	/^int defiTimingDisable_hasReentrantPathsFlag (const ::defiTimingDisable* obj) {$/;"	f
defiTimingDisable_hasThru	cdef/xdefiTimingDisable.cpp	/^int defiTimingDisable_hasThru (const ::defiTimingDisable* obj) {$/;"	f
defiTimingDisable_macroName	cdef/xdefiTimingDisable.cpp	/^const char* defiTimingDisable_macroName (const ::defiTimingDisable* obj) {$/;"	f
defiTimingDisable_print	cdef/xdefiTimingDisable.cpp	/^void defiTimingDisable_print (const ::defiTimingDisable* obj, FILE*  f) {$/;"	f
defiTimingDisable_thruInst	cdef/xdefiTimingDisable.cpp	/^const char* defiTimingDisable_thruInst (const ::defiTimingDisable* obj) {$/;"	f
defiTimingDisable_thruPin	cdef/xdefiTimingDisable.cpp	/^const char* defiTimingDisable_thruPin (const ::defiTimingDisable* obj) {$/;"	f
defiTimingDisable_toInst	cdef/xdefiTimingDisable.cpp	/^const char* defiTimingDisable_toInst (const ::defiTimingDisable* obj) {$/;"	f
defiTimingDisable_toPin	cdef/xdefiTimingDisable.cpp	/^const char* defiTimingDisable_toPin (const ::defiTimingDisable* obj) {$/;"	f
defiTrack	cdef/defiTypedefs.h	/^typedef void *defiTrack;$/;"	t
defiTrack	def/defiRowTrack.cpp	/^defiTrack::defiTrack(defrData *data)$/;"	f	class:defiTrack
defiTrack	def/defiRowTrack.hpp	/^class defiTrack{$/;"	c
defiTrack	include/defiRowTrack.hpp	/^class defiTrack{$/;"	c
defiTrack	include/defiTypedefs.h	/^typedef void *defiTrack;$/;"	t
defiTrack_firstTrackMask	cdef/xdefiRowTrack.cpp	/^int defiTrack_firstTrackMask (const ::defiTrack* obj) {$/;"	f
defiTrack_layer	cdef/xdefiRowTrack.cpp	/^const char* defiTrack_layer (const ::defiTrack* obj, int  index) {$/;"	f
defiTrack_macro	cdef/xdefiRowTrack.cpp	/^const char* defiTrack_macro (const ::defiTrack* obj) {$/;"	f
defiTrack_numLayers	cdef/xdefiRowTrack.cpp	/^int defiTrack_numLayers (const ::defiTrack* obj) {$/;"	f
defiTrack_print	cdef/xdefiRowTrack.cpp	/^void defiTrack_print (const ::defiTrack* obj, FILE*  f) {$/;"	f
defiTrack_sameMask	cdef/xdefiRowTrack.cpp	/^int defiTrack_sameMask (const ::defiTrack* obj) {$/;"	f
defiTrack_x	cdef/xdefiRowTrack.cpp	/^double defiTrack_x (const ::defiTrack* obj) {$/;"	f
defiTrack_xNum	cdef/xdefiRowTrack.cpp	/^double defiTrack_xNum (const ::defiTrack* obj) {$/;"	f
defiTrack_xStep	cdef/xdefiRowTrack.cpp	/^double defiTrack_xStep (const ::defiTrack* obj) {$/;"	f
defiUnknownObject	def/defiDefs.hpp	/^  defiUnknownObject \/* void * *\/$/;"	e	enum:__anon8
defiUnknownObject	include/defiDefs.hpp	/^  defiUnknownObject \/* void * *\/$/;"	e	enum:__anon1
defiUserData	cdef/defiTypedefs.h	42;"	d
defiUserData	def/defiDefs.hpp	164;"	d
defiUserData	include/defiDefs.hpp	164;"	d
defiUserData	include/defiTypedefs.h	42;"	d
defiUserDataHandle	cdef/defiTypedefs.h	43;"	d
defiUserDataHandle	def/defiDefs.hpp	165;"	d
defiUserDataHandle	include/defiDefs.hpp	165;"	d
defiUserDataHandle	include/defiTypedefs.h	43;"	d
defiUtil_h	def/defiUtil.hpp	31;"	d
defiUtil_h	include/defiUtil.hpp	31;"	d
defiVia	cdef/defiTypedefs.h	/^typedef void *defiVia;$/;"	t
defiVia	def/defiVia.cpp	/^defiVia::defiVia(defrData *data) $/;"	f	class:defiVia
defiVia	def/defiVia.hpp	/^class defiVia {$/;"	c
defiVia	include/defiTypedefs.h	/^typedef void *defiVia;$/;"	t
defiVia	include/defiVia.hpp	/^class defiVia {$/;"	c
defiViaData	cdef/defiTypedefs.h	/^struct defiViaData {$/;"	s
defiViaData	def/defiPath.hpp	/^struct defiViaData {$/;"	s
defiViaData	include/defiPath.hpp	/^struct defiViaData {$/;"	s
defiViaData	include/defiTypedefs.h	/^struct defiViaData {$/;"	s
defiViaRect	cdef/defiTypedefs.h	/^struct defiViaRect {$/;"	s
defiViaRect	def/defiPath.hpp	/^struct defiViaRect {$/;"	s
defiViaRect	include/defiPath.hpp	/^struct defiViaRect {$/;"	s
defiViaRect	include/defiTypedefs.h	/^struct defiViaRect {$/;"	s
defiVia_cutPattern	cdef/xdefiVia.cpp	/^const char* defiVia_cutPattern (const ::defiVia* obj) {$/;"	f
defiVia_getPolygon	cdef/xdefiVia.cpp	/^::defiPoints defiVia_getPolygon (const ::defiVia* obj, int  index) {$/;"	f
defiVia_h	def/defiVia.hpp	31;"	d
defiVia_h	include/defiVia.hpp	31;"	d
defiVia_hasCutPattern	cdef/xdefiVia.cpp	/^int defiVia_hasCutPattern (const ::defiVia* obj) {$/;"	f
defiVia_hasOffset	cdef/xdefiVia.cpp	/^int defiVia_hasOffset (const ::defiVia* obj) {$/;"	f
defiVia_hasOrigin	cdef/xdefiVia.cpp	/^int defiVia_hasOrigin (const ::defiVia* obj) {$/;"	f
defiVia_hasPattern	cdef/xdefiVia.cpp	/^int defiVia_hasPattern (const ::defiVia* obj) {$/;"	f
defiVia_hasPolyMask	cdef/xdefiVia.cpp	/^int defiVia_hasPolyMask (const ::defiVia* obj, int  index) {$/;"	f
defiVia_hasRectMask	cdef/xdefiVia.cpp	/^int defiVia_hasRectMask (const ::defiVia* obj, int  index) {$/;"	f
defiVia_hasRowCol	cdef/xdefiVia.cpp	/^int defiVia_hasRowCol (const ::defiVia* obj) {$/;"	f
defiVia_hasViaRule	cdef/xdefiVia.cpp	/^int defiVia_hasViaRule (const ::defiVia* obj) {$/;"	f
defiVia_layer	cdef/xdefiVia.cpp	/^void defiVia_layer (const ::defiVia* obj, int  index, char**  layer, int*  xl, int*  yl, int*  xh, int*  yh) {$/;"	f
defiVia_name	cdef/xdefiVia.cpp	/^const char* defiVia_name (const ::defiVia* obj) {$/;"	f
defiVia_numLayers	cdef/xdefiVia.cpp	/^int defiVia_numLayers (const ::defiVia* obj) {$/;"	f
defiVia_numPolygons	cdef/xdefiVia.cpp	/^int defiVia_numPolygons (const ::defiVia* obj) {$/;"	f
defiVia_offset	cdef/xdefiVia.cpp	/^void defiVia_offset (const ::defiVia* obj, int*  xBotOffset, int*  yBotOffset, int*  xTopOffset, int*  yTopOffset) {$/;"	f
defiVia_origin	cdef/xdefiVia.cpp	/^void defiVia_origin (const ::defiVia* obj, int*  xOffset, int*  yOffset) {$/;"	f
defiVia_pattern	cdef/xdefiVia.cpp	/^const char* defiVia_pattern (const ::defiVia* obj) {$/;"	f
defiVia_polyMask	cdef/xdefiVia.cpp	/^int defiVia_polyMask (const ::defiVia* obj, int  index) {$/;"	f
defiVia_polygonName	cdef/xdefiVia.cpp	/^const char* defiVia_polygonName (const ::defiVia* obj, int  index) {$/;"	f
defiVia_print	cdef/xdefiVia.cpp	/^void defiVia_print (const ::defiVia* obj, FILE*  f) {$/;"	f
defiVia_rectMask	cdef/xdefiVia.cpp	/^int defiVia_rectMask (const ::defiVia* obj, int  index) {$/;"	f
defiVia_rowCol	cdef/xdefiVia.cpp	/^void defiVia_rowCol (const ::defiVia* obj, int*  numCutRows, int*  numCutCols) {$/;"	f
defiVia_viaRule	cdef/xdefiVia.cpp	/^void defiVia_viaRule (const ::defiVia* obj, char**  viaRuleName, int*  xSize, int*  ySize, char**  botLayer, char**  cutLayer, char**  topLayer, int*  xCutSpacing, int*  yCutSpacing, int*  xBotEnc, int*  yBotEnc, int*  xTopEnc, int*  yTopEnc) {$/;"	f
defiVpin	cdef/defiTypedefs.h	/^typedef void *defiVpin;$/;"	t
defiVpin	def/defiNet.cpp	/^defiVpin::defiVpin(defrData *data)$/;"	f	class:defiVpin
defiVpin	def/defiNet.hpp	/^class defiVpin {$/;"	c
defiVpin	include/defiNet.hpp	/^class defiVpin {$/;"	c
defiVpin	include/defiTypedefs.h	/^typedef void *defiVpin;$/;"	t
defiVpin_layer	cdef/xdefiNet.cpp	/^const char* defiVpin_layer (const ::defiVpin* obj) {$/;"	f
defiVpin_name	cdef/xdefiNet.cpp	/^const char* defiVpin_name (const ::defiVpin* obj) {$/;"	f
defiVpin_orient	cdef/xdefiNet.cpp	/^int defiVpin_orient (const ::defiVpin* obj) {$/;"	f
defiVpin_orientStr	cdef/xdefiNet.cpp	/^const char* defiVpin_orientStr (const ::defiVpin* obj) {$/;"	f
defiVpin_status	cdef/xdefiNet.cpp	/^char defiVpin_status (const ::defiVpin* obj) {$/;"	f
defiVpin_xLoc	cdef/xdefiNet.cpp	/^int defiVpin_xLoc (const ::defiVpin* obj) {$/;"	f
defiVpin_xh	cdef/xdefiNet.cpp	/^int defiVpin_xh (const ::defiVpin* obj) {$/;"	f
defiVpin_xl	cdef/xdefiNet.cpp	/^int defiVpin_xl (const ::defiVpin* obj) {$/;"	f
defiVpin_yLoc	cdef/xdefiNet.cpp	/^int defiVpin_yLoc (const ::defiVpin* obj) {$/;"	f
defiVpin_yh	cdef/xdefiNet.cpp	/^int defiVpin_yh (const ::defiVpin* obj) {$/;"	f
defiVpin_yl	cdef/xdefiNet.cpp	/^int defiVpin_yl (const ::defiVpin* obj) {$/;"	f
defiWire	cdef/defiTypedefs.h	/^typedef void *defiWire;$/;"	t
defiWire	def/defiNet.cpp	/^defiWire::defiWire(defrData *data)$/;"	f	class:defiWire
defiWire	def/defiNet.hpp	/^class defiWire {$/;"	c
defiWire	include/defiNet.hpp	/^class defiWire {$/;"	c
defiWire	include/defiTypedefs.h	/^typedef void *defiWire;$/;"	t
defiWire_numPaths	cdef/xdefiNet.cpp	/^int defiWire_numPaths (const ::defiWire* obj) {$/;"	f
defiWire_path	cdef/xdefiNet.cpp	/^const ::defiPath* defiWire_path (const ::defiWire* obj, int  index) {$/;"	f
defiWire_wireShieldNetName	cdef/xdefiNet.cpp	/^const char* defiWire_wireShieldNetName (const ::defiWire* obj) {$/;"	f
defiWire_wireType	cdef/xdefiNet.cpp	/^const char* defiWire_wireType (const ::defiWire* obj) {$/;"	f
defkywd	def/def_keywords.cpp	/^defrData::defkywd(int num)$/;"	f	class:defrData
defpoint	def/defiDefs.hpp	/^struct defpoint {$/;"	s
defpoint	include/defiDefs.hpp	/^struct defpoint {$/;"	s
defrAddAlias	cdef/xdefrReader.cpp	/^void defrAddAlias (const char*  key, const char*  value, int  marked) {$/;"	f
defrAddAlias	def/defrReader.cpp	/^defrAddAlias(const char     *key,$/;"	f
defrArrayNameCbkType	cdef/defrReader.h	/^  defrArrayNameCbkType = 7,$/;"	e	enum:__anon14
defrArrayNameCbkType	def/defrReader.hpp	/^  defrArrayNameCbkType,$/;"	e	enum:__anon10
defrArrayNameCbkType	include/defrReader.h	/^  defrArrayNameCbkType = 7,$/;"	e	enum:__anon7
defrArrayNameCbkType	include/defrReader.hpp	/^  defrArrayNameCbkType,$/;"	e	enum:__anon3
defrAssertionCbkFnType	cdef/defrReader.h	/^typedef int (*defrAssertionCbkFnType) (defrCallbackType_e, defiAssertion *, defiUserData);$/;"	t
defrAssertionCbkFnType	def/defrReader.hpp	/^typedef int (*defrAssertionCbkFnType) (defrCallbackType_e, defiAssertion *, defiUserData);$/;"	t
defrAssertionCbkFnType	include/defrReader.h	/^typedef int (*defrAssertionCbkFnType) (defrCallbackType_e, defiAssertion *, defiUserData);$/;"	t
defrAssertionCbkFnType	include/defrReader.hpp	/^typedef int (*defrAssertionCbkFnType) (defrCallbackType_e, defiAssertion *, defiUserData);$/;"	t
defrAssertionCbkType	cdef/defrReader.h	/^  defrAssertionCbkType = 62,$/;"	e	enum:__anon14
defrAssertionCbkType	def/defrReader.hpp	/^  defrAssertionCbkType,$/;"	e	enum:__anon10
defrAssertionCbkType	include/defrReader.h	/^  defrAssertionCbkType = 62,$/;"	e	enum:__anon7
defrAssertionCbkType	include/defrReader.hpp	/^  defrAssertionCbkType,$/;"	e	enum:__anon3
defrAssertionsEndCbkType	cdef/defrReader.h	/^  defrAssertionsEndCbkType = 63,$/;"	e	enum:__anon14
defrAssertionsEndCbkType	def/defrReader.hpp	/^  defrAssertionsEndCbkType,$/;"	e	enum:__anon10
defrAssertionsEndCbkType	include/defrReader.h	/^  defrAssertionsEndCbkType = 63,$/;"	e	enum:__anon7
defrAssertionsEndCbkType	include/defrReader.hpp	/^  defrAssertionsEndCbkType,$/;"	e	enum:__anon3
defrAssertionsStartCbkType	cdef/defrReader.h	/^  defrAssertionsStartCbkType = 61,$/;"	e	enum:__anon14
defrAssertionsStartCbkType	def/defrReader.hpp	/^  defrAssertionsStartCbkType,$/;"	e	enum:__anon10
defrAssertionsStartCbkType	include/defrReader.h	/^  defrAssertionsStartCbkType = 61,$/;"	e	enum:__anon7
defrAssertionsStartCbkType	include/defrReader.hpp	/^  defrAssertionsStartCbkType,$/;"	e	enum:__anon3
defrBlockageCbkFnType	cdef/defrReader.h	/^typedef int (*defrBlockageCbkFnType) (defrCallbackType_e, defiBlockage *, defiUserData);$/;"	t
defrBlockageCbkFnType	def/defrReader.hpp	/^typedef int (*defrBlockageCbkFnType) (defrCallbackType_e, defiBlockage *, defiUserData);$/;"	t
defrBlockageCbkFnType	include/defrReader.h	/^typedef int (*defrBlockageCbkFnType) (defrCallbackType_e, defiBlockage *, defiUserData);$/;"	t
defrBlockageCbkFnType	include/defrReader.hpp	/^typedef int (*defrBlockageCbkFnType) (defrCallbackType_e, defiBlockage *, defiUserData);$/;"	t
defrBlockageCbkType	cdef/defrReader.h	/^  defrBlockageCbkType = 86,$/;"	e	enum:__anon14
defrBlockageCbkType	def/defrReader.hpp	/^  defrBlockageCbkType,$/;"	e	enum:__anon10
defrBlockageCbkType	include/defrReader.h	/^  defrBlockageCbkType = 86,$/;"	e	enum:__anon7
defrBlockageCbkType	include/defrReader.hpp	/^  defrBlockageCbkType,$/;"	e	enum:__anon3
defrBlockageEndCbkType	cdef/defrReader.h	/^  defrBlockageEndCbkType = 87,$/;"	e	enum:__anon14
defrBlockageEndCbkType	def/defrReader.hpp	/^  defrBlockageEndCbkType,$/;"	e	enum:__anon10
defrBlockageEndCbkType	include/defrReader.h	/^  defrBlockageEndCbkType = 87,$/;"	e	enum:__anon7
defrBlockageEndCbkType	include/defrReader.hpp	/^  defrBlockageEndCbkType,$/;"	e	enum:__anon3
defrBlockageStartCbkType	cdef/defrReader.h	/^  defrBlockageStartCbkType = 85,$/;"	e	enum:__anon14
defrBlockageStartCbkType	def/defrReader.hpp	/^  defrBlockageStartCbkType,$/;"	e	enum:__anon10
defrBlockageStartCbkType	include/defrReader.h	/^  defrBlockageStartCbkType = 85,$/;"	e	enum:__anon7
defrBlockageStartCbkType	include/defrReader.hpp	/^  defrBlockageStartCbkType,$/;"	e	enum:__anon3
defrBoxCbkFnType	cdef/defrReader.h	/^typedef int (*defrBoxCbkFnType) (defrCallbackType_e, defiBox *box, defiUserData);$/;"	t
defrBoxCbkFnType	def/defrReader.hpp	/^typedef int (*defrBoxCbkFnType) (defrCallbackType_e, defiBox *box, defiUserData);$/;"	t
defrBoxCbkFnType	include/defrReader.h	/^typedef int (*defrBoxCbkFnType) (defrCallbackType_e, defiBox *box, defiUserData);$/;"	t
defrBoxCbkFnType	include/defrReader.hpp	/^typedef int (*defrBoxCbkFnType) (defrCallbackType_e, defiBox *box, defiUserData);$/;"	t
defrBusBitCbkType	cdef/defrReader.h	/^  defrBusBitCbkType = 10,$/;"	e	enum:__anon14
defrBusBitCbkType	def/defrReader.hpp	/^  defrBusBitCbkType,$/;"	e	enum:__anon10
defrBusBitCbkType	include/defrReader.h	/^  defrBusBitCbkType = 10,$/;"	e	enum:__anon7
defrBusBitCbkType	include/defrReader.hpp	/^  defrBusBitCbkType,$/;"	e	enum:__anon3
defrCallbackType_e	cdef/defrReader.h	/^} defrCallbackType_e;$/;"	t	typeref:enum:__anon14
defrCallbackType_e	def/defrReader.hpp	/^} defrCallbackType_e;$/;"	t	typeref:enum:__anon10
defrCallbackType_e	include/defrReader.h	/^} defrCallbackType_e;$/;"	t	typeref:enum:__anon7
defrCallbackType_e	include/defrReader.hpp	/^} defrCallbackType_e;$/;"	t	typeref:enum:__anon3
defrCallbacks	def/defrCallBacks.hpp	/^class defrCallbacks {$/;"	c
defrCallbacks	def/defrCallbacks.cpp	/^defrCallbacks::defrCallbacks()$/;"	f	class:defrCallbacks
defrCallbacks	include/defrCallBacks.hpp	/^class defrCallbacks {$/;"	c
defrCannotOccupyCbkType	cdef/defrReader.h	/^  defrCannotOccupyCbkType = 36,$/;"	e	enum:__anon14
defrCannotOccupyCbkType	def/defrReader.hpp	/^  defrCannotOccupyCbkType,$/;"	e	enum:__anon10
defrCannotOccupyCbkType	include/defrReader.h	/^  defrCannotOccupyCbkType = 36,$/;"	e	enum:__anon7
defrCannotOccupyCbkType	include/defrReader.hpp	/^  defrCannotOccupyCbkType,$/;"	e	enum:__anon3
defrCanplaceCbkType	cdef/defrReader.h	/^  defrCanplaceCbkType = 35,$/;"	e	enum:__anon14
defrCanplaceCbkType	def/defrReader.hpp	/^  defrCanplaceCbkType,$/;"	e	enum:__anon10
defrCanplaceCbkType	include/defrReader.h	/^  defrCanplaceCbkType = 35,$/;"	e	enum:__anon7
defrCanplaceCbkType	include/defrReader.hpp	/^  defrCanplaceCbkType,$/;"	e	enum:__anon3
defrCaseSensitiveCbkType	cdef/defrReader.h	/^  defrCaseSensitiveCbkType = 94,$/;"	e	enum:__anon14
defrCaseSensitiveCbkType	def/defrReader.hpp	/^  defrCaseSensitiveCbkType,$/;"	e	enum:__anon10
defrCaseSensitiveCbkType	include/defrReader.h	/^  defrCaseSensitiveCbkType = 94,$/;"	e	enum:__anon7
defrCaseSensitiveCbkType	include/defrReader.hpp	/^  defrCaseSensitiveCbkType,$/;"	e	enum:__anon3
defrCatchAll	def/defrReader.cpp	/^defrCatchAll(defrCallbackType_e typ, void*, defiUserData)$/;"	f
defrClear	cdef/xdefrReader.cpp	/^int defrClear () {$/;"	f
defrClear	def/defrReader.cpp	/^defrClear()$/;"	f
defrClearSession	def/defrReader.cpp	/^defrClearSession()$/;"	f
defrComponentCbkFnType	cdef/defrReader.h	/^typedef int (*defrComponentCbkFnType) (defrCallbackType_e, defiComponent *comp, defiUserData);$/;"	t
defrComponentCbkFnType	def/defrReader.hpp	/^typedef int (*defrComponentCbkFnType) (defrCallbackType_e, defiComponent *comp, defiUserData);$/;"	t
defrComponentCbkFnType	include/defrReader.h	/^typedef int (*defrComponentCbkFnType) (defrCallbackType_e, defiComponent *comp, defiUserData);$/;"	t
defrComponentCbkFnType	include/defrReader.hpp	/^typedef int (*defrComponentCbkFnType) (defrCallbackType_e, defiComponent *comp, defiUserData);$/;"	t
defrComponentCbkType	cdef/defrReader.h	/^  defrComponentCbkType = 13,$/;"	e	enum:__anon14
defrComponentCbkType	def/defrReader.hpp	/^  defrComponentCbkType,$/;"	e	enum:__anon10
defrComponentCbkType	include/defrReader.h	/^  defrComponentCbkType = 13,$/;"	e	enum:__anon7
defrComponentCbkType	include/defrReader.hpp	/^  defrComponentCbkType,$/;"	e	enum:__anon3
defrComponentEndCbkType	cdef/defrReader.h	/^  defrComponentEndCbkType = 14,$/;"	e	enum:__anon14
defrComponentEndCbkType	def/defrReader.hpp	/^  defrComponentEndCbkType,$/;"	e	enum:__anon10
defrComponentEndCbkType	include/defrReader.h	/^  defrComponentEndCbkType = 14,$/;"	e	enum:__anon7
defrComponentEndCbkType	include/defrReader.hpp	/^  defrComponentEndCbkType,$/;"	e	enum:__anon3
defrComponentExtCbkType	cdef/defrReader.h	/^  defrComponentExtCbkType = 24,$/;"	e	enum:__anon14
defrComponentExtCbkType	def/defrReader.hpp	/^  defrComponentExtCbkType,$/;"	e	enum:__anon10
defrComponentExtCbkType	include/defrReader.h	/^  defrComponentExtCbkType = 24,$/;"	e	enum:__anon7
defrComponentExtCbkType	include/defrReader.hpp	/^  defrComponentExtCbkType,$/;"	e	enum:__anon3
defrComponentMaskShiftLayerCbkFnType	cdef/defrReader.h	/^typedef int (*defrComponentMaskShiftLayerCbkFnType) (defrCallbackType_e, defiComponentMaskShiftLayer *comp, defiUserData);$/;"	t
defrComponentMaskShiftLayerCbkFnType	def/defrReader.hpp	/^typedef int (*defrComponentMaskShiftLayerCbkFnType) (defrCallbackType_e, defiComponentMaskShiftLayer *comp, defiUserData);$/;"	t
defrComponentMaskShiftLayerCbkFnType	include/defrReader.h	/^typedef int (*defrComponentMaskShiftLayerCbkFnType) (defrCallbackType_e, defiComponentMaskShiftLayer *comp, defiUserData);$/;"	t
defrComponentMaskShiftLayerCbkFnType	include/defrReader.hpp	/^typedef int (*defrComponentMaskShiftLayerCbkFnType) (defrCallbackType_e, defiComponentMaskShiftLayer *comp, defiUserData);$/;"	t
defrComponentMaskShiftLayerCbkType	cdef/defrReader.h	/^  defrComponentMaskShiftLayerCbkType = 102,$/;"	e	enum:__anon14
defrComponentMaskShiftLayerCbkType	def/defrReader.hpp	/^  defrComponentMaskShiftLayerCbkType,$/;"	e	enum:__anon10
defrComponentMaskShiftLayerCbkType	include/defrReader.h	/^  defrComponentMaskShiftLayerCbkType = 102,$/;"	e	enum:__anon7
defrComponentMaskShiftLayerCbkType	include/defrReader.hpp	/^  defrComponentMaskShiftLayerCbkType,$/;"	e	enum:__anon3
defrComponentStartCbkType	cdef/defrReader.h	/^  defrComponentStartCbkType = 12,$/;"	e	enum:__anon14
defrComponentStartCbkType	def/defrReader.hpp	/^  defrComponentStartCbkType,$/;"	e	enum:__anon10
defrComponentStartCbkType	include/defrReader.h	/^  defrComponentStartCbkType = 12,$/;"	e	enum:__anon7
defrComponentStartCbkType	include/defrReader.hpp	/^  defrComponentStartCbkType,$/;"	e	enum:__anon3
defrConstraintCbkType	cdef/defrReader.h	/^  defrConstraintCbkType = 65,$/;"	e	enum:__anon14
defrConstraintCbkType	def/defrReader.hpp	/^  defrConstraintCbkType,$/;"	e	enum:__anon10
defrConstraintCbkType	include/defrReader.h	/^  defrConstraintCbkType = 65,$/;"	e	enum:__anon7
defrConstraintCbkType	include/defrReader.hpp	/^  defrConstraintCbkType,$/;"	e	enum:__anon3
defrConstraintsEndCbkType	cdef/defrReader.h	/^  defrConstraintsEndCbkType = 66,$/;"	e	enum:__anon14
defrConstraintsEndCbkType	def/defrReader.hpp	/^  defrConstraintsEndCbkType,$/;"	e	enum:__anon10
defrConstraintsEndCbkType	include/defrReader.h	/^  defrConstraintsEndCbkType = 66,$/;"	e	enum:__anon7
defrConstraintsEndCbkType	include/defrReader.hpp	/^  defrConstraintsEndCbkType,$/;"	e	enum:__anon3
defrConstraintsStartCbkType	cdef/defrReader.h	/^  defrConstraintsStartCbkType = 64,$/;"	e	enum:__anon14
defrConstraintsStartCbkType	def/defrReader.hpp	/^  defrConstraintsStartCbkType,$/;"	e	enum:__anon10
defrConstraintsStartCbkType	include/defrReader.h	/^  defrConstraintsStartCbkType = 64,$/;"	e	enum:__anon7
defrConstraintsStartCbkType	include/defrReader.hpp	/^  defrConstraintsStartCbkType,$/;"	e	enum:__anon3
defrContext	def/defrData.cpp	/^defrContext::defrContext(int ownConf)$/;"	f	class:defrContext
defrContext	def/defrData.hpp	/^class defrContext {$/;"	c
defrContext	include/defrData.hpp	/^class defrContext {$/;"	c
defrCountUnused	def/defrReader.cpp	/^defrCountUnused(defrCallbackType_e  e,$/;"	f
defrData	cdef/defiTypedefs.h	/^typedef void *defrData;$/;"	t
defrData	def/defrData.cpp	/^defrData::defrData(const defrCallbacks *pCallbacks,$/;"	f	class:defrData
defrData	def/defrData.hpp	/^class defrData {$/;"	c
defrData	include/defiTypedefs.h	/^typedef void *defrData;$/;"	t
defrData	include/defrData.hpp	/^class defrData {$/;"	c
defrData_h	def/defrData.hpp	40;"	d
defrData_h	include/defrData.hpp	40;"	d
defrDefaultCapCbkType	cdef/defrReader.h	/^  defrDefaultCapCbkType = 38,$/;"	e	enum:__anon14
defrDefaultCapCbkType	def/defrReader.hpp	/^  defrDefaultCapCbkType,$/;"	e	enum:__anon10
defrDefaultCapCbkType	include/defrReader.h	/^  defrDefaultCapCbkType = 38,$/;"	e	enum:__anon7
defrDefaultCapCbkType	include/defrReader.hpp	/^  defrDefaultCapCbkType,$/;"	e	enum:__anon3
defrDesignEndCbkType	cdef/defrReader.h	/^  defrDesignEndCbkType = 103$/;"	e	enum:__anon14
defrDesignEndCbkType	def/defrReader.hpp	/^  defrDesignEndCbkType$/;"	e	enum:__anon10
defrDesignEndCbkType	include/defrReader.h	/^  defrDesignEndCbkType = 103$/;"	e	enum:__anon7
defrDesignEndCbkType	include/defrReader.hpp	/^  defrDesignEndCbkType$/;"	e	enum:__anon3
defrDesignStartCbkType	cdef/defrReader.h	/^  defrDesignStartCbkType = 1,$/;"	e	enum:__anon14
defrDesignStartCbkType	def/defrReader.hpp	/^  defrDesignStartCbkType,$/;"	e	enum:__anon10
defrDesignStartCbkType	include/defrReader.h	/^  defrDesignStartCbkType = 1,$/;"	e	enum:__anon7
defrDesignStartCbkType	include/defrReader.hpp	/^  defrDesignStartCbkType,$/;"	e	enum:__anon3
defrDieAreaCbkType	cdef/defrReader.h	/^  defrDieAreaCbkType = 34,$/;"	e	enum:__anon14
defrDieAreaCbkType	def/defrReader.hpp	/^  defrDieAreaCbkType,$/;"	e	enum:__anon10
defrDieAreaCbkType	include/defrReader.h	/^  defrDieAreaCbkType = 34,$/;"	e	enum:__anon7
defrDieAreaCbkType	include/defrReader.hpp	/^  defrDieAreaCbkType,$/;"	e	enum:__anon3
defrDisableParserMsgs	cdef/xdefrReader.cpp	/^void defrDisableParserMsgs (int  nMsg, int*  msgs) {$/;"	f
defrDisableParserMsgs	def/defrReader.cpp	/^defrDisableParserMsgs(int   nMsg,$/;"	f
defrDisablePropStrProcess	cdef/xdefrReader.cpp	/^void defrDisablePropStrProcess () {$/;"	f
defrDisablePropStrProcess	def/defrReader.cpp	/^defrDisablePropStrProcess()$/;"	f
defrDividerCbkType	cdef/defrReader.h	/^  defrDividerCbkType = 9,$/;"	e	enum:__anon14
defrDividerCbkType	def/defrReader.hpp	/^  defrDividerCbkType,$/;"	e	enum:__anon10
defrDividerCbkType	include/defrReader.h	/^  defrDividerCbkType = 9,$/;"	e	enum:__anon7
defrDividerCbkType	include/defrReader.hpp	/^  defrDividerCbkType,$/;"	e	enum:__anon3
defrDoubleCbkFnType	cdef/defrReader.h	/^typedef int (*defrDoubleCbkFnType) (defrCallbackType_e, double number, defiUserData);$/;"	t
defrDoubleCbkFnType	def/defrReader.hpp	/^typedef int (*defrDoubleCbkFnType) (defrCallbackType_e, double number, defiUserData);$/;"	t
defrDoubleCbkFnType	include/defrReader.h	/^typedef int (*defrDoubleCbkFnType) (defrCallbackType_e, double number, defiUserData);$/;"	t
defrDoubleCbkFnType	include/defrReader.hpp	/^typedef int (*defrDoubleCbkFnType) (defrCallbackType_e, double number, defiUserData);$/;"	t
defrEnableAllMsgs	cdef/xdefrReader.cpp	/^void defrEnableAllMsgs () {$/;"	f
defrEnableAllMsgs	def/defrReader.cpp	/^defrEnableAllMsgs()$/;"	f
defrEnableParserMsgs	cdef/xdefrReader.cpp	/^void defrEnableParserMsgs (int  nMsg, int*  msgs) {$/;"	f
defrEnableParserMsgs	def/defrReader.cpp	/^defrEnableParserMsgs(int    nMsg,$/;"	f
defrExtensionCbkType	cdef/defrReader.h	/^  defrExtensionCbkType = 101,$/;"	e	enum:__anon14
defrExtensionCbkType	def/defrReader.hpp	/^  defrExtensionCbkType,$/;"	e	enum:__anon10
defrExtensionCbkType	include/defrReader.h	/^  defrExtensionCbkType = 101,$/;"	e	enum:__anon7
defrExtensionCbkType	include/defrReader.hpp	/^  defrExtensionCbkType,$/;"	e	enum:__anon3
defrFName	def/defrReader.cpp	/^defrFName()$/;"	f
defrFPCCbkFnType	cdef/defrReader.h	/^typedef int (*defrFPCCbkFnType) (defrCallbackType_e, defiFPC *, defiUserData);$/;"	t
defrFPCCbkFnType	def/defrReader.hpp	/^typedef int (*defrFPCCbkFnType) (defrCallbackType_e, defiFPC *, defiUserData);$/;"	t
defrFPCCbkFnType	include/defrReader.h	/^typedef int (*defrFPCCbkFnType) (defrCallbackType_e, defiFPC *, defiUserData);$/;"	t
defrFPCCbkFnType	include/defrReader.hpp	/^typedef int (*defrFPCCbkFnType) (defrCallbackType_e, defiFPC *, defiUserData);$/;"	t
defrFPCCbkType	cdef/defrReader.h	/^  defrFPCCbkType = 74,$/;"	e	enum:__anon14
defrFPCCbkType	def/defrReader.hpp	/^  defrFPCCbkType,$/;"	e	enum:__anon10
defrFPCCbkType	include/defrReader.h	/^  defrFPCCbkType = 74,$/;"	e	enum:__anon7
defrFPCCbkType	include/defrReader.hpp	/^  defrFPCCbkType,$/;"	e	enum:__anon3
defrFPCEndCbkType	cdef/defrReader.h	/^  defrFPCEndCbkType = 75,$/;"	e	enum:__anon14
defrFPCEndCbkType	def/defrReader.hpp	/^  defrFPCEndCbkType,$/;"	e	enum:__anon10
defrFPCEndCbkType	include/defrReader.h	/^  defrFPCEndCbkType = 75,$/;"	e	enum:__anon7
defrFPCEndCbkType	include/defrReader.hpp	/^  defrFPCEndCbkType,$/;"	e	enum:__anon3
defrFPCStartCbkType	cdef/defrReader.h	/^  defrFPCStartCbkType = 73,$/;"	e	enum:__anon14
defrFPCStartCbkType	def/defrReader.hpp	/^  defrFPCStartCbkType,$/;"	e	enum:__anon10
defrFPCStartCbkType	include/defrReader.h	/^  defrFPCStartCbkType = 73,$/;"	e	enum:__anon7
defrFPCStartCbkType	include/defrReader.hpp	/^  defrFPCStartCbkType,$/;"	e	enum:__anon3
defrFillCbkFnType	cdef/defrReader.h	/^typedef int (*defrFillCbkFnType) (defrCallbackType_e, defiFill *, defiUserData);$/;"	t
defrFillCbkFnType	def/defrReader.hpp	/^typedef int (*defrFillCbkFnType) (defrCallbackType_e, defiFill *, defiUserData);$/;"	t
defrFillCbkFnType	include/defrReader.h	/^typedef int (*defrFillCbkFnType) (defrCallbackType_e, defiFill *, defiUserData);$/;"	t
defrFillCbkFnType	include/defrReader.hpp	/^typedef int (*defrFillCbkFnType) (defrCallbackType_e, defiFill *, defiUserData);$/;"	t
defrFillCbkType	cdef/defrReader.h	/^  defrFillCbkType = 92,$/;"	e	enum:__anon14
defrFillCbkType	def/defrReader.hpp	/^  defrFillCbkType,$/;"	e	enum:__anon10
defrFillCbkType	include/defrReader.h	/^  defrFillCbkType = 92,$/;"	e	enum:__anon7
defrFillCbkType	include/defrReader.hpp	/^  defrFillCbkType,$/;"	e	enum:__anon3
defrFillEndCbkType	cdef/defrReader.h	/^  defrFillEndCbkType = 93,$/;"	e	enum:__anon14
defrFillEndCbkType	def/defrReader.hpp	/^  defrFillEndCbkType,$/;"	e	enum:__anon10
defrFillEndCbkType	include/defrReader.h	/^  defrFillEndCbkType = 93,$/;"	e	enum:__anon7
defrFillEndCbkType	include/defrReader.hpp	/^  defrFillEndCbkType,$/;"	e	enum:__anon3
defrFillStartCbkType	cdef/defrReader.h	/^  defrFillStartCbkType = 91,$/;"	e	enum:__anon14
defrFillStartCbkType	def/defrReader.hpp	/^  defrFillStartCbkType,$/;"	e	enum:__anon10
defrFillStartCbkType	include/defrReader.h	/^  defrFillStartCbkType = 91,$/;"	e	enum:__anon7
defrFillStartCbkType	include/defrReader.hpp	/^  defrFillStartCbkType,$/;"	e	enum:__anon3
defrFloorPlanNameCbkType	cdef/defrReader.h	/^  defrFloorPlanNameCbkType = 6,$/;"	e	enum:__anon14
defrFloorPlanNameCbkType	def/defrReader.hpp	/^  defrFloorPlanNameCbkType,$/;"	e	enum:__anon10
defrFloorPlanNameCbkType	include/defrReader.h	/^  defrFloorPlanNameCbkType = 6,$/;"	e	enum:__anon7
defrFloorPlanNameCbkType	include/defrReader.hpp	/^  defrFloorPlanNameCbkType,$/;"	e	enum:__anon3
defrGZipClose	defzlib/defzlib.cpp	/^int defrGZipClose(defGZFile filePtr) {$/;"	f
defrGZipOpen	defzlib/defzlib.cpp	/^defrGZipOpen(const char *gzipPath, const char* mode)$/;"	f
defrGcellGridCbkFnType	cdef/defrReader.h	/^typedef int (*defrGcellGridCbkFnType) (defrCallbackType_e, defiGcellGrid *grid, defiUserData);$/;"	t
defrGcellGridCbkFnType	def/defrReader.hpp	/^typedef int (*defrGcellGridCbkFnType) (defrCallbackType_e, defiGcellGrid *grid, defiUserData);$/;"	t
defrGcellGridCbkFnType	include/defrReader.h	/^typedef int (*defrGcellGridCbkFnType) (defrCallbackType_e, defiGcellGrid *grid, defiUserData);$/;"	t
defrGcellGridCbkFnType	include/defrReader.hpp	/^typedef int (*defrGcellGridCbkFnType) (defrCallbackType_e, defiGcellGrid *grid, defiUserData);$/;"	t
defrGcellGridCbkType	cdef/defrReader.h	/^  defrGcellGridCbkType = 44,$/;"	e	enum:__anon14
defrGcellGridCbkType	def/defrReader.hpp	/^  defrGcellGridCbkType,$/;"	e	enum:__anon10
defrGcellGridCbkType	include/defrReader.h	/^  defrGcellGridCbkType = 44,$/;"	e	enum:__anon7
defrGcellGridCbkType	include/defrReader.hpp	/^  defrGcellGridCbkType,$/;"	e	enum:__anon3
defrGetAllowComponentNets	cdef/xdefrReader.cpp	/^int defrGetAllowComponentNets () {$/;"	f
defrGetAllowComponentNets	def/defrReader.cpp	/^defrGetAllowComponentNets()$/;"	f
defrGetUserData	cdef/xdefrReader.cpp	/^defiUserData defrGetUserData () {$/;"	f
defrGetUserData	def/defrReader.cpp	/^defrGetUserData()$/;"	f
defrGroupCbkFnType	cdef/defrReader.h	/^typedef int (*defrGroupCbkFnType) (defrCallbackType_e, defiGroup *, defiUserData);$/;"	t
defrGroupCbkFnType	def/defrReader.hpp	/^typedef int (*defrGroupCbkFnType) (defrCallbackType_e, defiGroup *, defiUserData);$/;"	t
defrGroupCbkFnType	include/defrReader.h	/^typedef int (*defrGroupCbkFnType) (defrCallbackType_e, defiGroup *, defiUserData);$/;"	t
defrGroupCbkFnType	include/defrReader.hpp	/^typedef int (*defrGroupCbkFnType) (defrCallbackType_e, defiGroup *, defiUserData);$/;"	t
defrGroupCbkType	cdef/defrReader.h	/^  defrGroupCbkType = 59,$/;"	e	enum:__anon14
defrGroupCbkType	def/defrReader.hpp	/^  defrGroupCbkType,$/;"	e	enum:__anon10
defrGroupCbkType	include/defrReader.h	/^  defrGroupCbkType = 59,$/;"	e	enum:__anon7
defrGroupCbkType	include/defrReader.hpp	/^  defrGroupCbkType,$/;"	e	enum:__anon3
defrGroupExtCbkType	cdef/defrReader.h	/^  defrGroupExtCbkType = 29,$/;"	e	enum:__anon14
defrGroupExtCbkType	def/defrReader.hpp	/^  defrGroupExtCbkType,$/;"	e	enum:__anon10
defrGroupExtCbkType	include/defrReader.h	/^  defrGroupExtCbkType = 29,$/;"	e	enum:__anon7
defrGroupExtCbkType	include/defrReader.hpp	/^  defrGroupExtCbkType,$/;"	e	enum:__anon3
defrGroupMemberCbkType	cdef/defrReader.h	/^  defrGroupMemberCbkType = 58,$/;"	e	enum:__anon14
defrGroupMemberCbkType	def/defrReader.hpp	/^  defrGroupMemberCbkType,$/;"	e	enum:__anon10
defrGroupMemberCbkType	include/defrReader.h	/^  defrGroupMemberCbkType = 58,$/;"	e	enum:__anon7
defrGroupMemberCbkType	include/defrReader.hpp	/^  defrGroupMemberCbkType,$/;"	e	enum:__anon3
defrGroupNameCbkType	cdef/defrReader.h	/^  defrGroupNameCbkType = 57,$/;"	e	enum:__anon14
defrGroupNameCbkType	def/defrReader.hpp	/^  defrGroupNameCbkType,$/;"	e	enum:__anon10
defrGroupNameCbkType	include/defrReader.h	/^  defrGroupNameCbkType = 57,$/;"	e	enum:__anon7
defrGroupNameCbkType	include/defrReader.hpp	/^  defrGroupNameCbkType,$/;"	e	enum:__anon3
defrGroupsEndCbkType	cdef/defrReader.h	/^  defrGroupsEndCbkType = 60,$/;"	e	enum:__anon14
defrGroupsEndCbkType	def/defrReader.hpp	/^  defrGroupsEndCbkType,$/;"	e	enum:__anon10
defrGroupsEndCbkType	include/defrReader.h	/^  defrGroupsEndCbkType = 60,$/;"	e	enum:__anon7
defrGroupsEndCbkType	include/defrReader.hpp	/^  defrGroupsEndCbkType,$/;"	e	enum:__anon3
defrGroupsStartCbkType	cdef/defrReader.h	/^  defrGroupsStartCbkType = 56,$/;"	e	enum:__anon14
defrGroupsStartCbkType	def/defrReader.hpp	/^  defrGroupsStartCbkType,$/;"	e	enum:__anon10
defrGroupsStartCbkType	include/defrReader.h	/^  defrGroupsStartCbkType = 56,$/;"	e	enum:__anon7
defrGroupsStartCbkType	include/defrReader.hpp	/^  defrGroupsStartCbkType,$/;"	e	enum:__anon3
defrHistoryCbkType	cdef/defrReader.h	/^  defrHistoryCbkType = 33,$/;"	e	enum:__anon14
defrHistoryCbkType	def/defrReader.hpp	/^  defrHistoryCbkType,$/;"	e	enum:__anon10
defrHistoryCbkType	include/defrReader.h	/^  defrHistoryCbkType = 33,$/;"	e	enum:__anon7
defrHistoryCbkType	include/defrReader.hpp	/^  defrHistoryCbkType,$/;"	e	enum:__anon3
defrIOTimingCbkFnType	cdef/defrReader.h	/^typedef int (*defrIOTimingCbkFnType) (defrCallbackType_e, defiIOTiming *, defiUserData);$/;"	t
defrIOTimingCbkFnType	def/defrReader.hpp	/^typedef int (*defrIOTimingCbkFnType) (defrCallbackType_e, defiIOTiming *, defiUserData);$/;"	t
defrIOTimingCbkFnType	include/defrReader.h	/^typedef int (*defrIOTimingCbkFnType) (defrCallbackType_e, defiIOTiming *, defiUserData);$/;"	t
defrIOTimingCbkFnType	include/defrReader.hpp	/^typedef int (*defrIOTimingCbkFnType) (defrCallbackType_e, defiIOTiming *, defiUserData);$/;"	t
defrIOTimingCbkType	cdef/defrReader.h	/^  defrIOTimingCbkType = 71,$/;"	e	enum:__anon14
defrIOTimingCbkType	def/defrReader.hpp	/^  defrIOTimingCbkType,$/;"	e	enum:__anon10
defrIOTimingCbkType	include/defrReader.h	/^  defrIOTimingCbkType = 71,$/;"	e	enum:__anon7
defrIOTimingCbkType	include/defrReader.hpp	/^  defrIOTimingCbkType,$/;"	e	enum:__anon3
defrIOTimingsEndCbkType	cdef/defrReader.h	/^  defrIOTimingsEndCbkType = 72,$/;"	e	enum:__anon14
defrIOTimingsEndCbkType	def/defrReader.hpp	/^  defrIOTimingsEndCbkType,$/;"	e	enum:__anon10
defrIOTimingsEndCbkType	include/defrReader.h	/^  defrIOTimingsEndCbkType = 72,$/;"	e	enum:__anon7
defrIOTimingsEndCbkType	include/defrReader.hpp	/^  defrIOTimingsEndCbkType,$/;"	e	enum:__anon3
defrIOTimingsStartCbkType	cdef/defrReader.h	/^  defrIOTimingsStartCbkType = 70,$/;"	e	enum:__anon14
defrIOTimingsStartCbkType	def/defrReader.hpp	/^  defrIOTimingsStartCbkType,$/;"	e	enum:__anon10
defrIOTimingsStartCbkType	include/defrReader.h	/^  defrIOTimingsStartCbkType = 70,$/;"	e	enum:__anon7
defrIOTimingsStartCbkType	include/defrReader.hpp	/^  defrIOTimingsStartCbkType,$/;"	e	enum:__anon3
defrInit	cdef/xdefrReader.cpp	/^int defrInit () {$/;"	f
defrInit	def/defrReader.cpp	/^defrInit()$/;"	f
defrInitSession	cdef/xdefrReader.cpp	/^int defrInitSession (int  startSession) {$/;"	f
defrInitSession	def/defrReader.cpp	/^defrInitSession(int startSession)$/;"	f
defrIntegerCbkFnType	cdef/defrReader.h	/^typedef int (*defrIntegerCbkFnType) (defrCallbackType_e, int number, defiUserData);$/;"	t
defrIntegerCbkFnType	def/defrReader.hpp	/^typedef int (*defrIntegerCbkFnType) (defrCallbackType_e, int number, defiUserData);$/;"	t
defrIntegerCbkFnType	include/defrReader.h	/^typedef int (*defrIntegerCbkFnType) (defrCallbackType_e, int number, defiUserData);$/;"	t
defrIntegerCbkFnType	include/defrReader.hpp	/^typedef int (*defrIntegerCbkFnType) (defrCallbackType_e, int number, defiUserData);$/;"	t
defrIoTimingsExtCbkType	cdef/defrReader.h	/^  defrIoTimingsExtCbkType = 31,$/;"	e	enum:__anon14
defrIoTimingsExtCbkType	def/defrReader.hpp	/^  defrIoTimingsExtCbkType,$/;"	e	enum:__anon10
defrIoTimingsExtCbkType	include/defrReader.h	/^  defrIoTimingsExtCbkType = 31,$/;"	e	enum:__anon7
defrIoTimingsExtCbkType	include/defrReader.hpp	/^  defrIoTimingsExtCbkType,$/;"	e	enum:__anon3
defrLineNumber	cdef/xdefrReader.cpp	/^int defrLineNumber () {$/;"	f
defrLineNumber	def/defrReader.cpp	/^int defrLineNumber() $/;"	f
defrLog	def/defrData.hpp	/^    FILE*  defrLog; $/;"	m	class:defrData
defrLog	include/defrData.hpp	/^    FILE*  defrLog; $/;"	m	class:defrData
defrLongLineNumber	cdef/xdefrReader.cpp	/^long long defrLongLineNumber () {$/;"	f
defrLongLineNumber	def/defrReader.cpp	/^long long defrLongLineNumber() {$/;"	f
defrNetCbkFnType	cdef/defrReader.h	/^typedef int (*defrNetCbkFnType) (defrCallbackType_e, defiNet *net, defiUserData);$/;"	t
defrNetCbkFnType	def/defrReader.hpp	/^typedef int (*defrNetCbkFnType) (defrCallbackType_e, defiNet *net, defiUserData);$/;"	t
defrNetCbkFnType	include/defrReader.h	/^typedef int (*defrNetCbkFnType) (defrCallbackType_e, defiNet *net, defiUserData);$/;"	t
defrNetCbkFnType	include/defrReader.hpp	/^typedef int (*defrNetCbkFnType) (defrCallbackType_e, defiNet *net, defiUserData);$/;"	t
defrNetCbkType	cdef/defrReader.h	/^  defrNetCbkType = 16,$/;"	e	enum:__anon14
defrNetCbkType	def/defrReader.hpp	/^  defrNetCbkType,$/;"	e	enum:__anon10
defrNetCbkType	include/defrReader.h	/^  defrNetCbkType = 16,$/;"	e	enum:__anon7
defrNetCbkType	include/defrReader.hpp	/^  defrNetCbkType,$/;"	e	enum:__anon3
defrNetConnectionExtCbkType	cdef/defrReader.h	/^  defrNetConnectionExtCbkType = 27,$/;"	e	enum:__anon14
defrNetConnectionExtCbkType	def/defrReader.hpp	/^  defrNetConnectionExtCbkType,$/;"	e	enum:__anon10
defrNetConnectionExtCbkType	include/defrReader.h	/^  defrNetConnectionExtCbkType = 27,$/;"	e	enum:__anon7
defrNetConnectionExtCbkType	include/defrReader.hpp	/^  defrNetConnectionExtCbkType,$/;"	e	enum:__anon3
defrNetEndCbkType	cdef/defrReader.h	/^  defrNetEndCbkType = 20,$/;"	e	enum:__anon14
defrNetEndCbkType	def/defrReader.hpp	/^  defrNetEndCbkType,$/;"	e	enum:__anon10
defrNetEndCbkType	include/defrReader.h	/^  defrNetEndCbkType = 20,$/;"	e	enum:__anon7
defrNetEndCbkType	include/defrReader.hpp	/^  defrNetEndCbkType,$/;"	e	enum:__anon3
defrNetExtCbkType	cdef/defrReader.h	/^  defrNetExtCbkType = 28,$/;"	e	enum:__anon14
defrNetExtCbkType	def/defrReader.hpp	/^  defrNetExtCbkType,$/;"	e	enum:__anon10
defrNetExtCbkType	include/defrReader.h	/^  defrNetExtCbkType = 28,$/;"	e	enum:__anon7
defrNetExtCbkType	include/defrReader.hpp	/^  defrNetExtCbkType,$/;"	e	enum:__anon3
defrNetNameCbkType	cdef/defrReader.h	/^  defrNetNameCbkType = 17,$/;"	e	enum:__anon14
defrNetNameCbkType	def/defrReader.hpp	/^  defrNetNameCbkType,$/;"	e	enum:__anon10
defrNetNameCbkType	include/defrReader.h	/^  defrNetNameCbkType = 17,$/;"	e	enum:__anon7
defrNetNameCbkType	include/defrReader.hpp	/^  defrNetNameCbkType,$/;"	e	enum:__anon3
defrNetNonDefaultRuleCbkType	cdef/defrReader.h	/^  defrNetNonDefaultRuleCbkType = 18,$/;"	e	enum:__anon14
defrNetNonDefaultRuleCbkType	def/defrReader.hpp	/^  defrNetNonDefaultRuleCbkType,$/;"	e	enum:__anon10
defrNetNonDefaultRuleCbkType	include/defrReader.h	/^  defrNetNonDefaultRuleCbkType = 18,$/;"	e	enum:__anon7
defrNetNonDefaultRuleCbkType	include/defrReader.hpp	/^  defrNetNonDefaultRuleCbkType,$/;"	e	enum:__anon3
defrNetStartCbkType	cdef/defrReader.h	/^  defrNetStartCbkType = 15,$/;"	e	enum:__anon14
defrNetStartCbkType	def/defrReader.hpp	/^  defrNetStartCbkType,$/;"	e	enum:__anon10
defrNetStartCbkType	include/defrReader.h	/^  defrNetStartCbkType = 15,$/;"	e	enum:__anon7
defrNetStartCbkType	include/defrReader.hpp	/^  defrNetStartCbkType,$/;"	e	enum:__anon3
defrNetSubnetNameCbkType	cdef/defrReader.h	/^  defrNetSubnetNameCbkType = 19,$/;"	e	enum:__anon14
defrNetSubnetNameCbkType	def/defrReader.hpp	/^  defrNetSubnetNameCbkType,$/;"	e	enum:__anon10
defrNetSubnetNameCbkType	include/defrReader.h	/^  defrNetSubnetNameCbkType = 19,$/;"	e	enum:__anon7
defrNetSubnetNameCbkType	include/defrReader.hpp	/^  defrNetSubnetNameCbkType,$/;"	e	enum:__anon3
defrNonDefaultCbkFnType	cdef/defrReader.h	/^typedef int (*defrNonDefaultCbkFnType) (defrCallbackType_e, defiNonDefault *, defiUserData);$/;"	t
defrNonDefaultCbkFnType	def/defrReader.hpp	/^typedef int (*defrNonDefaultCbkFnType) (defrCallbackType_e, defiNonDefault *, defiUserData);$/;"	t
defrNonDefaultCbkFnType	include/defrReader.h	/^typedef int (*defrNonDefaultCbkFnType) (defrCallbackType_e, defiNonDefault *, defiUserData);$/;"	t
defrNonDefaultCbkFnType	include/defrReader.hpp	/^typedef int (*defrNonDefaultCbkFnType) (defrCallbackType_e, defiNonDefault *, defiUserData);$/;"	t
defrNonDefaultCbkType	cdef/defrReader.h	/^  defrNonDefaultCbkType = 96,$/;"	e	enum:__anon14
defrNonDefaultCbkType	def/defrReader.hpp	/^  defrNonDefaultCbkType,$/;"	e	enum:__anon10
defrNonDefaultCbkType	include/defrReader.h	/^  defrNonDefaultCbkType = 96,$/;"	e	enum:__anon7
defrNonDefaultCbkType	include/defrReader.hpp	/^  defrNonDefaultCbkType,$/;"	e	enum:__anon3
defrNonDefaultEndCbkType	cdef/defrReader.h	/^  defrNonDefaultEndCbkType = 97,$/;"	e	enum:__anon14
defrNonDefaultEndCbkType	def/defrReader.hpp	/^  defrNonDefaultEndCbkType,$/;"	e	enum:__anon10
defrNonDefaultEndCbkType	include/defrReader.h	/^  defrNonDefaultEndCbkType = 97,$/;"	e	enum:__anon7
defrNonDefaultEndCbkType	include/defrReader.hpp	/^  defrNonDefaultEndCbkType,$/;"	e	enum:__anon3
defrNonDefaultStartCbkType	cdef/defrReader.h	/^  defrNonDefaultStartCbkType = 95,$/;"	e	enum:__anon14
defrNonDefaultStartCbkType	def/defrReader.hpp	/^  defrNonDefaultStartCbkType,$/;"	e	enum:__anon10
defrNonDefaultStartCbkType	include/defrReader.h	/^  defrNonDefaultStartCbkType = 95,$/;"	e	enum:__anon7
defrNonDefaultStartCbkType	include/defrReader.hpp	/^  defrNonDefaultStartCbkType,$/;"	e	enum:__anon3
defrPartitionCbkFnType	cdef/defrReader.h	/^typedef int (*defrPartitionCbkFnType) (defrCallbackType_e, defiPartition *, defiUserData);$/;"	t
defrPartitionCbkFnType	def/defrReader.hpp	/^typedef int (*defrPartitionCbkFnType) (defrCallbackType_e, defiPartition *, defiUserData);$/;"	t
defrPartitionCbkFnType	include/defrReader.h	/^typedef int (*defrPartitionCbkFnType) (defrCallbackType_e, defiPartition *, defiUserData);$/;"	t
defrPartitionCbkFnType	include/defrReader.hpp	/^typedef int (*defrPartitionCbkFnType) (defrCallbackType_e, defiPartition *, defiUserData);$/;"	t
defrPartitionCbkType	cdef/defrReader.h	/^  defrPartitionCbkType = 80,$/;"	e	enum:__anon14
defrPartitionCbkType	def/defrReader.hpp	/^  defrPartitionCbkType,$/;"	e	enum:__anon10
defrPartitionCbkType	include/defrReader.h	/^  defrPartitionCbkType = 80,$/;"	e	enum:__anon7
defrPartitionCbkType	include/defrReader.hpp	/^  defrPartitionCbkType,$/;"	e	enum:__anon3
defrPartitionsEndCbkType	cdef/defrReader.h	/^  defrPartitionsEndCbkType = 81,$/;"	e	enum:__anon14
defrPartitionsEndCbkType	def/defrReader.hpp	/^  defrPartitionsEndCbkType,$/;"	e	enum:__anon10
defrPartitionsEndCbkType	include/defrReader.h	/^  defrPartitionsEndCbkType = 81,$/;"	e	enum:__anon7
defrPartitionsEndCbkType	include/defrReader.hpp	/^  defrPartitionsEndCbkType,$/;"	e	enum:__anon3
defrPartitionsExtCbkType	cdef/defrReader.h	/^  defrPartitionsExtCbkType = 32,$/;"	e	enum:__anon14
defrPartitionsExtCbkType	def/defrReader.hpp	/^  defrPartitionsExtCbkType,$/;"	e	enum:__anon10
defrPartitionsExtCbkType	include/defrReader.h	/^  defrPartitionsExtCbkType = 32,$/;"	e	enum:__anon7
defrPartitionsExtCbkType	include/defrReader.hpp	/^  defrPartitionsExtCbkType,$/;"	e	enum:__anon3
defrPartitionsStartCbkType	cdef/defrReader.h	/^  defrPartitionsStartCbkType = 79,$/;"	e	enum:__anon14
defrPartitionsStartCbkType	def/defrReader.hpp	/^  defrPartitionsStartCbkType,$/;"	e	enum:__anon10
defrPartitionsStartCbkType	include/defrReader.h	/^  defrPartitionsStartCbkType = 79,$/;"	e	enum:__anon7
defrPartitionsStartCbkType	include/defrReader.hpp	/^  defrPartitionsStartCbkType,$/;"	e	enum:__anon3
defrPathCbkFnType	cdef/defrReader.h	/^typedef int (*defrPathCbkFnType) (defrCallbackType_e, defiPath *path, defiUserData);$/;"	t
defrPathCbkFnType	def/defrReader.hpp	/^typedef int (*defrPathCbkFnType) (defrCallbackType_e, defiPath *path, defiUserData);$/;"	t
defrPathCbkFnType	include/defrReader.h	/^typedef int (*defrPathCbkFnType) (defrCallbackType_e, defiPath *path, defiUserData);$/;"	t
defrPathCbkFnType	include/defrReader.hpp	/^typedef int (*defrPathCbkFnType) (defrCallbackType_e, defiPath *path, defiUserData);$/;"	t
defrPathCbkType	cdef/defrReader.h	/^  defrPathCbkType = 21,$/;"	e	enum:__anon14
defrPathCbkType	def/defrReader.hpp	/^  defrPathCbkType,$/;"	e	enum:__anon10
defrPathCbkType	include/defrReader.h	/^  defrPathCbkType = 21,$/;"	e	enum:__anon7
defrPathCbkType	include/defrReader.hpp	/^  defrPathCbkType,$/;"	e	enum:__anon3
defrPinCapCbkFnType	cdef/defrReader.h	/^typedef int (*defrPinCapCbkFnType) (defrCallbackType_e, defiPinCap *pincap, defiUserData);$/;"	t
defrPinCapCbkFnType	def/defrReader.hpp	/^typedef int (*defrPinCapCbkFnType) (defrCallbackType_e, defiPinCap *pincap, defiUserData);$/;"	t
defrPinCapCbkFnType	include/defrReader.h	/^typedef int (*defrPinCapCbkFnType) (defrCallbackType_e, defiPinCap *pincap, defiUserData);$/;"	t
defrPinCapCbkFnType	include/defrReader.hpp	/^typedef int (*defrPinCapCbkFnType) (defrCallbackType_e, defiPinCap *pincap, defiUserData);$/;"	t
defrPinCapCbkType	cdef/defrReader.h	/^  defrPinCapCbkType = 37,$/;"	e	enum:__anon14
defrPinCapCbkType	def/defrReader.hpp	/^  defrPinCapCbkType,$/;"	e	enum:__anon10
defrPinCapCbkType	include/defrReader.h	/^  defrPinCapCbkType = 37,$/;"	e	enum:__anon7
defrPinCapCbkType	include/defrReader.hpp	/^  defrPinCapCbkType,$/;"	e	enum:__anon3
defrPinCbkFnType	cdef/defrReader.h	/^typedef int (*defrPinCbkFnType) (defrCallbackType_e, defiPin *pin, defiUserData);$/;"	t
defrPinCbkFnType	def/defrReader.hpp	/^typedef int (*defrPinCbkFnType) (defrCallbackType_e, defiPin *pin, defiUserData);$/;"	t
defrPinCbkFnType	include/defrReader.h	/^typedef int (*defrPinCbkFnType) (defrCallbackType_e, defiPin *pin, defiUserData);$/;"	t
defrPinCbkFnType	include/defrReader.hpp	/^typedef int (*defrPinCbkFnType) (defrCallbackType_e, defiPin *pin, defiUserData);$/;"	t
defrPinCbkType	cdef/defrReader.h	/^  defrPinCbkType = 40,$/;"	e	enum:__anon14
defrPinCbkType	def/defrReader.hpp	/^  defrPinCbkType,$/;"	e	enum:__anon10
defrPinCbkType	include/defrReader.h	/^  defrPinCbkType = 40,$/;"	e	enum:__anon7
defrPinCbkType	include/defrReader.hpp	/^  defrPinCbkType,$/;"	e	enum:__anon3
defrPinEndCbkType	cdef/defrReader.h	/^  defrPinEndCbkType = 41,$/;"	e	enum:__anon14
defrPinEndCbkType	def/defrReader.hpp	/^  defrPinEndCbkType,$/;"	e	enum:__anon10
defrPinEndCbkType	include/defrReader.h	/^  defrPinEndCbkType = 41,$/;"	e	enum:__anon7
defrPinEndCbkType	include/defrReader.hpp	/^  defrPinEndCbkType,$/;"	e	enum:__anon3
defrPinExtCbkType	cdef/defrReader.h	/^  defrPinExtCbkType = 25,$/;"	e	enum:__anon14
defrPinExtCbkType	def/defrReader.hpp	/^  defrPinExtCbkType,$/;"	e	enum:__anon10
defrPinExtCbkType	include/defrReader.h	/^  defrPinExtCbkType = 25,$/;"	e	enum:__anon7
defrPinExtCbkType	include/defrReader.hpp	/^  defrPinExtCbkType,$/;"	e	enum:__anon3
defrPinPropCbkFnType	cdef/defrReader.h	/^typedef int (*defrPinPropCbkFnType) (defrCallbackType_e, defiPinProp *, defiUserData);$/;"	t
defrPinPropCbkFnType	def/defrReader.hpp	/^typedef int (*defrPinPropCbkFnType) (defrCallbackType_e, defiPinProp *, defiUserData);$/;"	t
defrPinPropCbkFnType	include/defrReader.h	/^typedef int (*defrPinPropCbkFnType) (defrCallbackType_e, defiPinProp *, defiUserData);$/;"	t
defrPinPropCbkFnType	include/defrReader.hpp	/^typedef int (*defrPinPropCbkFnType) (defrCallbackType_e, defiPinProp *, defiUserData);$/;"	t
defrPinPropCbkType	cdef/defrReader.h	/^  defrPinPropCbkType = 83,$/;"	e	enum:__anon14
defrPinPropCbkType	def/defrReader.hpp	/^  defrPinPropCbkType,$/;"	e	enum:__anon10
defrPinPropCbkType	include/defrReader.h	/^  defrPinPropCbkType = 83,$/;"	e	enum:__anon7
defrPinPropCbkType	include/defrReader.hpp	/^  defrPinPropCbkType,$/;"	e	enum:__anon3
defrPinPropEndCbkType	cdef/defrReader.h	/^  defrPinPropEndCbkType = 84,$/;"	e	enum:__anon14
defrPinPropEndCbkType	def/defrReader.hpp	/^  defrPinPropEndCbkType,$/;"	e	enum:__anon10
defrPinPropEndCbkType	include/defrReader.h	/^  defrPinPropEndCbkType = 84,$/;"	e	enum:__anon7
defrPinPropEndCbkType	include/defrReader.hpp	/^  defrPinPropEndCbkType,$/;"	e	enum:__anon3
defrPinPropStartCbkType	cdef/defrReader.h	/^  defrPinPropStartCbkType = 82,$/;"	e	enum:__anon14
defrPinPropStartCbkType	def/defrReader.hpp	/^  defrPinPropStartCbkType,$/;"	e	enum:__anon10
defrPinPropStartCbkType	include/defrReader.h	/^  defrPinPropStartCbkType = 82,$/;"	e	enum:__anon7
defrPinPropStartCbkType	include/defrReader.hpp	/^  defrPinPropStartCbkType,$/;"	e	enum:__anon3
defrPrintUnusedCallbacks	cdef/xdefrReader.cpp	/^void defrPrintUnusedCallbacks (FILE*  log) {$/;"	f
defrPrintUnusedCallbacks	def/defrReader.cpp	/^defrPrintUnusedCallbacks(FILE *log)$/;"	f
defrPropCbkFnType	cdef/defrReader.h	/^typedef int (*defrPropCbkFnType) (defrCallbackType_e, defiProp *prop, defiUserData);$/;"	t
defrPropCbkFnType	def/defrReader.hpp	/^typedef int (*defrPropCbkFnType) (defrCallbackType_e, defiProp *prop, defiUserData);$/;"	t
defrPropCbkFnType	include/defrReader.h	/^typedef int (*defrPropCbkFnType) (defrCallbackType_e, defiProp *prop, defiUserData);$/;"	t
defrPropCbkFnType	include/defrReader.hpp	/^typedef int (*defrPropCbkFnType) (defrCallbackType_e, defiProp *prop, defiUserData);$/;"	t
defrPropCbkType	cdef/defrReader.h	/^  defrPropCbkType = 3,$/;"	e	enum:__anon14
defrPropCbkType	def/defrReader.hpp	/^  defrPropCbkType,$/;"	e	enum:__anon10
defrPropCbkType	include/defrReader.h	/^  defrPropCbkType = 3,$/;"	e	enum:__anon7
defrPropCbkType	include/defrReader.hpp	/^  defrPropCbkType,$/;"	e	enum:__anon3
defrPropDefEndCbkType	cdef/defrReader.h	/^  defrPropDefEndCbkType = 4,$/;"	e	enum:__anon14
defrPropDefEndCbkType	def/defrReader.hpp	/^  defrPropDefEndCbkType,$/;"	e	enum:__anon10
defrPropDefEndCbkType	include/defrReader.h	/^  defrPropDefEndCbkType = 4,$/;"	e	enum:__anon7
defrPropDefEndCbkType	include/defrReader.hpp	/^  defrPropDefEndCbkType,$/;"	e	enum:__anon3
defrPropDefStartCbkType	cdef/defrReader.h	/^  defrPropDefStartCbkType = 5,$/;"	e	enum:__anon14
defrPropDefStartCbkType	def/defrReader.hpp	/^  defrPropDefStartCbkType,$/;"	e	enum:__anon10
defrPropDefStartCbkType	include/defrReader.h	/^  defrPropDefStartCbkType = 5,$/;"	e	enum:__anon7
defrPropDefStartCbkType	include/defrReader.hpp	/^  defrPropDefStartCbkType,$/;"	e	enum:__anon3
defrRead	cdef/xdefrReader.cpp	/^int defrRead (FILE * file, const char * fileName, defiUserData  userData, int  case_sensitive) {$/;"	f
defrRead	def/defrReader.cpp	/^defrRead(FILE           *f,$/;"	f
defrReadGZip	cdefzlib/cdefzlib.c	/^int defrReadGZip(defGZFile file, const char* gzipFile, defiUserData uData) {$/;"	f
defrReadGZip	defzlib/defzlib.cpp	/^int defrReadGZip(defGZFile file, const char* gzipFile, defiUserData uData) {$/;"	f
defrRegionCbkFnType	cdef/defrReader.h	/^typedef int (*defrRegionCbkFnType) (defrCallbackType_e, defiRegion *, defiUserData);$/;"	t
defrRegionCbkFnType	def/defrReader.hpp	/^typedef int (*defrRegionCbkFnType) (defrCallbackType_e, defiRegion *, defiUserData);$/;"	t
defrRegionCbkFnType	include/defrReader.h	/^typedef int (*defrRegionCbkFnType) (defrCallbackType_e, defiRegion *, defiUserData);$/;"	t
defrRegionCbkFnType	include/defrReader.hpp	/^typedef int (*defrRegionCbkFnType) (defrCallbackType_e, defiRegion *, defiUserData);$/;"	t
defrRegionCbkType	cdef/defrReader.h	/^  defrRegionCbkType = 49,$/;"	e	enum:__anon14
defrRegionCbkType	def/defrReader.hpp	/^  defrRegionCbkType,$/;"	e	enum:__anon10
defrRegionCbkType	include/defrReader.h	/^  defrRegionCbkType = 49,$/;"	e	enum:__anon7
defrRegionCbkType	include/defrReader.hpp	/^  defrRegionCbkType,$/;"	e	enum:__anon3
defrRegionEndCbkType	cdef/defrReader.h	/^  defrRegionEndCbkType = 50,$/;"	e	enum:__anon14
defrRegionEndCbkType	def/defrReader.hpp	/^  defrRegionEndCbkType,$/;"	e	enum:__anon10
defrRegionEndCbkType	include/defrReader.h	/^  defrRegionEndCbkType = 50,$/;"	e	enum:__anon7
defrRegionEndCbkType	include/defrReader.hpp	/^  defrRegionEndCbkType,$/;"	e	enum:__anon3
defrRegionStartCbkType	cdef/defrReader.h	/^  defrRegionStartCbkType = 48,$/;"	e	enum:__anon14
defrRegionStartCbkType	def/defrReader.hpp	/^  defrRegionStartCbkType,$/;"	e	enum:__anon10
defrRegionStartCbkType	include/defrReader.h	/^  defrRegionStartCbkType = 48,$/;"	e	enum:__anon7
defrRegionStartCbkType	include/defrReader.hpp	/^  defrRegionStartCbkType,$/;"	e	enum:__anon3
defrReleaseNResetMemory	cdef/xdefrReader.cpp	/^int  defrReleaseNResetMemory () {$/;"	f
defrReleaseNResetMemory	def/defrReader.cpp	/^defrReleaseNResetMemory()$/;"	f
defrReset	cdef/xdefrReader.cpp	/^int defrReset () {$/;"	f
defrReset	def/defrReader.cpp	/^defrReset()$/;"	f
defrRowCbkFnType	cdef/defrReader.h	/^typedef int (*defrRowCbkFnType) (defrCallbackType_e, defiRow *row, defiUserData);$/;"	t
defrRowCbkFnType	def/defrReader.hpp	/^typedef int (*defrRowCbkFnType) (defrCallbackType_e, defiRow *row, defiUserData);$/;"	t
defrRowCbkFnType	include/defrReader.h	/^typedef int (*defrRowCbkFnType) (defrCallbackType_e, defiRow *row, defiUserData);$/;"	t
defrRowCbkFnType	include/defrReader.hpp	/^typedef int (*defrRowCbkFnType) (defrCallbackType_e, defiRow *row, defiUserData);$/;"	t
defrRowCbkType	cdef/defrReader.h	/^  defrRowCbkType = 42,$/;"	e	enum:__anon14
defrRowCbkType	def/defrReader.hpp	/^  defrRowCbkType,$/;"	e	enum:__anon10
defrRowCbkType	include/defrReader.h	/^  defrRowCbkType = 42,$/;"	e	enum:__anon7
defrRowCbkType	include/defrReader.hpp	/^  defrRowCbkType,$/;"	e	enum:__anon3
defrSNetCbkType	cdef/defrReader.h	/^  defrSNetCbkType = 52,$/;"	e	enum:__anon14
defrSNetCbkType	def/defrReader.hpp	/^  defrSNetCbkType,$/;"	e	enum:__anon10
defrSNetCbkType	include/defrReader.h	/^  defrSNetCbkType = 52,$/;"	e	enum:__anon7
defrSNetCbkType	include/defrReader.hpp	/^  defrSNetCbkType,$/;"	e	enum:__anon3
defrSNetEndCbkType	cdef/defrReader.h	/^  defrSNetEndCbkType = 55,$/;"	e	enum:__anon14
defrSNetEndCbkType	def/defrReader.hpp	/^  defrSNetEndCbkType,$/;"	e	enum:__anon10
defrSNetEndCbkType	include/defrReader.h	/^  defrSNetEndCbkType = 55,$/;"	e	enum:__anon7
defrSNetEndCbkType	include/defrReader.hpp	/^  defrSNetEndCbkType,$/;"	e	enum:__anon3
defrSNetPartialPathCbkType	cdef/defrReader.h	/^  defrSNetPartialPathCbkType = 53,$/;"	e	enum:__anon14
defrSNetPartialPathCbkType	def/defrReader.hpp	/^  defrSNetPartialPathCbkType,$/;"	e	enum:__anon10
defrSNetPartialPathCbkType	include/defrReader.h	/^  defrSNetPartialPathCbkType = 53,$/;"	e	enum:__anon7
defrSNetPartialPathCbkType	include/defrReader.hpp	/^  defrSNetPartialPathCbkType,$/;"	e	enum:__anon3
defrSNetStartCbkType	cdef/defrReader.h	/^  defrSNetStartCbkType = 51,$/;"	e	enum:__anon14
defrSNetStartCbkType	def/defrReader.hpp	/^  defrSNetStartCbkType,$/;"	e	enum:__anon10
defrSNetStartCbkType	include/defrReader.h	/^  defrSNetStartCbkType = 51,$/;"	e	enum:__anon7
defrSNetStartCbkType	include/defrReader.hpp	/^  defrSNetStartCbkType,$/;"	e	enum:__anon3
defrSNetWireCbkType	cdef/defrReader.h	/^  defrSNetWireCbkType = 54,$/;"	e	enum:__anon14
defrSNetWireCbkType	def/defrReader.hpp	/^  defrSNetWireCbkType,$/;"	e	enum:__anon10
defrSNetWireCbkType	include/defrReader.h	/^  defrSNetWireCbkType = 54,$/;"	e	enum:__anon7
defrSNetWireCbkType	include/defrReader.hpp	/^  defrSNetWireCbkType,$/;"	e	enum:__anon3
defrScanChainExtCbkType	cdef/defrReader.h	/^  defrScanChainExtCbkType = 30,$/;"	e	enum:__anon14
defrScanChainExtCbkType	def/defrReader.hpp	/^  defrScanChainExtCbkType,$/;"	e	enum:__anon10
defrScanChainExtCbkType	include/defrReader.h	/^  defrScanChainExtCbkType = 30,$/;"	e	enum:__anon7
defrScanChainExtCbkType	include/defrReader.hpp	/^  defrScanChainExtCbkType,$/;"	e	enum:__anon3
defrScanchainCbkFnType	cdef/defrReader.h	/^typedef int (*defrScanchainCbkFnType) (defrCallbackType_e, defiScanchain *, defiUserData);$/;"	t
defrScanchainCbkFnType	def/defrReader.hpp	/^typedef int (*defrScanchainCbkFnType) (defrCallbackType_e, defiScanchain *, defiUserData);$/;"	t
defrScanchainCbkFnType	include/defrReader.h	/^typedef int (*defrScanchainCbkFnType) (defrCallbackType_e, defiScanchain *, defiUserData);$/;"	t
defrScanchainCbkFnType	include/defrReader.hpp	/^typedef int (*defrScanchainCbkFnType) (defrCallbackType_e, defiScanchain *, defiUserData);$/;"	t
defrScanchainCbkType	cdef/defrReader.h	/^  defrScanchainCbkType = 68,$/;"	e	enum:__anon14
defrScanchainCbkType	def/defrReader.hpp	/^  defrScanchainCbkType,$/;"	e	enum:__anon10
defrScanchainCbkType	include/defrReader.h	/^  defrScanchainCbkType = 68,$/;"	e	enum:__anon7
defrScanchainCbkType	include/defrReader.hpp	/^  defrScanchainCbkType,$/;"	e	enum:__anon3
defrScanchainsEndCbkType	cdef/defrReader.h	/^  defrScanchainsEndCbkType = 69,$/;"	e	enum:__anon14
defrScanchainsEndCbkType	def/defrReader.hpp	/^  defrScanchainsEndCbkType,$/;"	e	enum:__anon10
defrScanchainsEndCbkType	include/defrReader.h	/^  defrScanchainsEndCbkType = 69,$/;"	e	enum:__anon7
defrScanchainsEndCbkType	include/defrReader.hpp	/^  defrScanchainsEndCbkType,$/;"	e	enum:__anon3
defrScanchainsStartCbkType	cdef/defrReader.h	/^  defrScanchainsStartCbkType = 67,$/;"	e	enum:__anon14
defrScanchainsStartCbkType	def/defrReader.hpp	/^  defrScanchainsStartCbkType,$/;"	e	enum:__anon10
defrScanchainsStartCbkType	include/defrReader.h	/^  defrScanchainsStartCbkType = 67,$/;"	e	enum:__anon7
defrScanchainsStartCbkType	include/defrReader.hpp	/^  defrScanchainsStartCbkType,$/;"	e	enum:__anon3
defrSession	def/defrSettings.cpp	/^defrSession::defrSession() $/;"	f	class:defrSession
defrSession	def/defrSettings.hpp	/^class defrSession {$/;"	c
defrSession	include/defrSettings.hpp	/^class defrSession {$/;"	c
defrSetAddPathToNet	cdef/xdefrReader.cpp	/^void defrSetAddPathToNet () {$/;"	f
defrSetAddPathToNet	def/defrReader.cpp	/^defrSetAddPathToNet()$/;"	f
defrSetAllowComponentNets	cdef/xdefrReader.cpp	/^void defrSetAllowComponentNets () {$/;"	f
defrSetAllowComponentNets	def/defrReader.cpp	/^defrSetAllowComponentNets()$/;"	f
defrSetArrayNameCbk	cdef/xdefrReader.cpp	/^void defrSetArrayNameCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetArrayNameCbk	def/defrReader.cpp	/^defrSetArrayNameCbk(defrStringCbkFnType f)$/;"	f
defrSetAssertionCbk	cdef/xdefrReader.cpp	/^void defrSetAssertionCbk (::defrAssertionCbkFnType p0) {$/;"	f
defrSetAssertionCbk	def/defrReader.cpp	/^defrSetAssertionCbk(defrAssertionCbkFnType f)$/;"	f
defrSetAssertionWarnings	cdef/xdefrReader.cpp	/^void defrSetAssertionWarnings (int  warn) {$/;"	f
defrSetAssertionWarnings	def/defrReader.cpp	/^defrSetAssertionWarnings(int warn)$/;"	f
defrSetAssertionsEndCbk	cdef/xdefrReader.cpp	/^void defrSetAssertionsEndCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetAssertionsEndCbk	def/defrReader.cpp	/^defrSetAssertionsEndCbk(defrVoidCbkFnType f)$/;"	f
defrSetAssertionsStartCbk	cdef/xdefrReader.cpp	/^void defrSetAssertionsStartCbk (::defrIntegerCbkFnType p0) {$/;"	f
defrSetAssertionsStartCbk	def/defrReader.cpp	/^defrSetAssertionsStartCbk(defrIntegerCbkFnType f)$/;"	f
defrSetBlockageCbk	cdef/xdefrReader.cpp	/^void defrSetBlockageCbk (::defrBlockageCbkFnType p0) {$/;"	f
defrSetBlockageCbk	def/defrReader.cpp	/^defrSetBlockageCbk(defrBlockageCbkFnType f)$/;"	f
defrSetBlockageEndCbk	cdef/xdefrReader.cpp	/^void defrSetBlockageEndCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetBlockageEndCbk	def/defrReader.cpp	/^defrSetBlockageEndCbk(defrVoidCbkFnType f)$/;"	f
defrSetBlockageStartCbk	cdef/xdefrReader.cpp	/^void defrSetBlockageStartCbk (::defrIntegerCbkFnType p0) {$/;"	f
defrSetBlockageStartCbk	def/defrReader.cpp	/^defrSetBlockageStartCbk(defrIntegerCbkFnType f)$/;"	f
defrSetBlockageWarnings	cdef/xdefrReader.cpp	/^void defrSetBlockageWarnings (int  warn) {$/;"	f
defrSetBlockageWarnings	def/defrReader.cpp	/^defrSetBlockageWarnings(int warn)$/;"	f
defrSetBusBitCbk	cdef/xdefrReader.cpp	/^void defrSetBusBitCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetBusBitCbk	def/defrReader.cpp	/^defrSetBusBitCbk(defrStringCbkFnType f)$/;"	f
defrSetCannotOccupyCbk	cdef/xdefrReader.cpp	/^void defrSetCannotOccupyCbk (::defrSiteCbkFnType p0) {$/;"	f
defrSetCannotOccupyCbk	def/defrReader.cpp	/^defrSetCannotOccupyCbk(defrSiteCbkFnType f)$/;"	f
defrSetCanplaceCbk	cdef/xdefrReader.cpp	/^void defrSetCanplaceCbk (::defrSiteCbkFnType p0) {$/;"	f
defrSetCanplaceCbk	def/defrReader.cpp	/^defrSetCanplaceCbk(defrSiteCbkFnType f)$/;"	f
defrSetCaseSensitiveCbk	cdef/xdefrReader.cpp	/^void defrSetCaseSensitiveCbk (::defrIntegerCbkFnType p0) {$/;"	f
defrSetCaseSensitiveCbk	def/defrReader.cpp	/^defrSetCaseSensitiveCbk(defrIntegerCbkFnType f)$/;"	f
defrSetCaseSensitiveWarnings	cdef/xdefrReader.cpp	/^void defrSetCaseSensitiveWarnings (int  warn) {$/;"	f
defrSetCaseSensitiveWarnings	def/defrReader.cpp	/^defrSetCaseSensitiveWarnings(int warn)$/;"	f
defrSetCaseSensitivity	cdef/xdefrReader.cpp	/^void defrSetCaseSensitivity (int  caseSense) {$/;"	f
defrSetCaseSensitivity	def/defrReader.cpp	/^defrSetCaseSensitivity(int caseSense)$/;"	f
defrSetCommentChar	cdef/xdefrReader.cpp	/^void defrSetCommentChar (char  c) {$/;"	f
defrSetCommentChar	def/defrReader.cpp	/^defrSetCommentChar(char c)$/;"	f
defrSetComponentCbk	cdef/xdefrReader.cpp	/^void defrSetComponentCbk (::defrComponentCbkFnType p0) {$/;"	f
defrSetComponentCbk	def/defrReader.cpp	/^defrSetComponentCbk(defrComponentCbkFnType f)$/;"	f
defrSetComponentEndCbk	cdef/xdefrReader.cpp	/^void defrSetComponentEndCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetComponentEndCbk	def/defrReader.cpp	/^defrSetComponentEndCbk(defrVoidCbkFnType f)$/;"	f
defrSetComponentExtCbk	cdef/xdefrReader.cpp	/^void defrSetComponentExtCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetComponentExtCbk	def/defrReader.cpp	/^defrSetComponentExtCbk(defrStringCbkFnType f)$/;"	f
defrSetComponentMaskShiftLayerCbk	cdef/xdefrReader.cpp	/^void defrSetComponentMaskShiftLayerCbk (::defrComponentMaskShiftLayerCbkFnType p0) {$/;"	f
defrSetComponentMaskShiftLayerCbk	def/defrReader.cpp	/^defrSetComponentMaskShiftLayerCbk(defrComponentMaskShiftLayerCbkFnType f)$/;"	f
defrSetComponentStartCbk	cdef/xdefrReader.cpp	/^void defrSetComponentStartCbk (::defrIntegerCbkFnType p0) {$/;"	f
defrSetComponentStartCbk	def/defrReader.cpp	/^defrSetComponentStartCbk(defrIntegerCbkFnType f)$/;"	f
defrSetComponentWarnings	cdef/xdefrReader.cpp	/^void defrSetComponentWarnings (int  warn) {$/;"	f
defrSetComponentWarnings	def/defrReader.cpp	/^defrSetComponentWarnings(int warn)$/;"	f
defrSetConstraintCbk	cdef/xdefrReader.cpp	/^void defrSetConstraintCbk (::defrAssertionCbkFnType p0) {$/;"	f
defrSetConstraintCbk	def/defrReader.cpp	/^defrSetConstraintCbk(defrAssertionCbkFnType f)$/;"	f
defrSetConstraintWarnings	cdef/xdefrReader.cpp	/^void defrSetConstraintWarnings (int  warn) {$/;"	f
defrSetConstraintWarnings	def/defrReader.cpp	/^defrSetConstraintWarnings(int warn)$/;"	f
defrSetConstraintsEndCbk	cdef/xdefrReader.cpp	/^void defrSetConstraintsEndCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetConstraintsEndCbk	def/defrReader.cpp	/^defrSetConstraintsEndCbk(defrVoidCbkFnType f)$/;"	f
defrSetConstraintsStartCbk	cdef/xdefrReader.cpp	/^void defrSetConstraintsStartCbk (::defrIntegerCbkFnType p0) {$/;"	f
defrSetConstraintsStartCbk	def/defrReader.cpp	/^defrSetConstraintsStartCbk(defrIntegerCbkFnType f)$/;"	f
defrSetContextLogFunction	def/defrReader.cpp	/^defrSetContextLogFunction(DEFI_CONTEXT_LOG_FUNCTION f)$/;"	f
defrSetContextWarningLogFunction	def/defrReader.cpp	/^defrSetContextWarningLogFunction(DEFI_CONTEXT_WARNING_LOG_FUNCTION f)$/;"	f
defrSetDefaultCapCbk	cdef/xdefrReader.cpp	/^void defrSetDefaultCapCbk (::defrIntegerCbkFnType p0) {$/;"	f
defrSetDefaultCapCbk	def/defrReader.cpp	/^defrSetDefaultCapCbk(defrIntegerCbkFnType f)$/;"	f
defrSetDefaultCapWarnings	cdef/xdefrReader.cpp	/^void defrSetDefaultCapWarnings (int  warn) {$/;"	f
defrSetDefaultCapWarnings	def/defrReader.cpp	/^defrSetDefaultCapWarnings(int warn)$/;"	f
defrSetDeltaNumberLines	cdef/xdefrReader.cpp	/^void defrSetDeltaNumberLines (int p0) {$/;"	f
defrSetDeltaNumberLines	def/defrReader.cpp	/^defrSetDeltaNumberLines(int numLines)$/;"	f
defrSetDesignCbk	cdef/xdefrReader.cpp	/^void defrSetDesignCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetDesignCbk	def/defrReader.cpp	/^defrSetDesignCbk(defrStringCbkFnType f)$/;"	f
defrSetDesignEndCbk	cdef/xdefrReader.cpp	/^void defrSetDesignEndCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetDesignEndCbk	def/defrReader.cpp	/^defrSetDesignEndCbk(defrVoidCbkFnType f)$/;"	f
defrSetDieAreaCbk	cdef/xdefrReader.cpp	/^void defrSetDieAreaCbk (::defrBoxCbkFnType p0) {$/;"	f
defrSetDieAreaCbk	def/defrReader.cpp	/^defrSetDieAreaCbk(defrBoxCbkFnType f)$/;"	f
defrSetDividerCbk	cdef/xdefrReader.cpp	/^void defrSetDividerCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetDividerCbk	def/defrReader.cpp	/^defrSetDividerCbk(defrStringCbkFnType f)$/;"	f
defrSetExtensionCbk	cdef/xdefrReader.cpp	/^void defrSetExtensionCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetExtensionCbk	def/defrReader.cpp	/^defrSetExtensionCbk(defrStringCbkFnType f)$/;"	f
defrSetFPCCbk	cdef/xdefrReader.cpp	/^void defrSetFPCCbk (::defrFPCCbkFnType p0) {$/;"	f
defrSetFPCCbk	def/defrReader.cpp	/^defrSetFPCCbk(defrFPCCbkFnType f)$/;"	f
defrSetFPCEndCbk	cdef/xdefrReader.cpp	/^void defrSetFPCEndCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetFPCEndCbk	def/defrReader.cpp	/^defrSetFPCEndCbk(defrVoidCbkFnType f)$/;"	f
defrSetFPCStartCbk	cdef/xdefrReader.cpp	/^void defrSetFPCStartCbk (::defrIntegerCbkFnType p0) {$/;"	f
defrSetFPCStartCbk	def/defrReader.cpp	/^defrSetFPCStartCbk(defrIntegerCbkFnType f)$/;"	f
defrSetFillCbk	cdef/xdefrReader.cpp	/^void defrSetFillCbk (::defrFillCbkFnType p0) {$/;"	f
defrSetFillCbk	def/defrReader.cpp	/^defrSetFillCbk(defrFillCbkFnType f)$/;"	f
defrSetFillEndCbk	cdef/xdefrReader.cpp	/^void defrSetFillEndCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetFillEndCbk	def/defrReader.cpp	/^defrSetFillEndCbk(defrVoidCbkFnType f)$/;"	f
defrSetFillStartCbk	cdef/xdefrReader.cpp	/^void defrSetFillStartCbk (::defrIntegerCbkFnType p0) {$/;"	f
defrSetFillStartCbk	def/defrReader.cpp	/^defrSetFillStartCbk(defrIntegerCbkFnType f)$/;"	f
defrSetFloorPlanNameCbk	cdef/xdefrReader.cpp	/^void defrSetFloorPlanNameCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetFloorPlanNameCbk	def/defrReader.cpp	/^defrSetFloorPlanNameCbk(defrStringCbkFnType f)$/;"	f
defrSetFreeFunction	cdef/xdefrReader.cpp	/^void defrSetFreeFunction (::DEFI_FREE_FUNCTION p0) {$/;"	f
defrSetFreeFunction	def/defrReader.cpp	/^defrSetFreeFunction(DEFI_FREE_FUNCTION f)$/;"	f
defrSetGZipReadFunction	defzlib/defzlib.cpp	/^defrSetGZipReadFunction()$/;"	f
defrSetGcellGridCbk	cdef/xdefrReader.cpp	/^void defrSetGcellGridCbk (::defrGcellGridCbkFnType p0) {$/;"	f
defrSetGcellGridCbk	def/defrReader.cpp	/^defrSetGcellGridCbk(defrGcellGridCbkFnType f)$/;"	f
defrSetGcellGridWarnings	cdef/xdefrReader.cpp	/^void defrSetGcellGridWarnings (int  warn) {$/;"	f
defrSetGcellGridWarnings	def/defrReader.cpp	/^defrSetGcellGridWarnings(int warn)$/;"	f
defrSetGroupCbk	cdef/xdefrReader.cpp	/^void defrSetGroupCbk (::defrGroupCbkFnType p0) {$/;"	f
defrSetGroupCbk	def/defrReader.cpp	/^defrSetGroupCbk(defrGroupCbkFnType f)$/;"	f
defrSetGroupExtCbk	cdef/xdefrReader.cpp	/^void defrSetGroupExtCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetGroupExtCbk	def/defrReader.cpp	/^defrSetGroupExtCbk(defrStringCbkFnType f)$/;"	f
defrSetGroupMemberCbk	cdef/xdefrReader.cpp	/^void defrSetGroupMemberCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetGroupMemberCbk	def/defrReader.cpp	/^defrSetGroupMemberCbk(defrStringCbkFnType f)$/;"	f
defrSetGroupNameCbk	cdef/xdefrReader.cpp	/^void defrSetGroupNameCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetGroupNameCbk	def/defrReader.cpp	/^defrSetGroupNameCbk(defrStringCbkFnType f)$/;"	f
defrSetGroupsEndCbk	cdef/xdefrReader.cpp	/^void defrSetGroupsEndCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetGroupsEndCbk	def/defrReader.cpp	/^defrSetGroupsEndCbk(defrVoidCbkFnType f)$/;"	f
defrSetGroupsStartCbk	cdef/xdefrReader.cpp	/^void defrSetGroupsStartCbk (::defrIntegerCbkFnType p0) {$/;"	f
defrSetGroupsStartCbk	def/defrReader.cpp	/^defrSetGroupsStartCbk(defrIntegerCbkFnType f)$/;"	f
defrSetHistoryCbk	cdef/xdefrReader.cpp	/^void defrSetHistoryCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetHistoryCbk	def/defrReader.cpp	/^defrSetHistoryCbk(defrStringCbkFnType f)$/;"	f
defrSetIOTimingCbk	cdef/xdefrReader.cpp	/^void defrSetIOTimingCbk (::defrIOTimingCbkFnType p0) {$/;"	f
defrSetIOTimingCbk	def/defrReader.cpp	/^defrSetIOTimingCbk(defrIOTimingCbkFnType f)$/;"	f
defrSetIOTimingWarnings	cdef/xdefrReader.cpp	/^void defrSetIOTimingWarnings (int  warn) {$/;"	f
defrSetIOTimingWarnings	def/defrReader.cpp	/^defrSetIOTimingWarnings(int warn)$/;"	f
defrSetIOTimingsEndCbk	cdef/xdefrReader.cpp	/^void defrSetIOTimingsEndCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetIOTimingsEndCbk	def/defrReader.cpp	/^defrSetIOTimingsEndCbk(defrVoidCbkFnType f)$/;"	f
defrSetIOTimingsStartCbk	cdef/xdefrReader.cpp	/^void defrSetIOTimingsStartCbk (::defrIntegerCbkFnType p0) {$/;"	f
defrSetIOTimingsStartCbk	def/defrReader.cpp	/^defrSetIOTimingsStartCbk(defrIntegerCbkFnType f)$/;"	f
defrSetIoTimingsExtCbk	cdef/xdefrReader.cpp	/^void defrSetIoTimingsExtCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetIoTimingsExtCbk	def/defrReader.cpp	/^defrSetIoTimingsExtCbk(defrStringCbkFnType f)$/;"	f
defrSetLimitPerMsg	cdef/xdefrReader.cpp	/^void defrSetLimitPerMsg (int  msgId, int  numMsg) {$/;"	f
defrSetLimitPerMsg	def/defrReader.cpp	/^defrSetLimitPerMsg(int  msgId,$/;"	f
defrSetLineNumberFunction	cdef/xdefrReader.cpp	/^void defrSetLineNumberFunction (::DEFI_LINE_NUMBER_FUNCTION p0) {$/;"	f
defrSetLineNumberFunction	def/defrReader.cpp	/^defrSetLineNumberFunction(DEFI_LINE_NUMBER_FUNCTION f)$/;"	f
defrSetLogFunction	cdef/xdefrReader.cpp	/^void defrSetLogFunction (::DEFI_LOG_FUNCTION p0) {$/;"	f
defrSetLogFunction	def/defrReader.cpp	/^defrSetLogFunction(DEFI_LOG_FUNCTION f)$/;"	f
defrSetLongLineNumberFunction	cdef/xdefrReader.cpp	/^void defrSetLongLineNumberFunction (::DEFI_LONG_LINE_NUMBER_FUNCTION p0) {$/;"	f
defrSetLongLineNumberFunction	def/defrReader.cpp	/^defrSetLongLineNumberFunction(DEFI_LONG_LINE_NUMBER_FUNCTION f)$/;"	f
defrSetMagicCommentFoundFunction	cdef/xdefrReader.cpp	/^void defrSetMagicCommentFoundFunction (::DEFI_MAGIC_COMMENT_FOUND_FUNCTION p0) {$/;"	f
defrSetMagicCommentFoundFunction	def/defrReader.cpp	/^defrSetMagicCommentFoundFunction(DEFI_MAGIC_COMMENT_FOUND_FUNCTION f)$/;"	f
defrSetMagicCommentString	cdef/xdefrReader.cpp	/^void defrSetMagicCommentString (char * p0) {$/;"	f
defrSetMagicCommentString	def/defrReader.cpp	/^defrSetMagicCommentString(char *s)$/;"	f
defrSetMallocFunction	cdef/xdefrReader.cpp	/^void defrSetMallocFunction (::DEFI_MALLOC_FUNCTION p0) {$/;"	f
defrSetMallocFunction	def/defrReader.cpp	/^defrSetMallocFunction(DEFI_MALLOC_FUNCTION f)$/;"	f
defrSetNLines	cdef/xdefrReader.cpp	/^void defrSetNLines (long long  n) {$/;"	f
defrSetNLines	def/defrReader.cpp	/^defrSetNLines(long long n)$/;"	f
defrSetNetCbk	cdef/xdefrReader.cpp	/^void defrSetNetCbk (::defrNetCbkFnType p0) {$/;"	f
defrSetNetCbk	def/defrReader.cpp	/^defrSetNetCbk(defrNetCbkFnType f)$/;"	f
defrSetNetConnectionExtCbk	cdef/xdefrReader.cpp	/^void defrSetNetConnectionExtCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetNetConnectionExtCbk	def/defrReader.cpp	/^defrSetNetConnectionExtCbk(defrStringCbkFnType f)$/;"	f
defrSetNetEndCbk	cdef/xdefrReader.cpp	/^void defrSetNetEndCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetNetEndCbk	def/defrReader.cpp	/^defrSetNetEndCbk(defrVoidCbkFnType f)$/;"	f
defrSetNetExtCbk	cdef/xdefrReader.cpp	/^void defrSetNetExtCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetNetExtCbk	def/defrReader.cpp	/^defrSetNetExtCbk(defrStringCbkFnType f)$/;"	f
defrSetNetNameCbk	cdef/xdefrReader.cpp	/^void defrSetNetNameCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetNetNameCbk	def/defrReader.cpp	/^defrSetNetNameCbk(defrStringCbkFnType f)$/;"	f
defrSetNetNonDefaultRuleCbk	cdef/xdefrReader.cpp	/^void defrSetNetNonDefaultRuleCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetNetNonDefaultRuleCbk	def/defrReader.cpp	/^defrSetNetNonDefaultRuleCbk(defrStringCbkFnType f)$/;"	f
defrSetNetPartialPathCbk	cdef/xdefrReader.cpp	/^void defrSetNetPartialPathCbk (::defrNetCbkFnType p0) {$/;"	f
defrSetNetPartialPathCbk	def/defrReader.cpp	/^defrSetNetPartialPathCbk(defrNetCbkFnType f)$/;"	f
defrSetNetStartCbk	cdef/xdefrReader.cpp	/^void defrSetNetStartCbk (::defrIntegerCbkFnType p0) {$/;"	f
defrSetNetStartCbk	def/defrReader.cpp	/^defrSetNetStartCbk(defrIntegerCbkFnType f)$/;"	f
defrSetNetSubnetNameCbk	cdef/xdefrReader.cpp	/^void defrSetNetSubnetNameCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetNetSubnetNameCbk	def/defrReader.cpp	/^defrSetNetSubnetNameCbk(defrStringCbkFnType f)$/;"	f
defrSetNetWarnings	cdef/xdefrReader.cpp	/^void defrSetNetWarnings (int  warn) {$/;"	f
defrSetNetWarnings	def/defrReader.cpp	/^defrSetNetWarnings(int warn)$/;"	f
defrSetNonDefaultCbk	cdef/xdefrReader.cpp	/^void defrSetNonDefaultCbk (::defrNonDefaultCbkFnType p0) {$/;"	f
defrSetNonDefaultCbk	def/defrReader.cpp	/^defrSetNonDefaultCbk(defrNonDefaultCbkFnType f)$/;"	f
defrSetNonDefaultEndCbk	cdef/xdefrReader.cpp	/^void defrSetNonDefaultEndCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetNonDefaultEndCbk	def/defrReader.cpp	/^defrSetNonDefaultEndCbk(defrVoidCbkFnType f)$/;"	f
defrSetNonDefaultStartCbk	cdef/xdefrReader.cpp	/^void defrSetNonDefaultStartCbk (::defrIntegerCbkFnType p0) {$/;"	f
defrSetNonDefaultStartCbk	def/defrReader.cpp	/^defrSetNonDefaultStartCbk(defrIntegerCbkFnType f)$/;"	f
defrSetNonDefaultWarnings	cdef/xdefrReader.cpp	/^void defrSetNonDefaultWarnings (int  warn) {$/;"	f
defrSetNonDefaultWarnings	def/defrReader.cpp	/^defrSetNonDefaultWarnings(int warn)$/;"	f
defrSetOpenLogFileAppend	cdef/xdefrReader.cpp	/^void defrSetOpenLogFileAppend () {$/;"	f
defrSetOpenLogFileAppend	def/defrReader.cpp	/^defrSetOpenLogFileAppend()$/;"	f
defrSetPartitionCbk	cdef/xdefrReader.cpp	/^void defrSetPartitionCbk (::defrPartitionCbkFnType p0) {$/;"	f
defrSetPartitionCbk	def/defrReader.cpp	/^defrSetPartitionCbk(defrPartitionCbkFnType f)$/;"	f
defrSetPartitionsEndCbk	cdef/xdefrReader.cpp	/^void defrSetPartitionsEndCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetPartitionsEndCbk	def/defrReader.cpp	/^defrSetPartitionsEndCbk(defrVoidCbkFnType f)$/;"	f
defrSetPartitionsExtCbk	cdef/xdefrReader.cpp	/^void defrSetPartitionsExtCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetPartitionsExtCbk	def/defrReader.cpp	/^defrSetPartitionsExtCbk(defrStringCbkFnType f)$/;"	f
defrSetPartitionsStartCbk	cdef/xdefrReader.cpp	/^void defrSetPartitionsStartCbk (::defrIntegerCbkFnType p0) {$/;"	f
defrSetPartitionsStartCbk	def/defrReader.cpp	/^defrSetPartitionsStartCbk(defrIntegerCbkFnType f)$/;"	f
defrSetPathCbk	cdef/xdefrReader.cpp	/^void defrSetPathCbk (::defrPathCbkFnType p0) {$/;"	f
defrSetPathCbk	def/defrReader.cpp	/^defrSetPathCbk(defrPathCbkFnType f)$/;"	f
defrSetPinCapCbk	cdef/xdefrReader.cpp	/^void defrSetPinCapCbk (::defrPinCapCbkFnType p0) {$/;"	f
defrSetPinCapCbk	def/defrReader.cpp	/^defrSetPinCapCbk(defrPinCapCbkFnType f)$/;"	f
defrSetPinCbk	cdef/xdefrReader.cpp	/^void defrSetPinCbk (::defrPinCbkFnType p0) {$/;"	f
defrSetPinCbk	def/defrReader.cpp	/^defrSetPinCbk(defrPinCbkFnType f)$/;"	f
defrSetPinEndCbk	cdef/xdefrReader.cpp	/^void defrSetPinEndCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetPinEndCbk	def/defrReader.cpp	/^defrSetPinEndCbk(defrVoidCbkFnType f)$/;"	f
defrSetPinExtCbk	cdef/xdefrReader.cpp	/^void defrSetPinExtCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetPinExtCbk	def/defrReader.cpp	/^defrSetPinExtCbk(defrStringCbkFnType f)$/;"	f
defrSetPinExtWarnings	cdef/xdefrReader.cpp	/^void defrSetPinExtWarnings (int  warn) {$/;"	f
defrSetPinExtWarnings	def/defrReader.cpp	/^defrSetPinExtWarnings(int warn)$/;"	f
defrSetPinPropCbk	cdef/xdefrReader.cpp	/^void defrSetPinPropCbk (::defrPinPropCbkFnType p0) {$/;"	f
defrSetPinPropCbk	def/defrReader.cpp	/^defrSetPinPropCbk(defrPinPropCbkFnType f)$/;"	f
defrSetPinPropEndCbk	cdef/xdefrReader.cpp	/^void defrSetPinPropEndCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetPinPropEndCbk	def/defrReader.cpp	/^defrSetPinPropEndCbk(defrVoidCbkFnType f)$/;"	f
defrSetPinPropStartCbk	cdef/xdefrReader.cpp	/^void defrSetPinPropStartCbk (::defrIntegerCbkFnType p0) {$/;"	f
defrSetPinPropStartCbk	def/defrReader.cpp	/^defrSetPinPropStartCbk(defrIntegerCbkFnType f)$/;"	f
defrSetPinWarnings	cdef/xdefrReader.cpp	/^void defrSetPinWarnings (int  warn) {$/;"	f
defrSetPinWarnings	def/defrReader.cpp	/^defrSetPinWarnings(int warn)$/;"	f
defrSetPropCbk	cdef/xdefrReader.cpp	/^void defrSetPropCbk (::defrPropCbkFnType p0) {$/;"	f
defrSetPropCbk	def/defrReader.cpp	/^defrSetPropCbk(defrPropCbkFnType f)$/;"	f
defrSetPropDefEndCbk	cdef/xdefrReader.cpp	/^void defrSetPropDefEndCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetPropDefEndCbk	def/defrReader.cpp	/^defrSetPropDefEndCbk(defrVoidCbkFnType f)$/;"	f
defrSetPropDefStartCbk	cdef/xdefrReader.cpp	/^void defrSetPropDefStartCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetPropDefStartCbk	def/defrReader.cpp	/^defrSetPropDefStartCbk(defrVoidCbkFnType f)$/;"	f
defrSetReadFunction	cdef/xdefrReader.cpp	/^void defrSetReadFunction (::DEFI_READ_FUNCTION p0) {$/;"	f
defrSetReadFunction	def/defrReader.cpp	/^defrSetReadFunction(DEFI_READ_FUNCTION f)$/;"	f
defrSetReallocFunction	cdef/xdefrReader.cpp	/^void defrSetReallocFunction (::DEFI_REALLOC_FUNCTION p0) {$/;"	f
defrSetReallocFunction	def/defrReader.cpp	/^defrSetReallocFunction(DEFI_REALLOC_FUNCTION f)$/;"	f
defrSetRegionCbk	cdef/xdefrReader.cpp	/^void defrSetRegionCbk (::defrRegionCbkFnType p0) {$/;"	f
defrSetRegionCbk	def/defrReader.cpp	/^defrSetRegionCbk(defrRegionCbkFnType f)$/;"	f
defrSetRegionEndCbk	cdef/xdefrReader.cpp	/^void defrSetRegionEndCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetRegionEndCbk	def/defrReader.cpp	/^defrSetRegionEndCbk(defrVoidCbkFnType f)$/;"	f
defrSetRegionStartCbk	cdef/xdefrReader.cpp	/^void defrSetRegionStartCbk (::defrIntegerCbkFnType p0) {$/;"	f
defrSetRegionStartCbk	def/defrReader.cpp	/^defrSetRegionStartCbk(defrIntegerCbkFnType f)$/;"	f
defrSetRegionWarnings	cdef/xdefrReader.cpp	/^void defrSetRegionWarnings (int  warn) {$/;"	f
defrSetRegionWarnings	def/defrReader.cpp	/^defrSetRegionWarnings(int warn)$/;"	f
defrSetRegisterUnusedCallbacks	cdef/xdefrReader.cpp	/^void defrSetRegisterUnusedCallbacks () {$/;"	f
defrSetRegisterUnusedCallbacks	def/defrReader.cpp	/^defrSetRegisterUnusedCallbacks()$/;"	f
defrSetRowCbk	cdef/xdefrReader.cpp	/^void defrSetRowCbk (::defrRowCbkFnType p0) {$/;"	f
defrSetRowCbk	def/defrReader.cpp	/^defrSetRowCbk(defrRowCbkFnType f)$/;"	f
defrSetRowWarnings	cdef/xdefrReader.cpp	/^void defrSetRowWarnings (int  warn) {$/;"	f
defrSetRowWarnings	def/defrReader.cpp	/^defrSetRowWarnings(int warn)$/;"	f
defrSetSNetCbk	cdef/xdefrReader.cpp	/^void defrSetSNetCbk (::defrNetCbkFnType p0) {$/;"	f
defrSetSNetCbk	def/defrReader.cpp	/^defrSetSNetCbk(defrNetCbkFnType f)$/;"	f
defrSetSNetEndCbk	cdef/xdefrReader.cpp	/^void defrSetSNetEndCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetSNetEndCbk	def/defrReader.cpp	/^defrSetSNetEndCbk(defrVoidCbkFnType f)$/;"	f
defrSetSNetPartialPathCbk	cdef/xdefrReader.cpp	/^void defrSetSNetPartialPathCbk (::defrNetCbkFnType p0) {$/;"	f
defrSetSNetPartialPathCbk	def/defrReader.cpp	/^defrSetSNetPartialPathCbk(defrNetCbkFnType f)$/;"	f
defrSetSNetStartCbk	cdef/xdefrReader.cpp	/^void defrSetSNetStartCbk (::defrIntegerCbkFnType p0) {$/;"	f
defrSetSNetStartCbk	def/defrReader.cpp	/^defrSetSNetStartCbk(defrIntegerCbkFnType f)$/;"	f
defrSetSNetWarnings	cdef/xdefrReader.cpp	/^void defrSetSNetWarnings (int  warn) {$/;"	f
defrSetSNetWarnings	def/defrReader.cpp	/^defrSetSNetWarnings(int warn)$/;"	f
defrSetSNetWireCbk	cdef/xdefrReader.cpp	/^void defrSetSNetWireCbk (::defrNetCbkFnType p0) {$/;"	f
defrSetSNetWireCbk	def/defrReader.cpp	/^defrSetSNetWireCbk(defrNetCbkFnType f)$/;"	f
defrSetScanChainExtCbk	cdef/xdefrReader.cpp	/^void defrSetScanChainExtCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetScanChainExtCbk	def/defrReader.cpp	/^defrSetScanChainExtCbk(defrStringCbkFnType f)$/;"	f
defrSetScanchainCbk	cdef/xdefrReader.cpp	/^void defrSetScanchainCbk (::defrScanchainCbkFnType p0) {$/;"	f
defrSetScanchainCbk	def/defrReader.cpp	/^defrSetScanchainCbk(defrScanchainCbkFnType f)$/;"	f
defrSetScanchainWarnings	cdef/xdefrReader.cpp	/^void defrSetScanchainWarnings (int  warn) {$/;"	f
defrSetScanchainWarnings	def/defrReader.cpp	/^defrSetScanchainWarnings(int warn)$/;"	f
defrSetScanchainsEndCbk	cdef/xdefrReader.cpp	/^void defrSetScanchainsEndCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetScanchainsEndCbk	def/defrReader.cpp	/^defrSetScanchainsEndCbk(defrVoidCbkFnType f)$/;"	f
defrSetScanchainsStartCbk	cdef/xdefrReader.cpp	/^void defrSetScanchainsStartCbk (::defrIntegerCbkFnType p0) {$/;"	f
defrSetScanchainsStartCbk	def/defrReader.cpp	/^defrSetScanchainsStartCbk(defrIntegerCbkFnType f)$/;"	f
defrSetSiteCbk	cdef/xdefrReader.cpp	/^void defrSetSiteCbk (::defrSiteCbkFnType p0) {$/;"	f
defrSetSiteCbk	def/defrReader.cpp	/^defrSetSiteCbk(defrSiteCbkFnType f)$/;"	f
defrSetSlotCbk	cdef/xdefrReader.cpp	/^void defrSetSlotCbk (::defrSlotCbkFnType p0) {$/;"	f
defrSetSlotCbk	def/defrReader.cpp	/^defrSetSlotCbk(defrSlotCbkFnType f)$/;"	f
defrSetSlotEndCbk	cdef/xdefrReader.cpp	/^void defrSetSlotEndCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetSlotEndCbk	def/defrReader.cpp	/^defrSetSlotEndCbk(defrVoidCbkFnType f)$/;"	f
defrSetSlotStartCbk	cdef/xdefrReader.cpp	/^void defrSetSlotStartCbk (::defrIntegerCbkFnType p0) {$/;"	f
defrSetSlotStartCbk	def/defrReader.cpp	/^defrSetSlotStartCbk(defrIntegerCbkFnType f)$/;"	f
defrSetStartPinsCbk	cdef/xdefrReader.cpp	/^void defrSetStartPinsCbk (::defrIntegerCbkFnType p0) {$/;"	f
defrSetStartPinsCbk	def/defrReader.cpp	/^defrSetStartPinsCbk(defrIntegerCbkFnType f)$/;"	f
defrSetStylesCbk	cdef/xdefrReader.cpp	/^void defrSetStylesCbk (::defrStylesCbkFnType p0) {$/;"	f
defrSetStylesCbk	def/defrReader.cpp	/^defrSetStylesCbk(defrStylesCbkFnType f)$/;"	f
defrSetStylesEndCbk	cdef/xdefrReader.cpp	/^void defrSetStylesEndCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetStylesEndCbk	def/defrReader.cpp	/^defrSetStylesEndCbk(defrVoidCbkFnType f)$/;"	f
defrSetStylesStartCbk	cdef/xdefrReader.cpp	/^void defrSetStylesStartCbk (::defrIntegerCbkFnType p0) {$/;"	f
defrSetStylesStartCbk	def/defrReader.cpp	/^defrSetStylesStartCbk(defrIntegerCbkFnType f)$/;"	f
defrSetStylesWarnings	cdef/xdefrReader.cpp	/^void defrSetStylesWarnings (int  warn) {$/;"	f
defrSetStylesWarnings	def/defrReader.cpp	/^defrSetStylesWarnings(int warn)$/;"	f
defrSetTechnologyCbk	cdef/xdefrReader.cpp	/^void defrSetTechnologyCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetTechnologyCbk	def/defrReader.cpp	/^defrSetTechnologyCbk(defrStringCbkFnType f)$/;"	f
defrSetTimingDisableCbk	cdef/xdefrReader.cpp	/^void defrSetTimingDisableCbk (::defrTimingDisableCbkFnType p0) {$/;"	f
defrSetTimingDisableCbk	def/defrReader.cpp	/^defrSetTimingDisableCbk(defrTimingDisableCbkFnType f)$/;"	f
defrSetTimingDisablesEndCbk	cdef/xdefrReader.cpp	/^void defrSetTimingDisablesEndCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetTimingDisablesEndCbk	def/defrReader.cpp	/^defrSetTimingDisablesEndCbk(defrVoidCbkFnType f)$/;"	f
defrSetTimingDisablesStartCbk	cdef/xdefrReader.cpp	/^void defrSetTimingDisablesStartCbk (::defrIntegerCbkFnType p0) {$/;"	f
defrSetTimingDisablesStartCbk	def/defrReader.cpp	/^defrSetTimingDisablesStartCbk(defrIntegerCbkFnType f)$/;"	f
defrSetTotalMsgLimit	cdef/xdefrReader.cpp	/^void defrSetTotalMsgLimit (int  totNumMsgs) {$/;"	f
defrSetTotalMsgLimit	def/defrReader.cpp	/^defrSetTotalMsgLimit(int totNumMsgs)$/;"	f
defrSetTrackCbk	cdef/xdefrReader.cpp	/^void defrSetTrackCbk (::defrTrackCbkFnType p0) {$/;"	f
defrSetTrackCbk	def/defrReader.cpp	/^defrSetTrackCbk(defrTrackCbkFnType f)$/;"	f
defrSetTrackWarnings	cdef/xdefrReader.cpp	/^void defrSetTrackWarnings (int  warn) {$/;"	f
defrSetTrackWarnings	def/defrReader.cpp	/^defrSetTrackWarnings(int warn)$/;"	f
defrSetUnitsCbk	cdef/xdefrReader.cpp	/^void defrSetUnitsCbk (::defrDoubleCbkFnType p0) {$/;"	f
defrSetUnitsCbk	def/defrReader.cpp	/^defrSetUnitsCbk(defrDoubleCbkFnType f)$/;"	f
defrSetUnitsWarnings	cdef/xdefrReader.cpp	/^void defrSetUnitsWarnings (int  warn) {$/;"	f
defrSetUnitsWarnings	def/defrReader.cpp	/^defrSetUnitsWarnings(int warn)$/;"	f
defrSetUnusedCallbacks	cdef/xdefrReader.cpp	/^void defrSetUnusedCallbacks (::defrVoidCbkFnType  func) {$/;"	f
defrSetUnusedCallbacks	def/defrReader.cpp	/^defrSetUnusedCallbacks(defrVoidCbkFnType f)$/;"	f
defrSetUserData	cdef/xdefrReader.cpp	/^void defrSetUserData (defiUserData p0) {$/;"	f
defrSetUserData	def/defrReader.cpp	/^defrSetUserData(defiUserData ud)$/;"	f
defrSetVersionCbk	cdef/xdefrReader.cpp	/^void defrSetVersionCbk (::defrDoubleCbkFnType p0) {$/;"	f
defrSetVersionCbk	def/defrReader.cpp	/^defrSetVersionCbk(defrDoubleCbkFnType f)$/;"	f
defrSetVersionStrCbk	cdef/xdefrReader.cpp	/^void defrSetVersionStrCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetVersionStrCbk	def/defrReader.cpp	/^defrSetVersionStrCbk(defrStringCbkFnType f)$/;"	f
defrSetVersionWarnings	cdef/xdefrReader.cpp	/^void defrSetVersionWarnings (int  warn) {$/;"	f
defrSetVersionWarnings	def/defrReader.cpp	/^defrSetVersionWarnings(int warn)$/;"	f
defrSetViaCbk	cdef/xdefrReader.cpp	/^void defrSetViaCbk (::defrViaCbkFnType p0) {$/;"	f
defrSetViaCbk	def/defrReader.cpp	/^defrSetViaCbk(defrViaCbkFnType f)$/;"	f
defrSetViaEndCbk	cdef/xdefrReader.cpp	/^void defrSetViaEndCbk (::defrVoidCbkFnType p0) {$/;"	f
defrSetViaEndCbk	def/defrReader.cpp	/^defrSetViaEndCbk(defrVoidCbkFnType f)$/;"	f
defrSetViaExtCbk	cdef/xdefrReader.cpp	/^void defrSetViaExtCbk (::defrStringCbkFnType p0) {$/;"	f
defrSetViaExtCbk	def/defrReader.cpp	/^defrSetViaExtCbk(defrStringCbkFnType f)$/;"	f
defrSetViaStartCbk	cdef/xdefrReader.cpp	/^void defrSetViaStartCbk (::defrIntegerCbkFnType p0) {$/;"	f
defrSetViaStartCbk	def/defrReader.cpp	/^defrSetViaStartCbk(defrIntegerCbkFnType f)$/;"	f
defrSetViaWarnings	cdef/xdefrReader.cpp	/^void defrSetViaWarnings (int  warn) {$/;"	f
defrSetViaWarnings	def/defrReader.cpp	/^defrSetViaWarnings(int warn)$/;"	f
defrSetWarningLogFunction	cdef/xdefrReader.cpp	/^void defrSetWarningLogFunction (::DEFI_WARNING_LOG_FUNCTION p0) {$/;"	f
defrSetWarningLogFunction	def/defrReader.cpp	/^defrSetWarningLogFunction(DEFI_WARNING_LOG_FUNCTION f)$/;"	f
defrSettings	def/defrSettings.cpp	/^defrSettings::defrSettings()$/;"	f	class:defrSettings
defrSettings	def/defrSettings.hpp	/^class defrSettings {$/;"	c
defrSettings	include/defrSettings.hpp	/^class defrSettings {$/;"	c
defrSettings_h	def/defrSettings.hpp	31;"	d
defrSettings_h	include/defrSettings.hpp	31;"	d
defrSiteCbkFnType	cdef/defrReader.h	/^typedef int (*defrSiteCbkFnType) (defrCallbackType_e, defiSite *site, defiUserData);$/;"	t
defrSiteCbkFnType	def/defrReader.hpp	/^typedef int (*defrSiteCbkFnType) (defrCallbackType_e, defiSite *site, defiUserData);$/;"	t
defrSiteCbkFnType	include/defrReader.h	/^typedef int (*defrSiteCbkFnType) (defrCallbackType_e, defiSite *site, defiUserData);$/;"	t
defrSiteCbkFnType	include/defrReader.hpp	/^typedef int (*defrSiteCbkFnType) (defrCallbackType_e, defiSite *site, defiUserData);$/;"	t
defrSiteCbkType	cdef/defrReader.h	/^  defrSiteCbkType = 11,$/;"	e	enum:__anon14
defrSiteCbkType	def/defrReader.hpp	/^  defrSiteCbkType,$/;"	e	enum:__anon10
defrSiteCbkType	include/defrReader.h	/^  defrSiteCbkType = 11,$/;"	e	enum:__anon7
defrSiteCbkType	include/defrReader.hpp	/^  defrSiteCbkType,$/;"	e	enum:__anon3
defrSlotCbkFnType	cdef/defrReader.h	/^typedef int (*defrSlotCbkFnType) (defrCallbackType_e, defiSlot *, defiUserData);$/;"	t
defrSlotCbkFnType	def/defrReader.hpp	/^typedef int (*defrSlotCbkFnType) (defrCallbackType_e, defiSlot *, defiUserData);$/;"	t
defrSlotCbkFnType	include/defrReader.h	/^typedef int (*defrSlotCbkFnType) (defrCallbackType_e, defiSlot *, defiUserData);$/;"	t
defrSlotCbkFnType	include/defrReader.hpp	/^typedef int (*defrSlotCbkFnType) (defrCallbackType_e, defiSlot *, defiUserData);$/;"	t
defrSlotCbkType	cdef/defrReader.h	/^  defrSlotCbkType = 89,$/;"	e	enum:__anon14
defrSlotCbkType	def/defrReader.hpp	/^  defrSlotCbkType,$/;"	e	enum:__anon10
defrSlotCbkType	include/defrReader.h	/^  defrSlotCbkType = 89,$/;"	e	enum:__anon7
defrSlotCbkType	include/defrReader.hpp	/^  defrSlotCbkType,$/;"	e	enum:__anon3
defrSlotEndCbkType	cdef/defrReader.h	/^  defrSlotEndCbkType = 90,$/;"	e	enum:__anon14
defrSlotEndCbkType	def/defrReader.hpp	/^  defrSlotEndCbkType,$/;"	e	enum:__anon10
defrSlotEndCbkType	include/defrReader.h	/^  defrSlotEndCbkType = 90,$/;"	e	enum:__anon7
defrSlotEndCbkType	include/defrReader.hpp	/^  defrSlotEndCbkType,$/;"	e	enum:__anon3
defrSlotStartCbkType	cdef/defrReader.h	/^  defrSlotStartCbkType = 88,$/;"	e	enum:__anon14
defrSlotStartCbkType	def/defrReader.hpp	/^  defrSlotStartCbkType,$/;"	e	enum:__anon10
defrSlotStartCbkType	include/defrReader.h	/^  defrSlotStartCbkType = 88,$/;"	e	enum:__anon7
defrSlotStartCbkType	include/defrReader.hpp	/^  defrSlotStartCbkType,$/;"	e	enum:__anon3
defrStartPinsCbkType	cdef/defrReader.h	/^  defrStartPinsCbkType = 39,$/;"	e	enum:__anon14
defrStartPinsCbkType	def/defrReader.hpp	/^  defrStartPinsCbkType,$/;"	e	enum:__anon10
defrStartPinsCbkType	include/defrReader.h	/^  defrStartPinsCbkType = 39,$/;"	e	enum:__anon7
defrStartPinsCbkType	include/defrReader.hpp	/^  defrStartPinsCbkType,$/;"	e	enum:__anon3
defrStringCbkFnType	cdef/defrReader.h	/^typedef int (*defrStringCbkFnType) (defrCallbackType_e, const char *string, defiUserData);$/;"	t
defrStringCbkFnType	def/defrReader.hpp	/^typedef int (*defrStringCbkFnType) (defrCallbackType_e, const char *string, defiUserData);$/;"	t
defrStringCbkFnType	include/defrReader.h	/^typedef int (*defrStringCbkFnType) (defrCallbackType_e, const char *string, defiUserData);$/;"	t
defrStringCbkFnType	include/defrReader.hpp	/^typedef int (*defrStringCbkFnType) (defrCallbackType_e, const char *string, defiUserData);$/;"	t
defrStylesCbkFnType	cdef/defrReader.h	/^typedef int (*defrStylesCbkFnType) (defrCallbackType_e, defiStyles *, defiUserData);$/;"	t
defrStylesCbkFnType	def/defrReader.hpp	/^typedef int (*defrStylesCbkFnType) (defrCallbackType_e, defiStyles *, defiUserData);$/;"	t
defrStylesCbkFnType	include/defrReader.h	/^typedef int (*defrStylesCbkFnType) (defrCallbackType_e, defiStyles *, defiUserData);$/;"	t
defrStylesCbkFnType	include/defrReader.hpp	/^typedef int (*defrStylesCbkFnType) (defrCallbackType_e, defiStyles *, defiUserData);$/;"	t
defrStylesCbkType	cdef/defrReader.h	/^  defrStylesCbkType = 99,$/;"	e	enum:__anon14
defrStylesCbkType	def/defrReader.hpp	/^  defrStylesCbkType,$/;"	e	enum:__anon10
defrStylesCbkType	include/defrReader.h	/^  defrStylesCbkType = 99,$/;"	e	enum:__anon7
defrStylesCbkType	include/defrReader.hpp	/^  defrStylesCbkType,$/;"	e	enum:__anon3
defrStylesEndCbkType	cdef/defrReader.h	/^  defrStylesEndCbkType = 100,$/;"	e	enum:__anon14
defrStylesEndCbkType	def/defrReader.hpp	/^  defrStylesEndCbkType,$/;"	e	enum:__anon10
defrStylesEndCbkType	include/defrReader.h	/^  defrStylesEndCbkType = 100,$/;"	e	enum:__anon7
defrStylesEndCbkType	include/defrReader.hpp	/^  defrStylesEndCbkType,$/;"	e	enum:__anon3
defrStylesStartCbkType	cdef/defrReader.h	/^  defrStylesStartCbkType = 98,$/;"	e	enum:__anon14
defrStylesStartCbkType	def/defrReader.hpp	/^  defrStylesStartCbkType,$/;"	e	enum:__anon10
defrStylesStartCbkType	include/defrReader.h	/^  defrStylesStartCbkType = 98,$/;"	e	enum:__anon7
defrStylesStartCbkType	include/defrReader.hpp	/^  defrStylesStartCbkType,$/;"	e	enum:__anon3
defrTechNameCbkType	cdef/defrReader.h	/^  defrTechNameCbkType = 2,$/;"	e	enum:__anon14
defrTechNameCbkType	def/defrReader.hpp	/^  defrTechNameCbkType,$/;"	e	enum:__anon10
defrTechNameCbkType	include/defrReader.h	/^  defrTechNameCbkType = 2,$/;"	e	enum:__anon7
defrTechNameCbkType	include/defrReader.hpp	/^  defrTechNameCbkType,$/;"	e	enum:__anon3
defrTimingDisableCbkFnType	cdef/defrReader.h	/^typedef int (*defrTimingDisableCbkFnType) (defrCallbackType_e, defiTimingDisable *, defiUserData);$/;"	t
defrTimingDisableCbkFnType	def/defrReader.hpp	/^typedef int (*defrTimingDisableCbkFnType) (defrCallbackType_e, defiTimingDisable *, defiUserData);$/;"	t
defrTimingDisableCbkFnType	include/defrReader.h	/^typedef int (*defrTimingDisableCbkFnType) (defrCallbackType_e, defiTimingDisable *, defiUserData);$/;"	t
defrTimingDisableCbkFnType	include/defrReader.hpp	/^typedef int (*defrTimingDisableCbkFnType) (defrCallbackType_e, defiTimingDisable *, defiUserData);$/;"	t
defrTimingDisableCbkType	cdef/defrReader.h	/^  defrTimingDisableCbkType = 77,$/;"	e	enum:__anon14
defrTimingDisableCbkType	def/defrReader.hpp	/^  defrTimingDisableCbkType,$/;"	e	enum:__anon10
defrTimingDisableCbkType	include/defrReader.h	/^  defrTimingDisableCbkType = 77,$/;"	e	enum:__anon7
defrTimingDisableCbkType	include/defrReader.hpp	/^  defrTimingDisableCbkType,$/;"	e	enum:__anon3
defrTimingDisablesEndCbkType	cdef/defrReader.h	/^  defrTimingDisablesEndCbkType = 78,$/;"	e	enum:__anon14
defrTimingDisablesEndCbkType	def/defrReader.hpp	/^  defrTimingDisablesEndCbkType,$/;"	e	enum:__anon10
defrTimingDisablesEndCbkType	include/defrReader.h	/^  defrTimingDisablesEndCbkType = 78,$/;"	e	enum:__anon7
defrTimingDisablesEndCbkType	include/defrReader.hpp	/^  defrTimingDisablesEndCbkType,$/;"	e	enum:__anon3
defrTimingDisablesStartCbkType	cdef/defrReader.h	/^  defrTimingDisablesStartCbkType = 76,$/;"	e	enum:__anon14
defrTimingDisablesStartCbkType	def/defrReader.hpp	/^  defrTimingDisablesStartCbkType,$/;"	e	enum:__anon10
defrTimingDisablesStartCbkType	include/defrReader.h	/^  defrTimingDisablesStartCbkType = 76,$/;"	e	enum:__anon7
defrTimingDisablesStartCbkType	include/defrReader.hpp	/^  defrTimingDisablesStartCbkType,$/;"	e	enum:__anon3
defrTrackCbkFnType	cdef/defrReader.h	/^typedef int (*defrTrackCbkFnType) (defrCallbackType_e, defiTrack *track, defiUserData);$/;"	t
defrTrackCbkFnType	def/defrReader.hpp	/^typedef int (*defrTrackCbkFnType) (defrCallbackType_e, defiTrack *track, defiUserData);$/;"	t
defrTrackCbkFnType	include/defrReader.h	/^typedef int (*defrTrackCbkFnType) (defrCallbackType_e, defiTrack *track, defiUserData);$/;"	t
defrTrackCbkFnType	include/defrReader.hpp	/^typedef int (*defrTrackCbkFnType) (defrCallbackType_e, defiTrack *track, defiUserData);$/;"	t
defrTrackCbkType	cdef/defrReader.h	/^  defrTrackCbkType = 43,$/;"	e	enum:__anon14
defrTrackCbkType	def/defrReader.hpp	/^  defrTrackCbkType,$/;"	e	enum:__anon10
defrTrackCbkType	include/defrReader.h	/^  defrTrackCbkType = 43,$/;"	e	enum:__anon7
defrTrackCbkType	include/defrReader.hpp	/^  defrTrackCbkType,$/;"	e	enum:__anon3
defrUnitsCbkType	cdef/defrReader.h	/^  defrUnitsCbkType = 8,$/;"	e	enum:__anon14
defrUnitsCbkType	def/defrReader.hpp	/^  defrUnitsCbkType,$/;"	e	enum:__anon10
defrUnitsCbkType	include/defrReader.h	/^  defrUnitsCbkType = 8,$/;"	e	enum:__anon7
defrUnitsCbkType	include/defrReader.hpp	/^  defrUnitsCbkType,$/;"	e	enum:__anon3
defrUnsetArrayNameCbk	cdef/xdefrReader.cpp	/^void defrUnsetArrayNameCbk () {$/;"	f
defrUnsetArrayNameCbk	def/defrReader.cpp	/^defrUnsetArrayNameCbk()$/;"	f
defrUnsetAssertionCbk	cdef/xdefrReader.cpp	/^void defrUnsetAssertionCbk () {$/;"	f
defrUnsetAssertionCbk	def/defrReader.cpp	/^defrUnsetAssertionCbk()$/;"	f
defrUnsetAssertionsEndCbk	cdef/xdefrReader.cpp	/^void defrUnsetAssertionsEndCbk () {$/;"	f
defrUnsetAssertionsEndCbk	def/defrReader.cpp	/^defrUnsetAssertionsEndCbk()$/;"	f
defrUnsetAssertionsStartCbk	cdef/xdefrReader.cpp	/^void defrUnsetAssertionsStartCbk () {$/;"	f
defrUnsetAssertionsStartCbk	def/defrReader.cpp	/^defrUnsetAssertionsStartCbk()$/;"	f
defrUnsetBlockageCbk	cdef/xdefrReader.cpp	/^void defrUnsetBlockageCbk () {$/;"	f
defrUnsetBlockageCbk	def/defrReader.cpp	/^defrUnsetBlockageCbk()$/;"	f
defrUnsetBlockageEndCbk	cdef/xdefrReader.cpp	/^void defrUnsetBlockageEndCbk () {$/;"	f
defrUnsetBlockageEndCbk	def/defrReader.cpp	/^defrUnsetBlockageEndCbk()$/;"	f
defrUnsetBlockageStartCbk	cdef/xdefrReader.cpp	/^void defrUnsetBlockageStartCbk () {$/;"	f
defrUnsetBlockageStartCbk	def/defrReader.cpp	/^defrUnsetBlockageStartCbk()$/;"	f
defrUnsetBusBitCbk	cdef/xdefrReader.cpp	/^void defrUnsetBusBitCbk () {$/;"	f
defrUnsetBusBitCbk	def/defrReader.cpp	/^defrUnsetBusBitCbk()$/;"	f
defrUnsetCallbacks	cdef/xdefrReader.cpp	/^void defrUnsetCallbacks () {$/;"	f
defrUnsetCallbacks	def/defrReader.cpp	/^defrUnsetCallbacks()$/;"	f
defrUnsetCannotOccupyCbk	cdef/xdefrReader.cpp	/^void defrUnsetCannotOccupyCbk () {$/;"	f
defrUnsetCannotOccupyCbk	def/defrReader.cpp	/^defrUnsetCannotOccupyCbk()$/;"	f
defrUnsetCanplaceCbk	cdef/xdefrReader.cpp	/^void defrUnsetCanplaceCbk () {$/;"	f
defrUnsetCanplaceCbk	def/defrReader.cpp	/^defrUnsetCanplaceCbk()$/;"	f
defrUnsetCaseSensitiveCbk	cdef/xdefrReader.cpp	/^void defrUnsetCaseSensitiveCbk () {$/;"	f
defrUnsetCaseSensitiveCbk	def/defrReader.cpp	/^defrUnsetCaseSensitiveCbk()$/;"	f
defrUnsetComponentCbk	cdef/xdefrReader.cpp	/^void defrUnsetComponentCbk () {$/;"	f
defrUnsetComponentCbk	def/defrReader.cpp	/^defrUnsetComponentCbk()$/;"	f
defrUnsetComponentEndCbk	cdef/xdefrReader.cpp	/^void defrUnsetComponentEndCbk () {$/;"	f
defrUnsetComponentEndCbk	def/defrReader.cpp	/^defrUnsetComponentEndCbk()$/;"	f
defrUnsetComponentExtCbk	cdef/xdefrReader.cpp	/^void defrUnsetComponentExtCbk () {$/;"	f
defrUnsetComponentExtCbk	def/defrReader.cpp	/^defrUnsetComponentExtCbk()$/;"	f
defrUnsetComponentMaskShiftLayerCbk	cdef/xdefrReader.cpp	/^void defrUnsetComponentMaskShiftLayerCbk () {$/;"	f
defrUnsetComponentMaskShiftLayerCbk	def/defrReader.cpp	/^defrUnsetComponentMaskShiftLayerCbk()$/;"	f
defrUnsetComponentStartCbk	cdef/xdefrReader.cpp	/^void defrUnsetComponentStartCbk () {$/;"	f
defrUnsetComponentStartCbk	def/defrReader.cpp	/^defrUnsetComponentStartCbk()$/;"	f
defrUnsetConstraintCbk	cdef/xdefrReader.cpp	/^void defrUnsetConstraintCbk () {$/;"	f
defrUnsetConstraintCbk	def/defrReader.cpp	/^defrUnsetConstraintCbk()$/;"	f
defrUnsetConstraintsEndCbk	cdef/xdefrReader.cpp	/^void defrUnsetConstraintsEndCbk () {$/;"	f
defrUnsetConstraintsEndCbk	def/defrReader.cpp	/^defrUnsetConstraintsEndCbk()$/;"	f
defrUnsetConstraintsStartCbk	cdef/xdefrReader.cpp	/^void defrUnsetConstraintsStartCbk () {$/;"	f
defrUnsetConstraintsStartCbk	def/defrReader.cpp	/^defrUnsetConstraintsStartCbk()$/;"	f
defrUnsetDefaultCapCbk	cdef/xdefrReader.cpp	/^void defrUnsetDefaultCapCbk () {$/;"	f
defrUnsetDefaultCapCbk	def/defrReader.cpp	/^defrUnsetDefaultCapCbk()$/;"	f
defrUnsetDesignCbk	cdef/xdefrReader.cpp	/^void defrUnsetDesignCbk () {$/;"	f
defrUnsetDesignCbk	def/defrReader.cpp	/^defrUnsetDesignCbk()$/;"	f
defrUnsetDesignEndCbk	cdef/xdefrReader.cpp	/^void defrUnsetDesignEndCbk () {$/;"	f
defrUnsetDesignEndCbk	def/defrReader.cpp	/^defrUnsetDesignEndCbk()$/;"	f
defrUnsetDieAreaCbk	cdef/xdefrReader.cpp	/^void defrUnsetDieAreaCbk () {$/;"	f
defrUnsetDieAreaCbk	def/defrReader.cpp	/^defrUnsetDieAreaCbk()$/;"	f
defrUnsetDividerCbk	cdef/xdefrReader.cpp	/^void defrUnsetDividerCbk () {$/;"	f
defrUnsetDividerCbk	def/defrReader.cpp	/^defrUnsetDividerCbk()$/;"	f
defrUnsetExtensionCbk	cdef/xdefrReader.cpp	/^void defrUnsetExtensionCbk () {$/;"	f
defrUnsetExtensionCbk	def/defrReader.cpp	/^defrUnsetExtensionCbk()$/;"	f
defrUnsetFPCCbk	cdef/xdefrReader.cpp	/^void defrUnsetFPCCbk () {$/;"	f
defrUnsetFPCCbk	def/defrReader.cpp	/^defrUnsetFPCCbk()$/;"	f
defrUnsetFPCEndCbk	cdef/xdefrReader.cpp	/^void defrUnsetFPCEndCbk () {$/;"	f
defrUnsetFPCEndCbk	def/defrReader.cpp	/^defrUnsetFPCEndCbk()$/;"	f
defrUnsetFPCStartCbk	cdef/xdefrReader.cpp	/^void defrUnsetFPCStartCbk () {$/;"	f
defrUnsetFPCStartCbk	def/defrReader.cpp	/^defrUnsetFPCStartCbk()$/;"	f
defrUnsetFillCbk	cdef/xdefrReader.cpp	/^void defrUnsetFillCbk () {$/;"	f
defrUnsetFillCbk	def/defrReader.cpp	/^defrUnsetFillCbk()$/;"	f
defrUnsetFillEndCbk	cdef/xdefrReader.cpp	/^void defrUnsetFillEndCbk () {$/;"	f
defrUnsetFillEndCbk	def/defrReader.cpp	/^defrUnsetFillEndCbk()$/;"	f
defrUnsetFillStartCbk	cdef/xdefrReader.cpp	/^void defrUnsetFillStartCbk () {$/;"	f
defrUnsetFillStartCbk	def/defrReader.cpp	/^defrUnsetFillStartCbk()$/;"	f
defrUnsetFloorPlanNameCbk	cdef/xdefrReader.cpp	/^void defrUnsetFloorPlanNameCbk () {$/;"	f
defrUnsetFloorPlanNameCbk	def/defrReader.cpp	/^defrUnsetFloorPlanNameCbk()$/;"	f
defrUnsetGcellGridCbk	cdef/xdefrReader.cpp	/^void defrUnsetGcellGridCbk () {$/;"	f
defrUnsetGcellGridCbk	def/defrReader.cpp	/^defrUnsetGcellGridCbk()$/;"	f
defrUnsetGroupCbk	cdef/xdefrReader.cpp	/^void defrUnsetGroupCbk () {$/;"	f
defrUnsetGroupCbk	def/defrReader.cpp	/^defrUnsetGroupCbk()$/;"	f
defrUnsetGroupExtCbk	cdef/xdefrReader.cpp	/^void defrUnsetGroupExtCbk () {$/;"	f
defrUnsetGroupExtCbk	def/defrReader.cpp	/^defrUnsetGroupExtCbk()$/;"	f
defrUnsetGroupMemberCbk	cdef/xdefrReader.cpp	/^void defrUnsetGroupMemberCbk () {$/;"	f
defrUnsetGroupMemberCbk	def/defrReader.cpp	/^defrUnsetGroupMemberCbk()$/;"	f
defrUnsetGroupNameCbk	cdef/xdefrReader.cpp	/^void defrUnsetGroupNameCbk () {$/;"	f
defrUnsetGroupNameCbk	def/defrReader.cpp	/^defrUnsetGroupNameCbk()$/;"	f
defrUnsetGroupsEndCbk	cdef/xdefrReader.cpp	/^void defrUnsetGroupsEndCbk () {$/;"	f
defrUnsetGroupsEndCbk	def/defrReader.cpp	/^defrUnsetGroupsEndCbk()$/;"	f
defrUnsetGroupsStartCbk	cdef/xdefrReader.cpp	/^void defrUnsetGroupsStartCbk () {$/;"	f
defrUnsetGroupsStartCbk	def/defrReader.cpp	/^defrUnsetGroupsStartCbk()$/;"	f
defrUnsetHistoryCbk	cdef/xdefrReader.cpp	/^void defrUnsetHistoryCbk () {$/;"	f
defrUnsetHistoryCbk	def/defrReader.cpp	/^defrUnsetHistoryCbk()$/;"	f
defrUnsetIOTimingCbk	cdef/xdefrReader.cpp	/^void defrUnsetIOTimingCbk () {$/;"	f
defrUnsetIOTimingCbk	def/defrReader.cpp	/^defrUnsetIOTimingCbk()$/;"	f
defrUnsetIOTimingsEndCbk	cdef/xdefrReader.cpp	/^void defrUnsetIOTimingsEndCbk () {$/;"	f
defrUnsetIOTimingsEndCbk	def/defrReader.cpp	/^defrUnsetIOTimingsEndCbk()$/;"	f
defrUnsetIOTimingsExtCbk	cdef/xdefrReader.cpp	/^void defrUnsetIOTimingsExtCbk () {$/;"	f
defrUnsetIOTimingsExtCbk	def/defrReader.cpp	/^defrUnsetIOTimingsExtCbk()$/;"	f
defrUnsetIOTimingsStartCbk	cdef/xdefrReader.cpp	/^void defrUnsetIOTimingsStartCbk () {$/;"	f
defrUnsetIOTimingsStartCbk	def/defrReader.cpp	/^defrUnsetIOTimingsStartCbk()$/;"	f
defrUnsetNetCbk	cdef/xdefrReader.cpp	/^void defrUnsetNetCbk () {$/;"	f
defrUnsetNetCbk	def/defrReader.cpp	/^defrUnsetNetCbk()$/;"	f
defrUnsetNetConnectionExtCbk	cdef/xdefrReader.cpp	/^void defrUnsetNetConnectionExtCbk () {$/;"	f
defrUnsetNetConnectionExtCbk	def/defrReader.cpp	/^defrUnsetNetConnectionExtCbk()$/;"	f
defrUnsetNetEndCbk	cdef/xdefrReader.cpp	/^void defrUnsetNetEndCbk () {$/;"	f
defrUnsetNetEndCbk	def/defrReader.cpp	/^defrUnsetNetEndCbk()$/;"	f
defrUnsetNetExtCbk	cdef/xdefrReader.cpp	/^void defrUnsetNetExtCbk () {$/;"	f
defrUnsetNetExtCbk	def/defrReader.cpp	/^defrUnsetNetExtCbk()$/;"	f
defrUnsetNetNameCbk	cdef/xdefrReader.cpp	/^void defrUnsetNetNameCbk () {$/;"	f
defrUnsetNetNameCbk	def/defrReader.cpp	/^defrUnsetNetNameCbk()$/;"	f
defrUnsetNetNonDefaultRuleCbk	cdef/xdefrReader.cpp	/^void defrUnsetNetNonDefaultRuleCbk () {$/;"	f
defrUnsetNetNonDefaultRuleCbk	def/defrReader.cpp	/^defrUnsetNetNonDefaultRuleCbk()$/;"	f
defrUnsetNetPartialPathCbk	cdef/xdefrReader.cpp	/^void defrUnsetNetPartialPathCbk () {$/;"	f
defrUnsetNetPartialPathCbk	def/defrReader.cpp	/^defrUnsetNetPartialPathCbk()$/;"	f
defrUnsetNetStartCbk	cdef/xdefrReader.cpp	/^void defrUnsetNetStartCbk () {$/;"	f
defrUnsetNetStartCbk	def/defrReader.cpp	/^defrUnsetNetStartCbk()$/;"	f
defrUnsetNetSubnetNameCbk	cdef/xdefrReader.cpp	/^void defrUnsetNetSubnetNameCbk () {$/;"	f
defrUnsetNetSubnetNameCbk	def/defrReader.cpp	/^defrUnsetNetSubnetNameCbk()$/;"	f
defrUnsetNonDefaultCbk	cdef/xdefrReader.cpp	/^void defrUnsetNonDefaultCbk () {$/;"	f
defrUnsetNonDefaultCbk	def/defrReader.cpp	/^defrUnsetNonDefaultCbk()$/;"	f
defrUnsetNonDefaultEndCbk	cdef/xdefrReader.cpp	/^void defrUnsetNonDefaultEndCbk () {$/;"	f
defrUnsetNonDefaultEndCbk	def/defrReader.cpp	/^defrUnsetNonDefaultEndCbk()$/;"	f
defrUnsetNonDefaultStartCbk	cdef/xdefrReader.cpp	/^void defrUnsetNonDefaultStartCbk () {$/;"	f
defrUnsetNonDefaultStartCbk	def/defrReader.cpp	/^defrUnsetNonDefaultStartCbk()$/;"	f
defrUnsetOpenLogFileAppend	cdef/xdefrReader.cpp	/^void defrUnsetOpenLogFileAppend () {$/;"	f
defrUnsetOpenLogFileAppend	def/defrReader.cpp	/^defrUnsetOpenLogFileAppend()$/;"	f
defrUnsetPartitionCbk	cdef/xdefrReader.cpp	/^void defrUnsetPartitionCbk () {$/;"	f
defrUnsetPartitionCbk	def/defrReader.cpp	/^defrUnsetPartitionCbk()$/;"	f
defrUnsetPartitionsEndCbk	cdef/xdefrReader.cpp	/^void defrUnsetPartitionsEndCbk () {$/;"	f
defrUnsetPartitionsEndCbk	def/defrReader.cpp	/^defrUnsetPartitionsEndCbk()$/;"	f
defrUnsetPartitionsExtCbk	cdef/xdefrReader.cpp	/^void defrUnsetPartitionsExtCbk () {$/;"	f
defrUnsetPartitionsExtCbk	def/defrReader.cpp	/^defrUnsetPartitionsExtCbk()$/;"	f
defrUnsetPartitionsStartCbk	cdef/xdefrReader.cpp	/^void defrUnsetPartitionsStartCbk () {$/;"	f
defrUnsetPartitionsStartCbk	def/defrReader.cpp	/^defrUnsetPartitionsStartCbk()$/;"	f
defrUnsetPathCbk	cdef/xdefrReader.cpp	/^void defrUnsetPathCbk () {$/;"	f
defrUnsetPathCbk	def/defrReader.cpp	/^defrUnsetPathCbk()$/;"	f
defrUnsetPinCapCbk	cdef/xdefrReader.cpp	/^void defrUnsetPinCapCbk () {$/;"	f
defrUnsetPinCapCbk	def/defrReader.cpp	/^defrUnsetPinCapCbk()$/;"	f
defrUnsetPinCbk	cdef/xdefrReader.cpp	/^void defrUnsetPinCbk () {$/;"	f
defrUnsetPinCbk	def/defrReader.cpp	/^defrUnsetPinCbk()$/;"	f
defrUnsetPinEndCbk	cdef/xdefrReader.cpp	/^void defrUnsetPinEndCbk () {$/;"	f
defrUnsetPinEndCbk	def/defrReader.cpp	/^defrUnsetPinEndCbk()$/;"	f
defrUnsetPinExtCbk	cdef/xdefrReader.cpp	/^void defrUnsetPinExtCbk () {$/;"	f
defrUnsetPinExtCbk	def/defrReader.cpp	/^defrUnsetPinExtCbk()$/;"	f
defrUnsetPinPropCbk	cdef/xdefrReader.cpp	/^void defrUnsetPinPropCbk () {$/;"	f
defrUnsetPinPropCbk	def/defrReader.cpp	/^defrUnsetPinPropCbk()$/;"	f
defrUnsetPinPropEndCbk	cdef/xdefrReader.cpp	/^void defrUnsetPinPropEndCbk () {$/;"	f
defrUnsetPinPropEndCbk	def/defrReader.cpp	/^defrUnsetPinPropEndCbk()$/;"	f
defrUnsetPinPropStartCbk	cdef/xdefrReader.cpp	/^void defrUnsetPinPropStartCbk () {$/;"	f
defrUnsetPinPropStartCbk	def/defrReader.cpp	/^defrUnsetPinPropStartCbk()$/;"	f
defrUnsetPropCbk	cdef/xdefrReader.cpp	/^void defrUnsetPropCbk () {$/;"	f
defrUnsetPropCbk	def/defrReader.cpp	/^defrUnsetPropCbk()$/;"	f
defrUnsetPropDefEndCbk	cdef/xdefrReader.cpp	/^void defrUnsetPropDefEndCbk () {$/;"	f
defrUnsetPropDefEndCbk	def/defrReader.cpp	/^defrUnsetPropDefEndCbk()$/;"	f
defrUnsetPropDefStartCbk	cdef/xdefrReader.cpp	/^void defrUnsetPropDefStartCbk () {$/;"	f
defrUnsetPropDefStartCbk	def/defrReader.cpp	/^defrUnsetPropDefStartCbk()$/;"	f
defrUnsetReadFunction	cdef/xdefrReader.cpp	/^void defrUnsetReadFunction () {$/;"	f
defrUnsetReadFunction	def/defrReader.cpp	/^defrUnsetReadFunction()$/;"	f
defrUnsetRegionCbk	cdef/xdefrReader.cpp	/^void defrUnsetRegionCbk () {$/;"	f
defrUnsetRegionCbk	def/defrReader.cpp	/^defrUnsetRegionCbk()$/;"	f
defrUnsetRegionEndCbk	cdef/xdefrReader.cpp	/^void defrUnsetRegionEndCbk () {$/;"	f
defrUnsetRegionEndCbk	def/defrReader.cpp	/^defrUnsetRegionEndCbk()$/;"	f
defrUnsetRegionStartCbk	cdef/xdefrReader.cpp	/^void defrUnsetRegionStartCbk () {$/;"	f
defrUnsetRegionStartCbk	def/defrReader.cpp	/^defrUnsetRegionStartCbk()$/;"	f
defrUnsetRowCbk	cdef/xdefrReader.cpp	/^void defrUnsetRowCbk () {$/;"	f
defrUnsetRowCbk	def/defrReader.cpp	/^defrUnsetRowCbk()$/;"	f
defrUnsetSNetCbk	cdef/xdefrReader.cpp	/^void defrUnsetSNetCbk () {$/;"	f
defrUnsetSNetCbk	def/defrReader.cpp	/^defrUnsetSNetCbk()$/;"	f
defrUnsetSNetEndCbk	cdef/xdefrReader.cpp	/^void defrUnsetSNetEndCbk () {$/;"	f
defrUnsetSNetEndCbk	def/defrReader.cpp	/^defrUnsetSNetEndCbk()$/;"	f
defrUnsetSNetPartialPathCbk	cdef/xdefrReader.cpp	/^void defrUnsetSNetPartialPathCbk () {$/;"	f
defrUnsetSNetPartialPathCbk	def/defrReader.cpp	/^defrUnsetSNetPartialPathCbk()$/;"	f
defrUnsetSNetStartCbk	cdef/xdefrReader.cpp	/^void defrUnsetSNetStartCbk () {$/;"	f
defrUnsetSNetStartCbk	def/defrReader.cpp	/^defrUnsetSNetStartCbk()$/;"	f
defrUnsetSNetWireCbk	cdef/xdefrReader.cpp	/^void defrUnsetSNetWireCbk () {$/;"	f
defrUnsetSNetWireCbk	def/defrReader.cpp	/^defrUnsetSNetWireCbk()$/;"	f
defrUnsetScanChainExtCbk	cdef/xdefrReader.cpp	/^void defrUnsetScanChainExtCbk () {$/;"	f
defrUnsetScanChainExtCbk	def/defrReader.cpp	/^defrUnsetScanChainExtCbk()$/;"	f
defrUnsetScanchainCbk	cdef/xdefrReader.cpp	/^void defrUnsetScanchainCbk () {$/;"	f
defrUnsetScanchainCbk	def/defrReader.cpp	/^defrUnsetScanchainCbk()$/;"	f
defrUnsetScanchainsEndCbk	cdef/xdefrReader.cpp	/^void defrUnsetScanchainsEndCbk () {$/;"	f
defrUnsetScanchainsEndCbk	def/defrReader.cpp	/^defrUnsetScanchainsEndCbk()$/;"	f
defrUnsetScanchainsStartCbk	cdef/xdefrReader.cpp	/^void defrUnsetScanchainsStartCbk () {$/;"	f
defrUnsetScanchainsStartCbk	def/defrReader.cpp	/^defrUnsetScanchainsStartCbk()$/;"	f
defrUnsetSiteCbk	cdef/xdefrReader.cpp	/^void defrUnsetSiteCbk () {$/;"	f
defrUnsetSiteCbk	def/defrReader.cpp	/^defrUnsetSiteCbk()$/;"	f
defrUnsetSlotCbk	cdef/xdefrReader.cpp	/^void defrUnsetSlotCbk () {$/;"	f
defrUnsetSlotCbk	def/defrReader.cpp	/^defrUnsetSlotCbk()$/;"	f
defrUnsetSlotEndCbk	cdef/xdefrReader.cpp	/^void defrUnsetSlotEndCbk () {$/;"	f
defrUnsetSlotEndCbk	def/defrReader.cpp	/^defrUnsetSlotEndCbk()$/;"	f
defrUnsetSlotStartCbk	cdef/xdefrReader.cpp	/^void defrUnsetSlotStartCbk () {$/;"	f
defrUnsetSlotStartCbk	def/defrReader.cpp	/^defrUnsetSlotStartCbk()$/;"	f
defrUnsetStartPinsCbk	cdef/xdefrReader.cpp	/^void defrUnsetStartPinsCbk () {$/;"	f
defrUnsetStartPinsCbk	def/defrReader.cpp	/^defrUnsetStartPinsCbk()$/;"	f
defrUnsetStylesCbk	cdef/xdefrReader.cpp	/^void defrUnsetStylesCbk () {$/;"	f
defrUnsetStylesCbk	def/defrReader.cpp	/^defrUnsetStylesCbk()$/;"	f
defrUnsetStylesEndCbk	cdef/xdefrReader.cpp	/^void defrUnsetStylesEndCbk () {$/;"	f
defrUnsetStylesEndCbk	def/defrReader.cpp	/^defrUnsetStylesEndCbk()$/;"	f
defrUnsetStylesStartCbk	cdef/xdefrReader.cpp	/^void defrUnsetStylesStartCbk () {$/;"	f
defrUnsetStylesStartCbk	def/defrReader.cpp	/^defrUnsetStylesStartCbk()$/;"	f
defrUnsetTechnologyCbk	cdef/xdefrReader.cpp	/^void defrUnsetTechnologyCbk () {$/;"	f
defrUnsetTechnologyCbk	def/defrReader.cpp	/^defrUnsetTechnologyCbk()$/;"	f
defrUnsetTimingDisableCbk	cdef/xdefrReader.cpp	/^void defrUnsetTimingDisableCbk () {$/;"	f
defrUnsetTimingDisableCbk	def/defrReader.cpp	/^defrUnsetTimingDisableCbk()$/;"	f
defrUnsetTimingDisablesEndCbk	cdef/xdefrReader.cpp	/^void defrUnsetTimingDisablesEndCbk () {$/;"	f
defrUnsetTimingDisablesEndCbk	def/defrReader.cpp	/^defrUnsetTimingDisablesEndCbk()$/;"	f
defrUnsetTimingDisablesStartCbk	cdef/xdefrReader.cpp	/^void defrUnsetTimingDisablesStartCbk () {$/;"	f
defrUnsetTimingDisablesStartCbk	def/defrReader.cpp	/^defrUnsetTimingDisablesStartCbk()$/;"	f
defrUnsetTrackCbk	cdef/xdefrReader.cpp	/^void defrUnsetTrackCbk () {$/;"	f
defrUnsetTrackCbk	def/defrReader.cpp	/^defrUnsetTrackCbk()$/;"	f
defrUnsetUnitsCbk	cdef/xdefrReader.cpp	/^void defrUnsetUnitsCbk () {$/;"	f
defrUnsetUnitsCbk	def/defrReader.cpp	/^defrUnsetUnitsCbk()$/;"	f
defrUnsetVersionCbk	cdef/xdefrReader.cpp	/^void defrUnsetVersionCbk () {$/;"	f
defrUnsetVersionCbk	def/defrReader.cpp	/^defrUnsetVersionCbk()$/;"	f
defrUnsetVersionStrCbk	cdef/xdefrReader.cpp	/^void defrUnsetVersionStrCbk () {$/;"	f
defrUnsetVersionStrCbk	def/defrReader.cpp	/^defrUnsetVersionStrCbk()$/;"	f
defrUnsetViaCbk	cdef/xdefrReader.cpp	/^void defrUnsetViaCbk () {$/;"	f
defrUnsetViaCbk	def/defrReader.cpp	/^defrUnsetViaCbk()$/;"	f
defrUnsetViaEndCbk	cdef/xdefrReader.cpp	/^void defrUnsetViaEndCbk () {$/;"	f
defrUnsetViaEndCbk	def/defrReader.cpp	/^defrUnsetViaEndCbk()$/;"	f
defrUnsetViaExtCbk	cdef/xdefrReader.cpp	/^void defrUnsetViaExtCbk () {$/;"	f
defrUnsetViaExtCbk	def/defrReader.cpp	/^defrUnsetViaExtCbk()$/;"	f
defrUnsetViaStartCbk	cdef/xdefrReader.cpp	/^void defrUnsetViaStartCbk () {$/;"	f
defrUnsetViaStartCbk	def/defrReader.cpp	/^defrUnsetViaStartCbk()$/;"	f
defrUnspecifiedCbkType	cdef/defrReader.h	/^  defrUnspecifiedCbkType = 0,$/;"	e	enum:__anon14
defrUnspecifiedCbkType	def/defrReader.hpp	/^  defrUnspecifiedCbkType = 0,$/;"	e	enum:__anon10
defrUnspecifiedCbkType	include/defrReader.h	/^  defrUnspecifiedCbkType = 0,$/;"	e	enum:__anon7
defrUnspecifiedCbkType	include/defrReader.hpp	/^  defrUnspecifiedCbkType = 0,$/;"	e	enum:__anon3
defrVersionCbkType	cdef/defrReader.h	/^  defrVersionCbkType = 22,$/;"	e	enum:__anon14
defrVersionCbkType	def/defrReader.hpp	/^  defrVersionCbkType,$/;"	e	enum:__anon10
defrVersionCbkType	include/defrReader.h	/^  defrVersionCbkType = 22,$/;"	e	enum:__anon7
defrVersionCbkType	include/defrReader.hpp	/^  defrVersionCbkType,$/;"	e	enum:__anon3
defrVersionStrCbkType	cdef/defrReader.h	/^  defrVersionStrCbkType = 23,$/;"	e	enum:__anon14
defrVersionStrCbkType	def/defrReader.hpp	/^  defrVersionStrCbkType,$/;"	e	enum:__anon10
defrVersionStrCbkType	include/defrReader.h	/^  defrVersionStrCbkType = 23,$/;"	e	enum:__anon7
defrVersionStrCbkType	include/defrReader.hpp	/^  defrVersionStrCbkType,$/;"	e	enum:__anon3
defrViaCbkFnType	cdef/defrReader.h	/^typedef int (*defrViaCbkFnType) (defrCallbackType_e, defiVia *, defiUserData);$/;"	t
defrViaCbkFnType	def/defrReader.hpp	/^typedef int (*defrViaCbkFnType) (defrCallbackType_e, defiVia *, defiUserData);$/;"	t
defrViaCbkFnType	include/defrReader.h	/^typedef int (*defrViaCbkFnType) (defrCallbackType_e, defiVia *, defiUserData);$/;"	t
defrViaCbkFnType	include/defrReader.hpp	/^typedef int (*defrViaCbkFnType) (defrCallbackType_e, defiVia *, defiUserData);$/;"	t
defrViaCbkType	cdef/defrReader.h	/^  defrViaCbkType = 46,$/;"	e	enum:__anon14
defrViaCbkType	def/defrReader.hpp	/^  defrViaCbkType,$/;"	e	enum:__anon10
defrViaCbkType	include/defrReader.h	/^  defrViaCbkType = 46,$/;"	e	enum:__anon7
defrViaCbkType	include/defrReader.hpp	/^  defrViaCbkType,$/;"	e	enum:__anon3
defrViaEndCbkType	cdef/defrReader.h	/^  defrViaEndCbkType = 47,$/;"	e	enum:__anon14
defrViaEndCbkType	def/defrReader.hpp	/^  defrViaEndCbkType,$/;"	e	enum:__anon10
defrViaEndCbkType	include/defrReader.h	/^  defrViaEndCbkType = 47,$/;"	e	enum:__anon7
defrViaEndCbkType	include/defrReader.hpp	/^  defrViaEndCbkType,$/;"	e	enum:__anon3
defrViaExtCbkType	cdef/defrReader.h	/^  defrViaExtCbkType = 26,$/;"	e	enum:__anon14
defrViaExtCbkType	def/defrReader.hpp	/^  defrViaExtCbkType,$/;"	e	enum:__anon10
defrViaExtCbkType	include/defrReader.h	/^  defrViaExtCbkType = 26,$/;"	e	enum:__anon7
defrViaExtCbkType	include/defrReader.hpp	/^  defrViaExtCbkType,$/;"	e	enum:__anon3
defrViaStartCbkType	cdef/defrReader.h	/^  defrViaStartCbkType = 45,$/;"	e	enum:__anon14
defrViaStartCbkType	def/defrReader.hpp	/^  defrViaStartCbkType,$/;"	e	enum:__anon10
defrViaStartCbkType	include/defrReader.h	/^  defrViaStartCbkType = 45,$/;"	e	enum:__anon7
defrViaStartCbkType	include/defrReader.hpp	/^  defrViaStartCbkType,$/;"	e	enum:__anon3
defrVoidCbkFnType	cdef/defrReader.h	/^typedef int (*defrVoidCbkFnType) (defrCallbackType_e, void* v, defiUserData);$/;"	t
defrVoidCbkFnType	def/defrReader.hpp	/^typedef int (*defrVoidCbkFnType) (defrCallbackType_e, void* v, defiUserData);$/;"	t
defrVoidCbkFnType	include/defrReader.h	/^typedef int (*defrVoidCbkFnType) (defrCallbackType_e, void* v, defiUserData);$/;"	t
defrVoidCbkFnType	include/defrReader.hpp	/^typedef int (*defrVoidCbkFnType) (defrCallbackType_e, void* v, defiUserData);$/;"	t
defrect	def/defiDefs.hpp	/^struct defrect {$/;"	s
defrect	include/defiDefs.hpp	/^struct defrect {$/;"	s
deftoken	def/defiDefs.hpp	/^struct deftoken {$/;"	s
deftoken	def/defrData.hpp	/^    char*  deftoken; $/;"	m	class:defrData
deftoken	include/defiDefs.hpp	/^struct deftoken {$/;"	s
deftoken	include/defrData.hpp	/^    char*  deftoken; $/;"	m	class:defrData
deftokenLength	def/defrData.hpp	/^    int  deftokenLength;$/;"	m	class:defrData
deftokenLength	include/defrData.hpp	/^    int  deftokenLength;$/;"	m	class:defrData
defwAddComment	cdef/xdefwWriter.cpp	/^void defwAddComment (const char*  comment) {$/;"	f
defwAddComment	def/defwWriter.cpp	/^defwAddComment(const char *comment)$/;"	f
defwAddIndent	cdef/xdefwWriter.cpp	/^void defwAddIndent () {$/;"	f
defwAddIndent	def/defwWriter.cpp	/^defwAddIndent()$/;"	f
defwAddr	def/defwWriter.cpp	/^defwAddr(const char *x)$/;"	f
defwArray	cdef/xdefwWriter.cpp	/^int defwArray (const char*  array) {$/;"	f
defwArray	def/defwWriter.cpp	/^defwArray(const char *array)$/;"	f
defwArrayCbk	def/defwWriterCalls.cpp	66;"	d	file:
defwArrayCbkType	cdef/defwWriterCalls.h	/^  defwArrayCbkType = 7,$/;"	e	enum:__anon13
defwArrayCbkType	def/defwWriterCalls.hpp	/^  defwArrayCbkType,$/;"	e	enum:__anon11
defwArrayCbkType	include/defwWriterCalls.h	/^  defwArrayCbkType = 7,$/;"	e	enum:__anon4
defwArrayCbkType	include/defwWriterCalls.hpp	/^  defwArrayCbkType,$/;"	e	enum:__anon5
defwAssertionCbk	def/defwWriterCalls.cpp	88;"	d	file:
defwAssertionCbkType	cdef/defwWriterCalls.h	/^  defwAssertionCbkType = 29,$/;"	e	enum:__anon13
defwAssertionCbkType	def/defwWriterCalls.hpp	/^  defwAssertionCbkType,    \/\/ pre 5.2$/;"	e	enum:__anon11
defwAssertionCbkType	include/defwWriterCalls.h	/^  defwAssertionCbkType = 29,$/;"	e	enum:__anon4
defwAssertionCbkType	include/defwWriterCalls.hpp	/^  defwAssertionCbkType,    \/\/ pre 5.2$/;"	e	enum:__anon5
defwBeginextCreator	cdef/xdefwWriter.cpp	/^int defwBeginextCreator (const char*  creatorName) {$/;"	f
defwBeginextCreator	def/defwWriter.cpp	/^defwBeginextCreator(const char *creatorName)$/;"	f
defwBeginextDate	cdef/xdefwWriter.cpp	/^int defwBeginextDate () {$/;"	f
defwBeginextDate	def/defwWriter.cpp	/^defwBeginextDate()$/;"	f
defwBeginextRevision	cdef/xdefwWriter.cpp	/^int defwBeginextRevision (int  vers1, int  vers2) {$/;"	f
defwBeginextRevision	def/defwWriter.cpp	/^defwBeginextRevision(int    vers1,$/;"	f
defwBeginextSyntax	cdef/xdefwWriter.cpp	/^int defwBeginextSyntax (const char*  title, const char*  string) {$/;"	f
defwBeginextSyntax	def/defwWriter.cpp	/^defwBeginextSyntax(const char   *title,$/;"	f
defwBlockageCbk	def/defwWriterCalls.cpp	90;"	d	file:
defwBlockageCbkType	cdef/defwWriterCalls.h	/^  defwBlockageCbkType = 31,$/;"	e	enum:__anon13
defwBlockageCbkType	def/defwWriterCalls.hpp	/^  defwBlockageCbkType,     \/\/ 5.4$/;"	e	enum:__anon11
defwBlockageCbkType	include/defwWriterCalls.h	/^  defwBlockageCbkType = 31,$/;"	e	enum:__anon4
defwBlockageCbkType	include/defwWriterCalls.hpp	/^  defwBlockageCbkType,     \/\/ 5.4$/;"	e	enum:__anon5
defwBlockageDesignRuleWidth	cdef/xdefwWriter.cpp	/^int defwBlockageDesignRuleWidth (int  effectiveWidth) {$/;"	f
defwBlockageDesignRuleWidth	def/defwWriter.cpp	/^defwBlockageDesignRuleWidth(int effectiveWidth)$/;"	f
defwBlockageHasSD	def/defwWriter.cpp	/^static int defwBlockageHasSD = 0;\/\/ keep track only Spacing|Designrulewidth$/;"	v	file:
defwBlockageHasSF	def/defwWriter.cpp	/^static int defwBlockageHasSF = 0;\/\/ keep track only SLOTS|FILLS$/;"	v	file:
defwBlockageHasSP	def/defwWriter.cpp	/^static int defwBlockageHasSP = 0;\/\/ keep track only SOFT|PARTIAL$/;"	v	file:
defwBlockageLayer	cdef/xdefwWriter.cpp	/^int defwBlockageLayer (const char*  layerName, const char*  compName) {$/;"	f
defwBlockageLayer	def/defwWriter.cpp	/^defwBlockageLayer(const char    *layerName,$/;"	f
defwBlockageLayerExceptpgnet	cdef/xdefwWriter.cpp	/^int defwBlockageLayerExceptpgnet (const char*  layerName) {$/;"	f
defwBlockageLayerExceptpgnet	def/defwWriter.cpp	/^defwBlockageLayerExceptpgnet(const char *layerName)$/;"	f
defwBlockageLayerFills	cdef/xdefwWriter.cpp	/^int defwBlockageLayerFills (const char*  layerName) {$/;"	f
defwBlockageLayerFills	def/defwWriter.cpp	/^defwBlockageLayerFills(const char *layerName)$/;"	f
defwBlockageLayerPushdown	cdef/xdefwWriter.cpp	/^int defwBlockageLayerPushdown (const char*  layerName) {$/;"	f
defwBlockageLayerPushdown	def/defwWriter.cpp	/^defwBlockageLayerPushdown(const char *layerName)$/;"	f
defwBlockageLayerSlots	cdef/xdefwWriter.cpp	/^int defwBlockageLayerSlots (const char*  layerName) {$/;"	f
defwBlockageLayerSlots	def/defwWriter.cpp	/^defwBlockageLayerSlots(const char *layerName)$/;"	f
defwBlockageMask	cdef/xdefwWriter.cpp	/^int defwBlockageMask (int  maskColor) {$/;"	f
defwBlockageMask	def/defwWriter.cpp	/^defwBlockageMask(int colorMask)$/;"	f
defwBlockagePlacement	cdef/xdefwWriter.cpp	/^int defwBlockagePlacement () {$/;"	f
defwBlockagePlacement	def/defwWriter.cpp	/^defwBlockagePlacement()$/;"	f
defwBlockagePlacementComponent	cdef/xdefwWriter.cpp	/^int defwBlockagePlacementComponent (const char*  compName) {$/;"	f
defwBlockagePlacementComponent	def/defwWriter.cpp	/^defwBlockagePlacementComponent(const char *compName)$/;"	f
defwBlockagePlacementPartial	cdef/xdefwWriter.cpp	/^int defwBlockagePlacementPartial (double  maxDensity) {$/;"	f
defwBlockagePlacementPartial	def/defwWriter.cpp	/^defwBlockagePlacementPartial(double maxDensity)$/;"	f
defwBlockagePlacementPushdown	cdef/xdefwWriter.cpp	/^int defwBlockagePlacementPushdown () {$/;"	f
defwBlockagePlacementPushdown	def/defwWriter.cpp	/^defwBlockagePlacementPushdown()$/;"	f
defwBlockagePlacementSoft	cdef/xdefwWriter.cpp	/^int defwBlockagePlacementSoft () {$/;"	f
defwBlockagePlacementSoft	def/defwWriter.cpp	/^defwBlockagePlacementSoft()$/;"	f
defwBlockagePolygon	cdef/xdefwWriter.cpp	/^int defwBlockagePolygon (int  num_polys, int*  xl, int*  yl) {$/;"	f
defwBlockagePolygon	def/defwWriter.cpp	/^defwBlockagePolygon(int num_polys,$/;"	f
defwBlockageRect	cdef/xdefwWriter.cpp	/^int defwBlockageRect (int  xl, int  yl, int  xh, int  yh) {$/;"	f
defwBlockageRect	def/defwWriter.cpp	/^defwBlockageRect(int    xl,$/;"	f
defwBlockageSpacing	cdef/xdefwWriter.cpp	/^int defwBlockageSpacing (int  minSpacing) {$/;"	f
defwBlockageSpacing	def/defwWriter.cpp	/^defwBlockageSpacing(int minSpacing)$/;"	f
defwBlockagesLayer	cdef/xdefwWriter.cpp	/^int defwBlockagesLayer (const char*  layerName) {$/;"	f
defwBlockagesLayer	def/defwWriter.cpp	/^defwBlockagesLayer(const char *layerName)$/;"	f
defwBlockagesLayerComponent	cdef/xdefwWriter.cpp	/^int defwBlockagesLayerComponent (const char*  compName) {$/;"	f
defwBlockagesLayerComponent	def/defwWriter.cpp	/^defwBlockagesLayerComponent(const char *compName)$/;"	f
defwBlockagesLayerDesignRuleWidth	cdef/xdefwWriter.cpp	/^int defwBlockagesLayerDesignRuleWidth (int  effectiveWidth) {$/;"	f
defwBlockagesLayerDesignRuleWidth	def/defwWriter.cpp	/^defwBlockagesLayerDesignRuleWidth(int effectiveWidth)$/;"	f
defwBlockagesLayerExceptpgnet	cdef/xdefwWriter.cpp	/^int defwBlockagesLayerExceptpgnet () {$/;"	f
defwBlockagesLayerExceptpgnet	def/defwWriter.cpp	/^defwBlockagesLayerExceptpgnet()$/;"	f
defwBlockagesLayerFills	cdef/xdefwWriter.cpp	/^int defwBlockagesLayerFills () {$/;"	f
defwBlockagesLayerFills	def/defwWriter.cpp	/^defwBlockagesLayerFills()$/;"	f
defwBlockagesLayerMask	cdef/xdefwWriter.cpp	/^int defwBlockagesLayerMask (int  maskColor) {$/;"	f
defwBlockagesLayerMask	def/defwWriter.cpp	/^defwBlockagesLayerMask(int colorMask)$/;"	f
defwBlockagesLayerPushdown	cdef/xdefwWriter.cpp	/^int defwBlockagesLayerPushdown () {$/;"	f
defwBlockagesLayerPushdown	def/defwWriter.cpp	/^defwBlockagesLayerPushdown()$/;"	f
defwBlockagesLayerSlots	cdef/xdefwWriter.cpp	/^int defwBlockagesLayerSlots () {$/;"	f
defwBlockagesLayerSlots	def/defwWriter.cpp	/^defwBlockagesLayerSlots()$/;"	f
defwBlockagesLayerSpacing	cdef/xdefwWriter.cpp	/^int defwBlockagesLayerSpacing (int  minSpacing) {$/;"	f
defwBlockagesLayerSpacing	def/defwWriter.cpp	/^defwBlockagesLayerSpacing(int minSpacing)$/;"	f
defwBlockagesPlacement	cdef/xdefwWriter.cpp	/^int defwBlockagesPlacement () {$/;"	f
defwBlockagesPlacement	def/defwWriter.cpp	/^defwBlockagesPlacement()$/;"	f
defwBlockagesPlacementComponent	cdef/xdefwWriter.cpp	/^int defwBlockagesPlacementComponent (const char*  compName) {$/;"	f
defwBlockagesPlacementComponent	def/defwWriter.cpp	/^defwBlockagesPlacementComponent(const char *compName)$/;"	f
defwBlockagesPlacementPartial	cdef/xdefwWriter.cpp	/^int defwBlockagesPlacementPartial (double  maxDensity) {$/;"	f
defwBlockagesPlacementPartial	def/defwWriter.cpp	/^defwBlockagesPlacementPartial(double maxDensity)$/;"	f
defwBlockagesPlacementPushdown	cdef/xdefwWriter.cpp	/^int defwBlockagesPlacementPushdown () {$/;"	f
defwBlockagesPlacementPushdown	def/defwWriter.cpp	/^defwBlockagesPlacementPushdown()$/;"	f
defwBlockagesPlacementSoft	cdef/xdefwWriter.cpp	/^int defwBlockagesPlacementSoft () {$/;"	f
defwBlockagesPlacementSoft	def/defwWriter.cpp	/^defwBlockagesPlacementSoft()$/;"	f
defwBlockagesPolygon	cdef/xdefwWriter.cpp	/^int defwBlockagesPolygon (int  num_polys, int*  xl, int*  yl) {$/;"	f
defwBlockagesPolygon	def/defwWriter.cpp	/^defwBlockagesPolygon(int    num_polys,$/;"	f
defwBlockagesRect	cdef/xdefwWriter.cpp	/^int defwBlockagesRect (int  xl, int  yl, int  xh, int  yh) {$/;"	f
defwBlockagesRect	def/defwWriter.cpp	/^defwBlockagesRect(int   xl,$/;"	f
defwBusBitCbk	def/defwWriterCalls.cpp	63;"	d	file:
defwBusBitCbkType	cdef/defwWriterCalls.h	/^  defwBusBitCbkType = 3,$/;"	e	enum:__anon13
defwBusBitCbkType	def/defwWriterCalls.hpp	/^  defwBusBitCbkType,$/;"	e	enum:__anon11
defwBusBitCbkType	include/defwWriterCalls.h	/^  defwBusBitCbkType = 3,$/;"	e	enum:__anon4
defwBusBitCbkType	include/defwWriterCalls.hpp	/^  defwBusBitCbkType,$/;"	e	enum:__anon5
defwBusBitChars	cdef/xdefwWriter.cpp	/^int defwBusBitChars (const char*  busBitChars) {$/;"	f
defwBusBitChars	def/defwWriter.cpp	/^defwBusBitChars(const char *busBitChars)$/;"	f
defwCallbackType_e	cdef/defwWriterCalls.h	/^} defwCallbackType_e;$/;"	t	typeref:enum:__anon13
defwCallbackType_e	def/defwWriterCalls.hpp	/^} defwCallbackType_e;$/;"	t	typeref:enum:__anon11
defwCallbackType_e	include/defwWriterCalls.h	/^} defwCallbackType_e;$/;"	t	typeref:enum:__anon4
defwCallbackType_e	include/defwWriterCalls.hpp	/^} defwCallbackType_e;$/;"	t	typeref:enum:__anon5
defwCallbacksReq	def/defwWriterCalls.cpp	/^int defwCallbacksReq[MAXCBS][2] = {{0, 0},  \/\/ Version$/;"	v
defwCallbacksSeq	def/defwWriterCalls.cpp	/^defwVoidCbkFnType defwCallbacksSeq[MAXCBS] = {0,  \/\/ defwVersionCbk$/;"	v
defwCallbacksType	def/defwWriterCalls.cpp	/^defwCallbackType_e defwCallbacksType[MAXCBS] = {defwVersionCbkType,$/;"	v
defwCanPlace	cdef/xdefwWriter.cpp	/^int defwCanPlace (const char*  master, int  xOrig, int  yOrig, int  orient, int  doCnt, int  doInc, int  xStep, int  yStep) {$/;"	f
defwCanPlace	def/defwWriter.cpp	/^defwCanPlace(const char *master,$/;"	f
defwCanPlaceStr	cdef/xdefwWriter.cpp	/^int defwCanPlaceStr (const char*  master, int  xOrig, int  yOrig, const char*  orient, int  doCnt, int  doInc, int  xStep, int  yStep) {$/;"	f
defwCanPlaceStr	def/defwWriter.cpp	/^defwCanPlaceStr(const char  *master,$/;"	f
defwCannotOccupy	cdef/xdefwWriter.cpp	/^int defwCannotOccupy (const char*  master, int  xOrig, int  yOrig, int  orient, int  doCnt, int  doInc, int  xStep, int  yStep) {$/;"	f
defwCannotOccupy	def/defwWriter.cpp	/^defwCannotOccupy(const char *master,$/;"	f
defwCannotOccupyCbk	def/defwWriterCalls.cpp	77;"	d	file:
defwCannotOccupyCbkType	cdef/defwWriterCalls.h	/^  defwCannotOccupyCbkType = 18,$/;"	e	enum:__anon13
defwCannotOccupyCbkType	def/defwWriterCalls.hpp	/^  defwCannotOccupyCbkType,$/;"	e	enum:__anon11
defwCannotOccupyCbkType	include/defwWriterCalls.h	/^  defwCannotOccupyCbkType = 18,$/;"	e	enum:__anon4
defwCannotOccupyCbkType	include/defwWriterCalls.hpp	/^  defwCannotOccupyCbkType,$/;"	e	enum:__anon5
defwCannotOccupyStr	cdef/xdefwWriter.cpp	/^int defwCannotOccupyStr (const char*  master, int  xOrig, int  yOrig, const char*  orient, int  doCnt, int  doInc, int  xStep, int  yStep) {$/;"	f
defwCannotOccupyStr	def/defwWriter.cpp	/^defwCannotOccupyStr(const char  *master,$/;"	f
defwCanplaceCbk	def/defwWriterCalls.cpp	76;"	d	file:
defwCanplaceCbkType	cdef/defwWriterCalls.h	/^  defwCanplaceCbkType = 17,$/;"	e	enum:__anon13
defwCanplaceCbkType	def/defwWriterCalls.hpp	/^  defwCanplaceCbkType,$/;"	e	enum:__anon11
defwCanplaceCbkType	include/defwWriterCalls.h	/^  defwCanplaceCbkType = 17,$/;"	e	enum:__anon4
defwCanplaceCbkType	include/defwWriterCalls.hpp	/^  defwCanplaceCbkType,$/;"	e	enum:__anon5
defwCaseSensitive	cdef/xdefwWriter.cpp	/^int defwCaseSensitive (const char*  caseSensitive) {$/;"	f
defwCaseSensitive	def/defwWriter.cpp	/^defwCaseSensitive(const char *caseSensitive)$/;"	f
defwCaseSensitiveCbk	def/defwWriterCalls.cpp	61;"	d	file:
defwCaseSensitiveCbkType	cdef/defwWriterCalls.h	/^  defwCaseSensitiveCbkType = 2,$/;"	e	enum:__anon13
defwCaseSensitiveCbkType	def/defwWriterCalls.hpp	/^  defwCaseSensitiveCbkType,$/;"	e	enum:__anon11
defwCaseSensitiveCbkType	include/defwWriterCalls.h	/^  defwCaseSensitiveCbkType = 2,$/;"	e	enum:__anon4
defwCaseSensitiveCbkType	include/defwWriterCalls.hpp	/^  defwCaseSensitiveCbkType,$/;"	e	enum:__anon5
defwComponent	cdef/xdefwWriter.cpp	/^int defwComponent (const char*  instance, const char*  master, int    numNetName, const char**  netNames, const char*  eeq, const char*  genName, const char*  genParemeters, const char*  source, int  numForeign, const char**  foreigns, int*  foreignX, int*  foreignY, int*  foreignOrients, const char*  status, int  statusX, int  statusY, int  statusOrient, double  weight, const char*  region, int  xl, int  yl, int  xh, int  yh) {$/;"	f
defwComponent	def/defwWriter.cpp	/^defwComponent(const char    *instance,$/;"	f
defwComponentCbk	def/defwWriterCalls.cpp	80;"	d	file:
defwComponentCbkType	cdef/defwWriterCalls.h	/^  defwComponentCbkType = 21,$/;"	e	enum:__anon13
defwComponentCbkType	def/defwWriterCalls.hpp	/^  defwComponentCbkType,$/;"	e	enum:__anon11
defwComponentCbkType	include/defwWriterCalls.h	/^  defwComponentCbkType = 21,$/;"	e	enum:__anon4
defwComponentCbkType	include/defwWriterCalls.hpp	/^  defwComponentCbkType,$/;"	e	enum:__anon5
defwComponentHalo	cdef/xdefwWriter.cpp	/^int defwComponentHalo (int  left, int  bottom, int  right, int  top) {$/;"	f
defwComponentHalo	def/defwWriter.cpp	/^defwComponentHalo(int   left,$/;"	f
defwComponentHaloSoft	cdef/xdefwWriter.cpp	/^int defwComponentHaloSoft (int  left, int  bottom, int  right, int  top) {$/;"	f
defwComponentHaloSoft	def/defwWriter.cpp	/^defwComponentHaloSoft(int   left,$/;"	f
defwComponentMaskShift	cdef/xdefwWriter.cpp	/^int defwComponentMaskShift (int  shiftLayerMasks) {$/;"	f
defwComponentMaskShift	def/defwWriter.cpp	/^defwComponentMaskShift(int shiftLayerMasks)$/;"	f
defwComponentMaskShiftLayers	cdef/xdefwWriter.cpp	/^int defwComponentMaskShiftLayers (const char**  layerNames, int           numLayerName) {$/;"	f
defwComponentMaskShiftLayers	def/defwWriter.cpp	/^defwComponentMaskShiftLayers(const char **layerNames,$/;"	f
defwComponentRouteHalo	cdef/xdefwWriter.cpp	/^int defwComponentRouteHalo (int  haloDist, const char*  minLayer, const char*  maxLayer) {$/;"	f
defwComponentRouteHalo	def/defwWriter.cpp	/^defwComponentRouteHalo(int          haloDist,$/;"	f
defwComponentStr	cdef/xdefwWriter.cpp	/^int defwComponentStr (const char*  instance, const char*  master, int    numNetName, const char**  netNames, const char*  eeq, const char*  genName, const char*  genParemeters, const char*  source, int  numForeign, const char**  foreigns, int*  foreignX, int*  foreignY, const char**  foreignOrients, const char*  status, int  statusX, int  statusY, const char*  statusOrient, double  weight, const char*  region, int  xl, int  yl, int  xh, int  yh) {$/;"	f
defwComponentStr	def/defwWriter.cpp	/^defwComponentStr(const char *instance,$/;"	f
defwConstraintCbk	def/defwWriterCalls.cpp	87;"	d	file:
defwConstraintCbkType	cdef/defwWriterCalls.h	/^  defwConstraintCbkType = 28,$/;"	e	enum:__anon13
defwConstraintCbkType	def/defwWriterCalls.hpp	/^  defwConstraintCbkType,$/;"	e	enum:__anon11
defwConstraintCbkType	include/defwWriterCalls.h	/^  defwConstraintCbkType = 28,$/;"	e	enum:__anon4
defwConstraintCbkType	include/defwWriterCalls.hpp	/^  defwConstraintCbkType,$/;"	e	enum:__anon5
defwConstraintOperand	cdef/xdefwWriter.cpp	/^int defwConstraintOperand () {$/;"	f
defwConstraintOperand	def/defwWriter.cpp	/^defwConstraintOperand()$/;"	f
defwConstraintOperandEnd	cdef/xdefwWriter.cpp	/^int defwConstraintOperandEnd () {$/;"	f
defwConstraintOperandEnd	def/defwWriter.cpp	/^defwConstraintOperandEnd()$/;"	f
defwConstraintOperandNet	cdef/xdefwWriter.cpp	/^int defwConstraintOperandNet (const char*  netName) {$/;"	f
defwConstraintOperandNet	def/defwWriter.cpp	/^defwConstraintOperandNet(const char *netName)$/;"	f
defwConstraintOperandPath	cdef/xdefwWriter.cpp	/^int defwConstraintOperandPath (const char*  comp1, const char*  fromPin, const char*  comp2, const char*  toPin) {$/;"	f
defwConstraintOperandPath	def/defwWriter.cpp	/^defwConstraintOperandPath(const char    *comp1,$/;"	f
defwConstraintOperandSum	cdef/xdefwWriter.cpp	/^int defwConstraintOperandSum () {$/;"	f
defwConstraintOperandSum	def/defwWriter.cpp	/^defwConstraintOperandSum()$/;"	f
defwConstraintOperandSumEnd	cdef/xdefwWriter.cpp	/^int defwConstraintOperandSumEnd () {$/;"	f
defwConstraintOperandSumEnd	def/defwWriter.cpp	/^defwConstraintOperandSumEnd()$/;"	f
defwConstraintOperandTime	cdef/xdefwWriter.cpp	/^int defwConstraintOperandTime (const char*  timeType, int  time) {$/;"	f
defwConstraintOperandTime	def/defwWriter.cpp	/^defwConstraintOperandTime(const char    *timeType,$/;"	f
defwConstraintWiredlogic	cdef/xdefwWriter.cpp	/^int defwConstraintWiredlogic (const char*  netName, int  distance) {$/;"	f
defwConstraintWiredlogic	def/defwWriter.cpp	/^defwConstraintWiredlogic(const char *netName,$/;"	f
defwCountFunc	def/defwWriterCalls.cpp	/^int defwCountFunc(defwCallbackType_e e, defiUserData d) {$/;"	f
defwCounter	def/defwWriter.cpp	/^int defwCounter = 0;  \/\/ number of nets, components in section$/;"	v
defwCurrentLineNumber	cdef/xdefwWriter.cpp	/^int defwCurrentLineNumber () {$/;"	f
defwCurrentLineNumber	def/defwWriter.cpp	/^defwCurrentLineNumber()$/;"	f
defwDefaultCap	cdef/xdefwWriter.cpp	/^int defwDefaultCap (int  pins, double  cap) {$/;"	f
defwDefaultCap	def/defwWriter.cpp	/^defwDefaultCap(int      pins,$/;"	f
defwDefaultCapCbk	def/defwWriterCalls.cpp	75;"	d	file:
defwDefaultCapCbkType	cdef/defwWriterCalls.h	/^  defwDefaultCapCbkType = 16,$/;"	e	enum:__anon13
defwDefaultCapCbkType	def/defwWriterCalls.hpp	/^  defwDefaultCapCbkType,$/;"	e	enum:__anon11
defwDefaultCapCbkType	include/defwWriterCalls.h	/^  defwDefaultCapCbkType = 16,$/;"	e	enum:__anon4
defwDefaultCapCbkType	include/defwWriterCalls.hpp	/^  defwDefaultCapCbkType,$/;"	e	enum:__anon5
defwDesignCbk	def/defwWriterCalls.cpp	64;"	d	file:
defwDesignCbkType	cdef/defwWriterCalls.h	/^  defwDesignCbkType = 5,$/;"	e	enum:__anon13
defwDesignCbkType	def/defwWriterCalls.hpp	/^  defwDesignCbkType,$/;"	e	enum:__anon11
defwDesignCbkType	include/defwWriterCalls.h	/^  defwDesignCbkType = 5,$/;"	e	enum:__anon4
defwDesignCbkType	include/defwWriterCalls.hpp	/^  defwDesignCbkType,$/;"	e	enum:__anon5
defwDesignEndCbk	def/defwWriterCalls.cpp	92;"	d	file:
defwDesignEndCbkType	cdef/defwWriterCalls.h	/^  defwDesignEndCbkType = 33$/;"	e	enum:__anon13
defwDesignEndCbkType	def/defwWriterCalls.hpp	/^  defwDesignEndCbkType$/;"	e	enum:__anon11
defwDesignEndCbkType	include/defwWriterCalls.h	/^  defwDesignEndCbkType = 33$/;"	e	enum:__anon4
defwDesignEndCbkType	include/defwWriterCalls.hpp	/^  defwDesignEndCbkType$/;"	e	enum:__anon5
defwDesignName	cdef/xdefwWriter.cpp	/^int defwDesignName (const char*  name) {$/;"	f
defwDesignName	def/defwWriter.cpp	/^defwDesignName(const char *name)$/;"	f
defwDidComponents	def/defwWriter.cpp	/^int defwDidComponents = 0;  \/\/ required section$/;"	v
defwDidInit	def/defwWriter.cpp	/^int defwDidInit = 0;  \/\/ required section$/;"	v
defwDidNets	def/defwWriter.cpp	/^int defwDidNets = 0;  \/\/ required section$/;"	v
defwDieArea	cdef/xdefwWriter.cpp	/^int defwDieArea (int  xl, int  yl, int  xh, int  yh) {$/;"	f
defwDieArea	def/defwWriter.cpp	/^defwDieArea(int xl,$/;"	f
defwDieAreaCbk	def/defwWriterCalls.cpp	71;"	d	file:
defwDieAreaCbkType	cdef/defwWriterCalls.h	/^  defwDieAreaCbkType = 12,$/;"	e	enum:__anon13
defwDieAreaCbkType	def/defwWriterCalls.hpp	/^  defwDieAreaCbkType,$/;"	e	enum:__anon11
defwDieAreaCbkType	include/defwWriterCalls.h	/^  defwDieAreaCbkType = 12,$/;"	e	enum:__anon4
defwDieAreaCbkType	include/defwWriterCalls.hpp	/^  defwDieAreaCbkType,$/;"	e	enum:__anon5
defwDieAreaList	cdef/xdefwWriter.cpp	/^int defwDieAreaList (int  num_points, int*  xl, int*  yh) {$/;"	f
defwDieAreaList	def/defwWriter.cpp	/^defwDieAreaList(int num_points,$/;"	f
defwDividerCbk	def/defwWriterCalls.cpp	62;"	d	file:
defwDividerCbkType	cdef/defwWriterCalls.h	/^  defwDividerCbkType = 4,$/;"	e	enum:__anon13
defwDividerCbkType	def/defwWriterCalls.hpp	/^  defwDividerCbkType,$/;"	e	enum:__anon11
defwDividerCbkType	include/defwWriterCalls.h	/^  defwDividerCbkType = 4,$/;"	e	enum:__anon4
defwDividerCbkType	include/defwWriterCalls.hpp	/^  defwDividerCbkType,$/;"	e	enum:__anon5
defwDividerChar	cdef/xdefwWriter.cpp	/^int defwDividerChar (const char*  dividerChar) {$/;"	f
defwDividerChar	def/defwWriter.cpp	/^defwDividerChar(const char *dividerChar)$/;"	f
defwEnd	cdef/xdefwWriter.cpp	/^int defwEnd () {$/;"	f
defwEnd	def/defwWriter.cpp	/^defwEnd()$/;"	f
defwEndBeginext	cdef/xdefwWriter.cpp	/^int defwEndBeginext () {$/;"	f
defwEndBeginext	def/defwWriter.cpp	/^defwEndBeginext()$/;"	f
defwEndBlockages	cdef/xdefwWriter.cpp	/^int defwEndBlockages () {$/;"	f
defwEndBlockages	def/defwWriter.cpp	/^defwEndBlockages()$/;"	f
defwEndComponents	cdef/xdefwWriter.cpp	/^int defwEndComponents () {$/;"	f
defwEndComponents	def/defwWriter.cpp	/^defwEndComponents()$/;"	f
defwEndConstraints	cdef/xdefwWriter.cpp	/^int defwEndConstraints () {$/;"	f
defwEndConstraints	def/defwWriter.cpp	/^defwEndConstraints()$/;"	f
defwEndDefaultCap	cdef/xdefwWriter.cpp	/^int defwEndDefaultCap () {$/;"	f
defwEndDefaultCap	def/defwWriter.cpp	/^defwEndDefaultCap()$/;"	f
defwEndFills	cdef/xdefwWriter.cpp	/^int defwEndFills () {$/;"	f
defwEndFills	def/defwWriter.cpp	/^defwEndFills()$/;"	f
defwEndGroups	cdef/xdefwWriter.cpp	/^int defwEndGroups () {$/;"	f
defwEndGroups	def/defwWriter.cpp	/^defwEndGroups()$/;"	f
defwEndIOTimings	cdef/xdefwWriter.cpp	/^int defwEndIOTimings () {$/;"	f
defwEndIOTimings	def/defwWriter.cpp	/^defwEndIOTimings()$/;"	f
defwEndNets	cdef/xdefwWriter.cpp	/^int defwEndNets () {$/;"	f
defwEndNets	def/defwWriter.cpp	/^defwEndNets()$/;"	f
defwEndNonDefaultRules	cdef/xdefwWriter.cpp	/^int defwEndNonDefaultRules () {$/;"	f
defwEndNonDefaultRules	def/defwWriter.cpp	/^defwEndNonDefaultRules()$/;"	f
defwEndPinProperties	cdef/xdefwWriter.cpp	/^int defwEndPinProperties () {$/;"	f
defwEndPinProperties	def/defwWriter.cpp	/^defwEndPinProperties()$/;"	f
defwEndPins	cdef/xdefwWriter.cpp	/^int defwEndPins () {$/;"	f
defwEndPins	def/defwWriter.cpp	/^defwEndPins()$/;"	f
defwEndPropDef	cdef/xdefwWriter.cpp	/^int defwEndPropDef () {$/;"	f
defwEndPropDef	def/defwWriter.cpp	/^defwEndPropDef()$/;"	f
defwEndRegions	cdef/xdefwWriter.cpp	/^int defwEndRegions () {$/;"	f
defwEndRegions	def/defwWriter.cpp	/^defwEndRegions()$/;"	f
defwEndScanchain	cdef/xdefwWriter.cpp	/^int defwEndScanchain () {$/;"	f
defwEndScanchain	def/defwWriter.cpp	/^defwEndScanchain()$/;"	f
defwEndSlots	cdef/xdefwWriter.cpp	/^int defwEndSlots () {$/;"	f
defwEndSlots	def/defwWriter.cpp	/^defwEndSlots()$/;"	f
defwEndSpecialNets	cdef/xdefwWriter.cpp	/^int defwEndSpecialNets () {$/;"	f
defwEndSpecialNets	def/defwWriter.cpp	/^defwEndSpecialNets()$/;"	f
defwEndStyles	cdef/xdefwWriter.cpp	/^int defwEndStyles () {$/;"	f
defwEndStyles	def/defwWriter.cpp	/^defwEndStyles()$/;"	f
defwEndVias	cdef/xdefwWriter.cpp	/^int defwEndVias () {$/;"	f
defwEndVias	def/defwWriter.cpp	/^defwEndVias()$/;"	f
defwErrorLogFunction	def/defwWriterCalls.cpp	/^DEFI_LOG_FUNCTION defwErrorLogFunction;$/;"	v
defwExtCbk	def/defwWriterCalls.cpp	91;"	d	file:
defwExtCbkType	cdef/defwWriterCalls.h	/^  defwExtCbkType = 32,$/;"	e	enum:__anon13
defwExtCbkType	def/defwWriterCalls.hpp	/^  defwExtCbkType,$/;"	e	enum:__anon11
defwExtCbkType	include/defwWriterCalls.h	/^  defwExtCbkType = 32,$/;"	e	enum:__anon4
defwExtCbkType	include/defwWriterCalls.hpp	/^  defwExtCbkType,$/;"	e	enum:__anon5
defwFName	def/defwWriterCalls.cpp	/^const char* defwFName() {$/;"	f
defwFPC	def/defwWriter.cpp	/^int defwFPC = 0;  \/\/ Current number of items in constraints\/operand\/sum$/;"	v
defwFile	def/defwWriter.cpp	/^FILE *defwFile = 0;   \/\/ File to write to.$/;"	v
defwFileName	def/defwWriterCalls.cpp	/^static char* defwFileName = 0;$/;"	v	file:
defwFillLayer	cdef/xdefwWriter.cpp	/^int defwFillLayer (const char*  layerName) {$/;"	f
defwFillLayer	def/defwWriter.cpp	/^defwFillLayer(const char *layerName)$/;"	f
defwFillLayerMask	cdef/xdefwWriter.cpp	/^int defwFillLayerMask (int  maskColor) {$/;"	f
defwFillLayerMask	def/defwWriter.cpp	/^defwFillLayerMask(int colorMask)$/;"	f
defwFillLayerOPC	cdef/xdefwWriter.cpp	/^int defwFillLayerOPC () {$/;"	f
defwFillLayerOPC	def/defwWriter.cpp	/^defwFillLayerOPC()$/;"	f
defwFillPoints	cdef/xdefwWriter.cpp	/^int defwFillPoints (int  num_points, double*  xl, double*  yl) {$/;"	f
defwFillPoints	def/defwWriter.cpp	/^defwFillPoints(int      num_points,$/;"	f
defwFillPolygon	cdef/xdefwWriter.cpp	/^int defwFillPolygon (int  num_polys, double*  xl, double*  yl) {$/;"	f
defwFillPolygon	def/defwWriter.cpp	/^defwFillPolygon(int     num_polys,$/;"	f
defwFillRect	cdef/xdefwWriter.cpp	/^int defwFillRect (int  xl, int  yl, int  xh, int  yh) {$/;"	f
defwFillRect	def/defwWriter.cpp	/^defwFillRect(int    xl,$/;"	f
defwFillVia	cdef/xdefwWriter.cpp	/^int defwFillVia (const char*  viaName) {$/;"	f
defwFillVia	def/defwWriter.cpp	/^defwFillVia(const char *viaName)$/;"	f
defwFillViaMask	cdef/xdefwWriter.cpp	/^int defwFillViaMask (int  colorMask) {$/;"	f
defwFillViaMask	def/defwWriter.cpp	/^defwFillViaMask(int maskColor)$/;"	f
defwFillViaOPC	cdef/xdefwWriter.cpp	/^int defwFillViaOPC () {$/;"	f
defwFillViaOPC	def/defwWriter.cpp	/^defwFillViaOPC()$/;"	f
defwFloorPlanCbk	def/defwWriterCalls.cpp	67;"	d	file:
defwFloorPlanCbkType	cdef/defwWriterCalls.h	/^  defwFloorPlanCbkType = 8,$/;"	e	enum:__anon13
defwFloorPlanCbkType	def/defwWriterCalls.hpp	/^  defwFloorPlanCbkType,$/;"	e	enum:__anon11
defwFloorPlanCbkType	include/defwWriterCalls.h	/^  defwFloorPlanCbkType = 8,$/;"	e	enum:__anon4
defwFloorPlanCbkType	include/defwWriterCalls.hpp	/^  defwFloorPlanCbkType,$/;"	e	enum:__anon5
defwFloorplan	cdef/xdefwWriter.cpp	/^int defwFloorplan (const char*  floorplan) {$/;"	f
defwFloorplan	def/defwWriter.cpp	/^defwFloorplan(const char *floorplan)$/;"	f
defwFunc	def/defwWriter.cpp	/^int defwFunc = DEFW_UNINIT;   \/\/ Current function of writer$/;"	v
defwGcellGrid	cdef/xdefwWriter.cpp	/^int defwGcellGrid (const char*  master, int  doStart, int  doCount, int  doStep) {$/;"	f
defwGcellGrid	def/defwWriter.cpp	/^defwGcellGrid(const char    *master,$/;"	f
defwGcellGridCbk	def/defwWriterCalls.cpp	74;"	d	file:
defwGcellGridCbkType	cdef/defwWriterCalls.h	/^  defwGcellGridCbkType = 15,$/;"	e	enum:__anon13
defwGcellGridCbkType	def/defwWriterCalls.hpp	/^  defwGcellGridCbkType,$/;"	e	enum:__anon11
defwGcellGridCbkType	include/defwWriterCalls.h	/^  defwGcellGridCbkType = 15,$/;"	e	enum:__anon4
defwGcellGridCbkType	include/defwWriterCalls.hpp	/^  defwGcellGridCbkType,$/;"	e	enum:__anon5
defwGetUserData	cdef/xdefwWriterCalls.cpp	/^defiUserData defwGetUserData () {$/;"	f
defwGetUserData	def/defwWriterCalls.cpp	/^defiUserData defwGetUserData() {$/;"	f
defwGroup	cdef/xdefwWriter.cpp	/^int defwGroup (const char*  groupName, int  numExpr, const char**  groupExpr) {$/;"	f
defwGroup	def/defwWriter.cpp	/^defwGroup(const char    *groupName,$/;"	f
defwGroupCbk	def/defwWriterCalls.cpp	89;"	d	file:
defwGroupCbkType	cdef/defwWriterCalls.h	/^  defwGroupCbkType = 30,$/;"	e	enum:__anon13
defwGroupCbkType	def/defwWriterCalls.hpp	/^  defwGroupCbkType,$/;"	e	enum:__anon11
defwGroupCbkType	include/defwWriterCalls.h	/^  defwGroupCbkType = 30,$/;"	e	enum:__anon4
defwGroupCbkType	include/defwWriterCalls.hpp	/^  defwGroupCbkType,$/;"	e	enum:__anon5
defwGroupRegion	cdef/xdefwWriter.cpp	/^int defwGroupRegion (int  xl, int  yl, int  xh, int  yh, const char*  regionName) {$/;"	f
defwGroupRegion	def/defwWriter.cpp	/^defwGroupRegion(int         xl,$/;"	f
defwGroupSoft	cdef/xdefwWriter.cpp	/^int defwGroupSoft (const char*  type1, double  value1, const char*  type2, double  value2, const char*  type3, double  value3) {$/;"	f
defwGroupSoft	def/defwWriter.cpp	/^defwGroupSoft(const char    *type1,$/;"	f
defwHasInit	def/defwWriter.cpp	/^int defwHasInit = 0;    \/\/ for defwInit has called$/;"	v
defwHasInitCbk	def/defwWriter.cpp	/^int defwHasInitCbk = 0; \/\/ for defwInitCbk has called$/;"	v
defwHistory	cdef/xdefwWriter.cpp	/^int defwHistory (const char*  string) {$/;"	f
defwHistory	def/defwWriter.cpp	/^defwHistory(const char *string)$/;"	f
defwHistoryCbk	def/defwWriterCalls.cpp	69;"	d	file:
defwHistoryCbkType	cdef/defwWriterCalls.h	/^  defwHistoryCbkType = 10,$/;"	e	enum:__anon13
defwHistoryCbkType	def/defwWriterCalls.hpp	/^  defwHistoryCbkType,$/;"	e	enum:__anon11
defwHistoryCbkType	include/defwWriterCalls.h	/^  defwHistoryCbkType = 10,$/;"	e	enum:__anon4
defwHistoryCbkType	include/defwWriterCalls.hpp	/^  defwHistoryCbkType,$/;"	e	enum:__anon5
defwIOTiming	cdef/xdefwWriter.cpp	/^int defwIOTiming (const char*  inst, const char*  pin) {$/;"	f
defwIOTiming	def/defwWriter.cpp	/^defwIOTiming(const char *instance,$/;"	f
defwIOTimingCapacitance	cdef/xdefwWriter.cpp	/^int defwIOTimingCapacitance (double  num) {$/;"	f
defwIOTimingCapacitance	def/defwWriter.cpp	/^defwIOTimingCapacitance(double num)$/;"	f
defwIOTimingCbk	def/defwWriterCalls.cpp	85;"	d	file:
defwIOTimingCbkType	cdef/defwWriterCalls.h	/^  defwIOTimingCbkType = 26,$/;"	e	enum:__anon13
defwIOTimingCbkType	def/defwWriterCalls.hpp	/^  defwIOTimingCbkType,$/;"	e	enum:__anon11
defwIOTimingCbkType	include/defwWriterCalls.h	/^  defwIOTimingCbkType = 26,$/;"	e	enum:__anon4
defwIOTimingCbkType	include/defwWriterCalls.hpp	/^  defwIOTimingCbkType,$/;"	e	enum:__anon5
defwIOTimingDrivecell	cdef/xdefwWriter.cpp	/^int defwIOTimingDrivecell (const char*  name, const char*  fromPin, const char*  toPin, int  numDrivers) {$/;"	f
defwIOTimingDrivecell	def/defwWriter.cpp	/^defwIOTimingDrivecell(const char    *name,$/;"	f
defwIOTimingSlewrate	cdef/xdefwWriter.cpp	/^int defwIOTimingSlewrate (const char*  riseFall, int  num1, int  num2) {$/;"	f
defwIOTimingSlewrate	def/defwWriter.cpp	/^defwIOTimingSlewrate(const char *riseFall,$/;"	f
defwIOTimingVariable	cdef/xdefwWriter.cpp	/^int defwIOTimingVariable (const char*  riseFall, int  num1, int  num2) {$/;"	f
defwIOTimingVariable	def/defwWriter.cpp	/^defwIOTimingVariable(const char *riseFall,$/;"	f
defwInit	cdef/xdefwWriter.cpp	/^int defwInit (FILE*  f, int  vers1, int  version2, const char*  caseSensitive, const char*  dividerChar, const char*  busBitChars, const char*  designName, const char*  technology, const char*  array, const char*  floorplan, double  units) {$/;"	f
defwInit	def/defwWriter.cpp	/^defwInit(FILE       *f,$/;"	f
defwInitCbk	cdef/xdefwWriter.cpp	/^int defwInitCbk (FILE*  f) {$/;"	f
defwInitCbk	def/defwWriter.cpp	/^defwInitCbk(FILE *f)$/;"	f
defwIntPropDef	cdef/xdefwWriter.cpp	/^int defwIntPropDef (const char*  objType, const char*  propName, double  leftRange, double  rightRange, int     propValue) {$/;"	f
defwIntPropDef	def/defwWriter.cpp	/^defwIntPropDef(const char   *objType,$/;"	f
defwIntProperty	cdef/xdefwWriter.cpp	/^int defwIntProperty (const char*  propName, int  propValue) {$/;"	f
defwIntProperty	def/defwWriter.cpp	/^defwIntProperty(const char  *propName,$/;"	f
defwIsPropObjType	def/defwWriter.cpp	/^defwIsPropObjType(const char *objType)$/;"	f
defwIsPropState	def/defwWriter.cpp	/^defwIsPropState()$/;"	f
defwLineItemCounter	def/defwWriter.cpp	/^int defwLineItemCounter = 0; \/\/ number of items on current line$/;"	v
defwLines	def/defwWriter.cpp	/^int defwLines = 0;    \/\/ number of lines written$/;"	v
defwNet	cdef/xdefwWriter.cpp	/^int defwNet (const char*  name) {$/;"	f
defwNet	def/defwWriter.cpp	/^defwNet(const char *name)$/;"	f
defwNetCbk	def/defwWriterCalls.cpp	84;"	d	file:
defwNetCbkType	cdef/defwWriterCalls.h	/^  defwNetCbkType = 25,$/;"	e	enum:__anon13
defwNetCbkType	def/defwWriterCalls.hpp	/^  defwNetCbkType,$/;"	e	enum:__anon11
defwNetCbkType	include/defwWriterCalls.h	/^  defwNetCbkType = 25,$/;"	e	enum:__anon4
defwNetCbkType	include/defwWriterCalls.hpp	/^  defwNetCbkType,$/;"	e	enum:__anon5
defwNetConnection	cdef/xdefwWriter.cpp	/^int defwNetConnection (const char*  inst, const char*  pin, int  synthesized) {$/;"	f
defwNetConnection	def/defwWriter.cpp	/^defwNetConnection(const char    *inst,$/;"	f
defwNetEndOneNet	cdef/xdefwWriter.cpp	/^int defwNetEndOneNet () {$/;"	f
defwNetEndOneNet	def/defwWriter.cpp	/^defwNetEndOneNet()$/;"	f
defwNetEstCap	cdef/xdefwWriter.cpp	/^int defwNetEstCap (double  value) {$/;"	f
defwNetEstCap	def/defwWriter.cpp	/^defwNetEstCap(double d)$/;"	f
defwNetFixedbump	cdef/xdefwWriter.cpp	/^int defwNetFixedbump () {$/;"	f
defwNetFixedbump	def/defwWriter.cpp	/^defwNetFixedbump()$/;"	f
defwNetFrequency	cdef/xdefwWriter.cpp	/^int defwNetFrequency (double  frequency) {$/;"	f
defwNetFrequency	def/defwWriter.cpp	/^defwNetFrequency(double frequency)$/;"	f
defwNetMustjoinConnection	cdef/xdefwWriter.cpp	/^int defwNetMustjoinConnection (const char*  inst, const char*  pin) {$/;"	f
defwNetMustjoinConnection	def/defwWriter.cpp	/^defwNetMustjoinConnection(const char    *inst,$/;"	f
defwNetNondefaultRule	cdef/xdefwWriter.cpp	/^int defwNetNondefaultRule (const char*  name) {$/;"	f
defwNetNondefaultRule	def/defwWriter.cpp	/^defwNetNondefaultRule(const char *name)$/;"	f
defwNetNoshieldEnd	cdef/xdefwWriter.cpp	/^int defwNetNoshieldEnd () {$/;"	f
defwNetNoshieldEnd	def/defwWriter.cpp	/^defwNetNoshieldEnd()$/;"	f
defwNetNoshieldPoint	cdef/xdefwWriter.cpp	/^int defwNetNoshieldPoint (int  numPts, const char**  pointx, const char**  pointy) {$/;"	f
defwNetNoshieldPoint	def/defwWriter.cpp	/^defwNetNoshieldPoint(int        numPts,$/;"	f
defwNetNoshieldStart	cdef/xdefwWriter.cpp	/^int defwNetNoshieldStart (const char*  name) {$/;"	f
defwNetNoshieldStart	def/defwWriter.cpp	/^defwNetNoshieldStart(const char *name)$/;"	f
defwNetNoshieldVia	cdef/xdefwWriter.cpp	/^int defwNetNoshieldVia (const char*  name) {$/;"	f
defwNetNoshieldVia	def/defwWriter.cpp	/^defwNetNoshieldVia(const char *name)$/;"	f
defwNetOptions	def/defwWriter.cpp	/^defwNetOptions()$/;"	f
defwNetOriginal	cdef/xdefwWriter.cpp	/^int defwNetOriginal (const char*  name) {$/;"	f
defwNetOriginal	def/defwWriter.cpp	/^defwNetOriginal(const char *name)$/;"	f
defwNetPathEnd	cdef/xdefwWriter.cpp	/^int defwNetPathEnd () {$/;"	f
defwNetPathEnd	def/defwWriter.cpp	/^defwNetPathEnd()$/;"	f
defwNetPathLayer	cdef/xdefwWriter.cpp	/^int defwNetPathLayer (const char*  name, int  isTaper, const char*  rulename) {$/;"	f
defwNetPathLayer	def/defwWriter.cpp	/^defwNetPathLayer(const char *name,$/;"	f
defwNetPathMask	cdef/xdefwWriter.cpp	/^int defwNetPathMask (int  maskNum) {$/;"	f
defwNetPathMask	def/defwWriter.cpp	/^defwNetPathMask(int colorMask)$/;"	f
defwNetPathPoint	cdef/xdefwWriter.cpp	/^int defwNetPathPoint (int  numPts, double*  pointx, double*  pointy) {$/;"	f
defwNetPathPoint	def/defwWriter.cpp	/^defwNetPathPoint(int    numPts,$/;"	f
defwNetPathPointWithExt	cdef/xdefwWriter.cpp	/^int defwNetPathPointWithExt (int  numPts, double*  pointx, double*  pointy, double*  optValue) {$/;"	f
defwNetPathPointWithExt	def/defwWriter.cpp	/^defwNetPathPointWithExt(int     numPts,$/;"	f
defwNetPathRect	cdef/xdefwWriter.cpp	/^int defwNetPathRect (int  deltaX1, int  deltaY1, int  deltaX2, int  deltaY2) {$/;"	f
defwNetPathRect	def/defwWriter.cpp	/^defwNetPathRect(int deltaX1,$/;"	f
defwNetPathStart	cdef/xdefwWriter.cpp	/^int defwNetPathStart (const char*  typ) {$/;"	f
defwNetPathStart	def/defwWriter.cpp	/^defwNetPathStart(const char *typ)$/;"	f
defwNetPathStyle	cdef/xdefwWriter.cpp	/^int defwNetPathStyle (int  styleNum) {$/;"	f
defwNetPathStyle	def/defwWriter.cpp	/^defwNetPathStyle(int styleNum)$/;"	f
defwNetPathVia	cdef/xdefwWriter.cpp	/^int defwNetPathVia (const char*  name) {$/;"	f
defwNetPathVia	def/defwWriter.cpp	/^defwNetPathVia(const char *name)$/;"	f
defwNetPathViaWithOrient	cdef/xdefwWriter.cpp	/^int defwNetPathViaWithOrient (const char*  name, int  orient) {$/;"	f
defwNetPathViaWithOrient	def/defwWriter.cpp	/^defwNetPathViaWithOrient(const char *name,$/;"	f
defwNetPathViaWithOrientStr	cdef/xdefwWriter.cpp	/^int defwNetPathViaWithOrientStr (const char*  name, const char*  orient) {$/;"	f
defwNetPathViaWithOrientStr	def/defwWriter.cpp	/^defwNetPathViaWithOrientStr(const char  *name,$/;"	f
defwNetPathVirtual	cdef/xdefwWriter.cpp	/^int defwNetPathVirtual (int  x, int  y) {$/;"	f
defwNetPathVirtual	def/defwWriter.cpp	/^defwNetPathVirtual(int  x,$/;"	f
defwNetPathWidth	cdef/xdefwWriter.cpp	/^int defwNetPathWidth (int  w) {$/;"	f
defwNetPathWidth	def/defwWriter.cpp	/^defwNetPathWidth(int w)$/;"	f
defwNetPattern	cdef/xdefwWriter.cpp	/^int defwNetPattern (const char*  name) {$/;"	f
defwNetPattern	def/defwWriter.cpp	/^defwNetPattern(const char *name)$/;"	f
defwNetShieldnet	cdef/xdefwWriter.cpp	/^int defwNetShieldnet (const char*  name) {$/;"	f
defwNetShieldnet	def/defwWriter.cpp	/^defwNetShieldnet(const char *name)$/;"	f
defwNetSource	cdef/xdefwWriter.cpp	/^int defwNetSource (const char*  name) {$/;"	f
defwNetSource	def/defwWriter.cpp	/^defwNetSource(const char *name)$/;"	f
defwNetSubnetEnd	cdef/xdefwWriter.cpp	/^int defwNetSubnetEnd () {$/;"	f
defwNetSubnetEnd	def/defwWriter.cpp	/^defwNetSubnetEnd()$/;"	f
defwNetSubnetPin	cdef/xdefwWriter.cpp	/^int defwNetSubnetPin (const char*  compName, const char*  pinName) {$/;"	f
defwNetSubnetPin	def/defwWriter.cpp	/^defwNetSubnetPin(const char *compName,$/;"	f
defwNetSubnetStart	cdef/xdefwWriter.cpp	/^int defwNetSubnetStart (const char*  name) {$/;"	f
defwNetSubnetStart	def/defwWriter.cpp	/^defwNetSubnetStart(const char *name)$/;"	f
defwNetUse	cdef/xdefwWriter.cpp	/^int defwNetUse (const char*  name) {$/;"	f
defwNetUse	def/defwWriter.cpp	/^defwNetUse(const char *name)$/;"	f
defwNetVpin	cdef/xdefwWriter.cpp	/^int defwNetVpin (const char*  vpinName, const char*  layerName, int  layerXl, int  layerYl, int  layerXh, int  layerYh, const char*  status, int  statusX, int  statusY, int  orient) {$/;"	f
defwNetVpin	def/defwWriter.cpp	/^defwNetVpin(const char  *vpinName,$/;"	f
defwNetVpinStr	cdef/xdefwWriter.cpp	/^int defwNetVpinStr (const char*  vpinName, const char*  layerName, int  layerXl, int  layerYl, int  layerXh, int  layerYh, const char*  status, int  statusX, int  statusY, const char*  orient) {$/;"	f
defwNetVpinStr	def/defwWriter.cpp	/^defwNetVpinStr(const char   *vpinName,$/;"	f
defwNetWeight	cdef/xdefwWriter.cpp	/^int defwNetWeight (double  value) {$/;"	f
defwNetWeight	def/defwWriter.cpp	/^defwNetWeight(double d)$/;"	f
defwNetXtalk	cdef/xdefwWriter.cpp	/^int defwNetXtalk (int  xtalk) {$/;"	f
defwNetXtalk	def/defwWriter.cpp	/^defwNetXtalk(int xtalk)$/;"	f
defwNewLine	cdef/xdefwWriter.cpp	/^int defwNewLine () {$/;"	f
defwNewLine	def/defwWriter.cpp	/^defwNewLine()$/;"	f
defwNonDefaultRule	cdef/xdefwWriter.cpp	/^int defwNonDefaultRule (const char*  ruleName, int  hardSpacing) {$/;"	f
defwNonDefaultRule	def/defwWriter.cpp	/^defwNonDefaultRule(const char   *ruleName,$/;"	f
defwNonDefaultRuleLayer	cdef/xdefwWriter.cpp	/^int defwNonDefaultRuleLayer (const char*  layerName, int  width, int  diagWidth, int  spacing, int  wireExt) {$/;"	f
defwNonDefaultRuleLayer	def/defwWriter.cpp	/^defwNonDefaultRuleLayer(const char  *layerName,$/;"	f
defwNonDefaultRuleMinCuts	cdef/xdefwWriter.cpp	/^int defwNonDefaultRuleMinCuts (const char*  cutLayerName, int  numCutS) {$/;"	f
defwNonDefaultRuleMinCuts	def/defwWriter.cpp	/^defwNonDefaultRuleMinCuts(const char    *cutLayerName,$/;"	f
defwNonDefaultRuleVia	cdef/xdefwWriter.cpp	/^int defwNonDefaultRuleVia (const char*  viaName) {$/;"	f
defwNonDefaultRuleVia	def/defwWriter.cpp	/^defwNonDefaultRuleVia(const char *viaName)$/;"	f
defwNonDefaultRuleViaRule	cdef/xdefwWriter.cpp	/^int defwNonDefaultRuleViaRule (const char*  viaRuleName) {$/;"	f
defwNonDefaultRuleViaRule	def/defwWriter.cpp	/^defwNonDefaultRuleViaRule(const char *viaRuleName)$/;"	f
defwObsoleteNum	def/defwWriter.cpp	/^static int defwObsoleteNum = -1; \/\/ keep track the obsolete syntax for error$/;"	v	file:
defwOneViaEnd	cdef/xdefwWriter.cpp	/^int defwOneViaEnd () {$/;"	f
defwOneViaEnd	def/defwWriter.cpp	/^defwOneViaEnd()$/;"	f
defwOrient	def/defwWriter.cpp	/^defwOrient(int num)$/;"	f
defwPin	cdef/xdefwWriter.cpp	/^int defwPin (const char*  name, const char*  net, int  special, const char*  direction, const char*  use, const char*  status, int  statusX, int  statusY, int  orient, const char*  layer, int  xl, int  yl, int  xh, int  yh) {$/;"	f
defwPin	def/defwWriter.cpp	/^defwPin(const char  *name,$/;"	f
defwPinAntennaModel	cdef/xdefwWriter.cpp	/^int defwPinAntennaModel (const char*  oxide) {$/;"	f
defwPinAntennaModel	def/defwWriter.cpp	/^defwPinAntennaModel(const char *oxide)$/;"	f
defwPinAntennaPinDiffArea	cdef/xdefwWriter.cpp	/^int defwPinAntennaPinDiffArea (int  value, const char*  layerName) {$/;"	f
defwPinAntennaPinDiffArea	def/defwWriter.cpp	/^defwPinAntennaPinDiffArea(int           value,$/;"	f
defwPinAntennaPinGateArea	cdef/xdefwWriter.cpp	/^int defwPinAntennaPinGateArea (int  value, const char*  layerName) {$/;"	f
defwPinAntennaPinGateArea	def/defwWriter.cpp	/^defwPinAntennaPinGateArea(int           value,$/;"	f
defwPinAntennaPinMaxAreaCar	cdef/xdefwWriter.cpp	/^int defwPinAntennaPinMaxAreaCar (int  value, const char*  layerName) {$/;"	f
defwPinAntennaPinMaxAreaCar	def/defwWriter.cpp	/^defwPinAntennaPinMaxAreaCar(int         value,$/;"	f
defwPinAntennaPinMaxCutCar	cdef/xdefwWriter.cpp	/^int defwPinAntennaPinMaxCutCar (int  value, const char*  layerName) {$/;"	f
defwPinAntennaPinMaxCutCar	def/defwWriter.cpp	/^defwPinAntennaPinMaxCutCar(int          value,$/;"	f
defwPinAntennaPinMaxSideAreaCar	cdef/xdefwWriter.cpp	/^int defwPinAntennaPinMaxSideAreaCar (int  value, const char*  layerName) {$/;"	f
defwPinAntennaPinMaxSideAreaCar	def/defwWriter.cpp	/^defwPinAntennaPinMaxSideAreaCar(int         value,$/;"	f
defwPinAntennaPinPartialCutArea	cdef/xdefwWriter.cpp	/^int defwPinAntennaPinPartialCutArea (int  value, const char*  layerName) {$/;"	f
defwPinAntennaPinPartialCutArea	def/defwWriter.cpp	/^defwPinAntennaPinPartialCutArea(int         value,$/;"	f
defwPinAntennaPinPartialMetalArea	cdef/xdefwWriter.cpp	/^int defwPinAntennaPinPartialMetalArea (int  value, const char*  layerName) {$/;"	f
defwPinAntennaPinPartialMetalArea	def/defwWriter.cpp	/^defwPinAntennaPinPartialMetalArea(int           value,$/;"	f
defwPinAntennaPinPartialMetalSideArea	cdef/xdefwWriter.cpp	/^int defwPinAntennaPinPartialMetalSideArea (int  value, const char*  layerName) {$/;"	f
defwPinAntennaPinPartialMetalSideArea	def/defwWriter.cpp	/^defwPinAntennaPinPartialMetalSideArea(int           value,$/;"	f
defwPinCbk	def/defwWriterCalls.cpp	81;"	d	file:
defwPinCbkType	cdef/defwWriterCalls.h	/^  defwPinCbkType = 22,$/;"	e	enum:__anon13
defwPinCbkType	def/defwWriterCalls.hpp	/^  defwPinCbkType,$/;"	e	enum:__anon11
defwPinCbkType	include/defwWriterCalls.h	/^  defwPinCbkType = 22,$/;"	e	enum:__anon4
defwPinCbkType	include/defwWriterCalls.hpp	/^  defwPinCbkType,$/;"	e	enum:__anon5
defwPinGroundSensitivity	cdef/xdefwWriter.cpp	/^int defwPinGroundSensitivity (const char*  pinName) {$/;"	f
defwPinGroundSensitivity	def/defwWriter.cpp	/^defwPinGroundSensitivity(const char *pinName)$/;"	f
defwPinLayer	cdef/xdefwWriter.cpp	/^int defwPinLayer (const char*  layerName, int  spacing, int  designRuleWidth, int  xl, int  yl, int  xh, int  yh, int  mask) {$/;"	f
defwPinLayer	def/defwWriter.cpp	/^defwPinLayer(const char *layerName,$/;"	f
defwPinNetExpr	cdef/xdefwWriter.cpp	/^int defwPinNetExpr (const char*  pinExpr) {$/;"	f
defwPinNetExpr	def/defwWriter.cpp	/^defwPinNetExpr(const char *pinExpr)$/;"	f
defwPinPolygon	cdef/xdefwWriter.cpp	/^int defwPinPolygon (const char*  layerName, int  spacing, int  designRuleWidth, int  num_polys, double*  xl, double*  yl, int  mask) {$/;"	f
defwPinPolygon	def/defwWriter.cpp	/^defwPinPolygon(const char   *layerName,$/;"	f
defwPinPort	cdef/xdefwWriter.cpp	/^int defwPinPort () {$/;"	f
defwPinPort	def/defwWriter.cpp	/^defwPinPort()$/;"	f
defwPinPortLayer	cdef/xdefwWriter.cpp	/^int defwPinPortLayer (const char*  layerName, int  spacing, int  designRuleWidth, int  xl, int  yl, int  xh, int  yh, int  mask) {$/;"	f
defwPinPortLayer	def/defwWriter.cpp	/^defwPinPortLayer(const char *layerName,$/;"	f
defwPinPortLocation	cdef/xdefwWriter.cpp	/^int defwPinPortLocation (const char*  status, int  statusX, int  statusY, const char*  orient) {$/;"	f
defwPinPortLocation	def/defwWriter.cpp	/^defwPinPortLocation(const char  *status,$/;"	f
defwPinPortPolygon	cdef/xdefwWriter.cpp	/^int defwPinPortPolygon (const char*  layerName, int  spacing, int  designRuleWidth, int  num_polys, double*  xl, double*  yl, int  mask) {$/;"	f
defwPinPortPolygon	def/defwWriter.cpp	/^defwPinPortPolygon(const char   *layerName,$/;"	f
defwPinPortVia	cdef/xdefwWriter.cpp	/^int defwPinPortVia (const char*  viaName, int  xl, int  yl, int  mask) {$/;"	f
defwPinPortVia	def/defwWriter.cpp	/^defwPinPortVia(const char   *viaName,$/;"	f
defwPinPropCbk	def/defwWriterCalls.cpp	82;"	d	file:
defwPinPropCbkType	cdef/defwWriterCalls.h	/^  defwPinPropCbkType = 23,$/;"	e	enum:__anon13
defwPinPropCbkType	def/defwWriterCalls.hpp	/^  defwPinPropCbkType,$/;"	e	enum:__anon11
defwPinPropCbkType	include/defwWriterCalls.h	/^  defwPinPropCbkType = 23,$/;"	e	enum:__anon4
defwPinPropCbkType	include/defwWriterCalls.hpp	/^  defwPinPropCbkType,$/;"	e	enum:__anon5
defwPinProperty	cdef/xdefwWriter.cpp	/^int defwPinProperty (const char*  name, const char*  pinName) {$/;"	f
defwPinProperty	def/defwWriter.cpp	/^defwPinProperty(const char  *name,$/;"	f
defwPinStr	cdef/xdefwWriter.cpp	/^int defwPinStr (const char*  name, const char*  net, int  special, const char*  direction, const char*  use, const char*  status, int  statusX, int  statusY, const char*  orient, const char*  layer, int  xl, int  yl, int  xh, int  yh) {$/;"	f
defwPinStr	def/defwWriter.cpp	/^defwPinStr(const char   *name,$/;"	f
defwPinSupplySensitivity	cdef/xdefwWriter.cpp	/^int defwPinSupplySensitivity (const char*  pinName) {$/;"	f
defwPinSupplySensitivity	def/defwWriter.cpp	/^defwPinSupplySensitivity(const char *pinName)$/;"	f
defwPinVia	cdef/xdefwWriter.cpp	/^int defwPinVia (const char*  viaName, int  xl, int  yl, int  mask) {$/;"	f
defwPinVia	def/defwWriter.cpp	/^defwPinVia(const char   *viaName,$/;"	f
defwPrintError	cdef/xdefwWriter.cpp	/^void defwPrintError (int  status) {$/;"	f
defwPrintError	def/defwWriter.cpp	/^defwPrintError(int status)$/;"	f
defwPrintUnusedCallbacks	cdef/xdefwWriterCalls.cpp	/^void defwPrintUnusedCallbacks (FILE*  log) {$/;"	f
defwPrintUnusedCallbacks	def/defwWriterCalls.cpp	/^void defwPrintUnusedCallbacks(FILE* f) {$/;"	f
defwPropDefCbk	def/defwWriterCalls.cpp	70;"	d	file:
defwPropDefCbkType	cdef/defwWriterCalls.h	/^  defwPropDefCbkType = 11,$/;"	e	enum:__anon13
defwPropDefCbkType	def/defwWriterCalls.hpp	/^  defwPropDefCbkType,$/;"	e	enum:__anon11
defwPropDefCbkType	include/defwWriterCalls.h	/^  defwPropDefCbkType = 11,$/;"	e	enum:__anon4
defwPropDefCbkType	include/defwWriterCalls.hpp	/^  defwPropDefCbkType,$/;"	e	enum:__anon5
defwRealPropDef	cdef/xdefwWriter.cpp	/^int defwRealPropDef (const char*  objType, const char*  propName, double  leftRange, double  rightRange, double  propValue) {$/;"	f
defwRealPropDef	def/defwWriter.cpp	/^defwRealPropDef(const char  *objType,$/;"	f
defwRealProperty	cdef/xdefwWriter.cpp	/^int defwRealProperty (const char*  propName, double  propValue) {$/;"	f
defwRealProperty	def/defwWriter.cpp	/^defwRealProperty(const char *propName,$/;"	f
defwRegionCbk	def/defwWriterCalls.cpp	79;"	d	file:
defwRegionCbkType	cdef/defwWriterCalls.h	/^  defwRegionCbkType = 20,$/;"	e	enum:__anon13
defwRegionCbkType	def/defwWriterCalls.hpp	/^  defwRegionCbkType,$/;"	e	enum:__anon11
defwRegionCbkType	include/defwWriterCalls.h	/^  defwRegionCbkType = 20,$/;"	e	enum:__anon4
defwRegionCbkType	include/defwWriterCalls.hpp	/^  defwRegionCbkType,$/;"	e	enum:__anon5
defwRegionName	cdef/xdefwWriter.cpp	/^int defwRegionName (const char*  name) {$/;"	f
defwRegionName	def/defwWriter.cpp	/^defwRegionName(const char *name)$/;"	f
defwRegionPoints	cdef/xdefwWriter.cpp	/^int defwRegionPoints (int  xl, int  yl, int  xh, int  yh) {$/;"	f
defwRegionPoints	def/defwWriter.cpp	/^defwRegionPoints(int    xl,$/;"	f
defwRegionType	cdef/xdefwWriter.cpp	/^int defwRegionType (const char*  type) {$/;"	f
defwRegionType	def/defwWriter.cpp	/^defwRegionType(const char *type)$/;"	f
defwRegisterUnused	def/defwWriterCalls.cpp	/^static int defwRegisterUnused = 0;$/;"	v	file:
defwRow	cdef/xdefwWriter.cpp	/^int defwRow (const char*  rowName, const char*  rowType, int  x_orig, int  y_orig, int  orient, int  do_count, int  do_increment, int  xstep, int  ystep) {$/;"	f
defwRow	def/defwWriter.cpp	/^defwRow(const char  *rowName,$/;"	f
defwRowCbk	def/defwWriterCalls.cpp	72;"	d	file:
defwRowCbkType	cdef/defwWriterCalls.h	/^  defwRowCbkType = 13,$/;"	e	enum:__anon13
defwRowCbkType	def/defwWriterCalls.hpp	/^  defwRowCbkType,$/;"	e	enum:__anon11
defwRowCbkType	include/defwWriterCalls.h	/^  defwRowCbkType = 13,$/;"	e	enum:__anon4
defwRowCbkType	include/defwWriterCalls.hpp	/^  defwRowCbkType,$/;"	e	enum:__anon5
defwRowStr	cdef/xdefwWriter.cpp	/^int defwRowStr (const char*  rowName, const char*  rowType, int  x_orig, int  y_orig, const char*  orient, int  do_count, int  do_increment, int  xstep, int  ystep) {$/;"	f
defwRowStr	def/defwWriter.cpp	/^defwRowStr(const char   *rowName,$/;"	f
defwSNetCbk	def/defwWriterCalls.cpp	83;"	d	file:
defwSNetCbkType	cdef/defwWriterCalls.h	/^  defwSNetCbkType = 24,$/;"	e	enum:__anon13
defwSNetCbkType	def/defwWriterCalls.hpp	/^  defwSNetCbkType,$/;"	e	enum:__anon11
defwSNetCbkType	include/defwWriterCalls.h	/^  defwSNetCbkType = 24,$/;"	e	enum:__anon4
defwSNetCbkType	include/defwWriterCalls.hpp	/^  defwSNetCbkType,$/;"	e	enum:__anon5
defwScanchain	cdef/xdefwWriter.cpp	/^int defwScanchain (const char*  name) {$/;"	f
defwScanchain	def/defwWriter.cpp	/^defwScanchain(const char *name)$/;"	f
defwScanchainCbk	def/defwWriterCalls.cpp	86;"	d	file:
defwScanchainCbkType	cdef/defwWriterCalls.h	/^  defwScanchainCbkType = 27,$/;"	e	enum:__anon13
defwScanchainCbkType	def/defwWriterCalls.hpp	/^  defwScanchainCbkType,$/;"	e	enum:__anon11
defwScanchainCbkType	include/defwWriterCalls.h	/^  defwScanchainCbkType = 27,$/;"	e	enum:__anon4
defwScanchainCbkType	include/defwWriterCalls.hpp	/^  defwScanchainCbkType,$/;"	e	enum:__anon5
defwScanchainCommonscanpins	cdef/xdefwWriter.cpp	/^int defwScanchainCommonscanpins (const char*  inst1, const char*  pin1, const char*  inst2, const char*  pin2) {$/;"	f
defwScanchainCommonscanpins	def/defwWriter.cpp	/^defwScanchainCommonscanpins(const char  *inst1,$/;"	f
defwScanchainFloating	cdef/xdefwWriter.cpp	/^int defwScanchainFloating (const char*  name, const char*  inst1, const char*  pin1, const char*  inst2, const char*  pin2) {$/;"	f
defwScanchainFloating	def/defwWriter.cpp	/^defwScanchainFloating(const char    *name,$/;"	f
defwScanchainFloatingBits	cdef/xdefwWriter.cpp	/^int defwScanchainFloatingBits (const char*  name, const char*  inst1, const char*  pin1, const char*  inst2, const char*  pin2, int    bits) {$/;"	f
defwScanchainFloatingBits	def/defwWriter.cpp	/^defwScanchainFloatingBits(const char    *name,$/;"	f
defwScanchainOrdered	cdef/xdefwWriter.cpp	/^int defwScanchainOrdered (const char*  name1, const char*  inst1, const char*  pin1, const char*  inst2, const char*  pin2, const char*  name2, const char*  inst3, const char*  pin3, const char*  inst4, const char*  pin4) {$/;"	f
defwScanchainOrdered	def/defwWriter.cpp	/^defwScanchainOrdered(const char *name1,$/;"	f
defwScanchainOrderedBits	cdef/xdefwWriter.cpp	/^int defwScanchainOrderedBits (const char*  name1, const char*  inst1, const char*  pin1, const char*  inst2, const char*  pin2, int    bits1, const char*  name2, const char*  inst3, const char*  pin3, const char*  inst4, const char*  pin4, int    bits2) {$/;"	f
defwScanchainOrderedBits	def/defwWriter.cpp	/^defwScanchainOrderedBits(const char *name1,$/;"	f
defwScanchainPartition	cdef/xdefwWriter.cpp	/^int defwScanchainPartition (const char*  name, int  maxBits) {$/;"	f
defwScanchainPartition	def/defwWriter.cpp	/^defwScanchainPartition(const char   *name,$/;"	f
defwScanchainStart	cdef/xdefwWriter.cpp	/^int defwScanchainStart (const char*  inst, const char*  pin) {$/;"	f
defwScanchainStart	def/defwWriter.cpp	/^defwScanchainStart(const char   *inst,$/;"	f
defwScanchainStop	cdef/xdefwWriter.cpp	/^int defwScanchainStop (const char*  inst, const char*  pin) {$/;"	f
defwScanchainStop	def/defwWriter.cpp	/^defwScanchainStop(const char    *inst,$/;"	f
defwSectionNames	def/defwWriterCalls.cpp	/^char defwSectionNames[MAXCBS] [80] = {"Version",$/;"	v
defwSetArrayCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetArrayCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetArrayCbk	def/defwWriterCalls.cpp	/^void defwSetArrayCbk(defwVoidCbkFnType f) {$/;"	f
defwSetAssertionCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetAssertionCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetAssertionCbk	def/defwWriterCalls.cpp	/^void defwSetAssertionCbk(defwVoidCbkFnType f) {$/;"	f
defwSetBlockageCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetBlockageCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetBlockageCbk	def/defwWriterCalls.cpp	/^void defwSetBlockageCbk(defwVoidCbkFnType f) {$/;"	f
defwSetBusBitCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetBusBitCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetBusBitCbk	def/defwWriterCalls.cpp	/^void defwSetBusBitCbk(defwVoidCbkFnType f) {$/;"	f
defwSetCannotOccupyCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetCannotOccupyCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetCannotOccupyCbk	def/defwWriterCalls.cpp	/^void defwSetCannotOccupyCbk(defwVoidCbkFnType f) {$/;"	f
defwSetCanplaceCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetCanplaceCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetCanplaceCbk	def/defwWriterCalls.cpp	/^void defwSetCanplaceCbk(defwVoidCbkFnType f) {$/;"	f
defwSetCaseSensitiveCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetCaseSensitiveCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetCaseSensitiveCbk	def/defwWriterCalls.cpp	/^void defwSetCaseSensitiveCbk(defwVoidCbkFnType f) {$/;"	f
defwSetComponentCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetComponentCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetComponentCbk	def/defwWriterCalls.cpp	/^void defwSetComponentCbk(defwVoidCbkFnType f) {$/;"	f
defwSetConstraintCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetConstraintCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetConstraintCbk	def/defwWriterCalls.cpp	/^void defwSetConstraintCbk(defwVoidCbkFnType f) {$/;"	f
defwSetDefaultCapCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetDefaultCapCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetDefaultCapCbk	def/defwWriterCalls.cpp	/^void defwSetDefaultCapCbk(defwVoidCbkFnType f) {$/;"	f
defwSetDesignCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetDesignCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetDesignCbk	def/defwWriterCalls.cpp	/^void defwSetDesignCbk(defwVoidCbkFnType f) {$/;"	f
defwSetDesignEndCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetDesignEndCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetDesignEndCbk	def/defwWriterCalls.cpp	/^void defwSetDesignEndCbk(defwVoidCbkFnType f) {$/;"	f
defwSetDieAreaCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetDieAreaCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetDieAreaCbk	def/defwWriterCalls.cpp	/^void defwSetDieAreaCbk(defwVoidCbkFnType f) {$/;"	f
defwSetDividerCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetDividerCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetDividerCbk	def/defwWriterCalls.cpp	/^void defwSetDividerCbk(defwVoidCbkFnType f) {$/;"	f
defwSetExtCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetExtCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetExtCbk	def/defwWriterCalls.cpp	/^void defwSetExtCbk(defwVoidCbkFnType f) {$/;"	f
defwSetFloorPlanCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetFloorPlanCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetFloorPlanCbk	def/defwWriterCalls.cpp	/^void defwSetFloorPlanCbk(defwVoidCbkFnType f) {$/;"	f
defwSetGcellGridCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetGcellGridCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetGcellGridCbk	def/defwWriterCalls.cpp	/^void defwSetGcellGridCbk(defwVoidCbkFnType f) {$/;"	f
defwSetGroupCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetGroupCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetGroupCbk	def/defwWriterCalls.cpp	/^void defwSetGroupCbk(defwVoidCbkFnType f) {$/;"	f
defwSetHistoryCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetHistoryCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetHistoryCbk	def/defwWriterCalls.cpp	/^void defwSetHistoryCbk(defwVoidCbkFnType f) {$/;"	f
defwSetIOTimingCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetIOTimingCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetIOTimingCbk	def/defwWriterCalls.cpp	/^void defwSetIOTimingCbk(defwVoidCbkFnType f) {$/;"	f
defwSetLogFunction	cdef/xdefwWriterCalls.cpp	/^void defwSetLogFunction (::DEFI_LOG_FUNCTION  p0) {$/;"	f
defwSetLogFunction	def/defwWriterCalls.cpp	/^void defwSetLogFunction(DEFI_LOG_FUNCTION f) {$/;"	f
defwSetNetCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetNetCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetNetCbk	def/defwWriterCalls.cpp	/^void defwSetNetCbk(defwVoidCbkFnType f) {$/;"	f
defwSetPinCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetPinCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetPinCbk	def/defwWriterCalls.cpp	/^void defwSetPinCbk(defwVoidCbkFnType f) {$/;"	f
defwSetPinPropCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetPinPropCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetPinPropCbk	def/defwWriterCalls.cpp	/^void defwSetPinPropCbk(defwVoidCbkFnType f) {$/;"	f
defwSetPropDefCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetPropDefCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetPropDefCbk	def/defwWriterCalls.cpp	/^void defwSetPropDefCbk(defwVoidCbkFnType f) {$/;"	f
defwSetRegionCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetRegionCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetRegionCbk	def/defwWriterCalls.cpp	/^void defwSetRegionCbk(defwVoidCbkFnType f) {$/;"	f
defwSetRegisterUnusedCallbacks	cdef/xdefwWriterCalls.cpp	/^void defwSetRegisterUnusedCallbacks () {$/;"	f
defwSetRegisterUnusedCallbacks	def/defwWriterCalls.cpp	/^void defwSetRegisterUnusedCallbacks() {$/;"	f
defwSetRowCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetRowCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetRowCbk	def/defwWriterCalls.cpp	/^void defwSetRowCbk(defwVoidCbkFnType f) {$/;"	f
defwSetSNetCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetSNetCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetSNetCbk	def/defwWriterCalls.cpp	/^void defwSetSNetCbk(defwVoidCbkFnType f) {$/;"	f
defwSetScanchainCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetScanchainCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetScanchainCbk	def/defwWriterCalls.cpp	/^void defwSetScanchainCbk(defwVoidCbkFnType f) {$/;"	f
defwSetTechnologyCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetTechnologyCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetTechnologyCbk	def/defwWriterCalls.cpp	/^void defwSetTechnologyCbk(defwVoidCbkFnType f) {$/;"	f
defwSetTrackCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetTrackCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetTrackCbk	def/defwWriterCalls.cpp	/^void defwSetTrackCbk(defwVoidCbkFnType f) {$/;"	f
defwSetUnitsCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetUnitsCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetUnitsCbk	def/defwWriterCalls.cpp	/^void defwSetUnitsCbk(defwVoidCbkFnType f) {$/;"	f
defwSetUnusedCallbacks	cdef/xdefwWriterCalls.cpp	/^void defwSetUnusedCallbacks (::defwVoidCbkFnType  func) {$/;"	f
defwSetUnusedCallbacks	def/defwWriterCalls.cpp	/^void defwSetUnusedCallbacks(defwVoidCbkFnType func) {$/;"	f
defwSetUserData	cdef/xdefwWriterCalls.cpp	/^void defwSetUserData (defiUserData  p0) {$/;"	f
defwSetUserData	def/defwWriterCalls.cpp	/^void defwSetUserData(defiUserData d) {$/;"	f
defwSetVersionCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetVersionCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetVersionCbk	def/defwWriterCalls.cpp	/^void defwSetVersionCbk(defwVoidCbkFnType f) {$/;"	f
defwSetViaCbk	cdef/xdefwWriterCalls.cpp	/^void defwSetViaCbk (::defwVoidCbkFnType p0) {$/;"	f
defwSetViaCbk	def/defwWriterCalls.cpp	/^void defwSetViaCbk(defwVoidCbkFnType f) {$/;"	f
defwSetWarningLogFunction	cdef/xdefwWriterCalls.cpp	/^void defwSetWarningLogFunction (::DEFI_WARNING_LOG_FUNCTION  p0) {$/;"	f
defwSetWarningLogFunction	def/defwWriterCalls.cpp	/^void defwSetWarningLogFunction(DEFI_WARNING_LOG_FUNCTION f) {$/;"	f
defwSlotLayer	cdef/xdefwWriter.cpp	/^int defwSlotLayer (const char*  layerName) {$/;"	f
defwSlotLayer	def/defwWriter.cpp	/^defwSlotLayer(const char *layerName)$/;"	f
defwSlotPolygon	cdef/xdefwWriter.cpp	/^int defwSlotPolygon (int  num_polys, double*  xl, double*  yl) {$/;"	f
defwSlotPolygon	def/defwWriter.cpp	/^defwSlotPolygon(int     num_polys,$/;"	f
defwSlotRect	cdef/xdefwWriter.cpp	/^int defwSlotRect (int  xl, int  yl, int  xh, int  yh) {$/;"	f
defwSlotRect	def/defwWriter.cpp	/^defwSlotRect(int    xl,$/;"	f
defwSpNetShield	def/defwWriter.cpp	/^int defwSpNetShield = 0; \/\/ for special net shieldNetName$/;"	v
defwSpecialNet	cdef/xdefwWriter.cpp	/^int defwSpecialNet (const char*  name) {$/;"	f
defwSpecialNet	def/defwWriter.cpp	/^defwSpecialNet(const char *name)$/;"	f
defwSpecialNetConnection	cdef/xdefwWriter.cpp	/^int defwSpecialNetConnection (const char*  inst, const char*  pin, int  synthesized) {$/;"	f
defwSpecialNetConnection	def/defwWriter.cpp	/^defwSpecialNetConnection(const char *inst,$/;"	f
defwSpecialNetEndOneNet	cdef/xdefwWriter.cpp	/^int defwSpecialNetEndOneNet () {$/;"	f
defwSpecialNetEndOneNet	def/defwWriter.cpp	/^defwSpecialNetEndOneNet()$/;"	f
defwSpecialNetEstCap	cdef/xdefwWriter.cpp	/^int defwSpecialNetEstCap (double  value) {$/;"	f
defwSpecialNetEstCap	def/defwWriter.cpp	/^defwSpecialNetEstCap(double d)$/;"	f
defwSpecialNetFixedbump	cdef/xdefwWriter.cpp	/^int defwSpecialNetFixedbump () {$/;"	f
defwSpecialNetFixedbump	def/defwWriter.cpp	/^defwSpecialNetFixedbump()$/;"	f
defwSpecialNetOptions	def/defwWriter.cpp	/^defwSpecialNetOptions()$/;"	f
defwSpecialNetOriginal	cdef/xdefwWriter.cpp	/^int defwSpecialNetOriginal (const char*  name) {$/;"	f
defwSpecialNetOriginal	def/defwWriter.cpp	/^defwSpecialNetOriginal(const char *name)$/;"	f
defwSpecialNetPathEnd	cdef/xdefwWriter.cpp	/^int defwSpecialNetPathEnd () {$/;"	f
defwSpecialNetPathEnd	def/defwWriter.cpp	/^defwSpecialNetPathEnd()$/;"	f
defwSpecialNetPathLayer	cdef/xdefwWriter.cpp	/^int defwSpecialNetPathLayer (const char*  name) {$/;"	f
defwSpecialNetPathLayer	def/defwWriter.cpp	/^defwSpecialNetPathLayer(const char *name)$/;"	f
defwSpecialNetPathMask	cdef/xdefwWriter.cpp	/^int defwSpecialNetPathMask (int  colorMask) {$/;"	f
defwSpecialNetPathMask	def/defwWriter.cpp	/^defwSpecialNetPathMask(int colorMask)$/;"	f
defwSpecialNetPathPoint	cdef/xdefwWriter.cpp	/^int defwSpecialNetPathPoint (int  numPts, double*  pointx, double*  pointy) {$/;"	f
defwSpecialNetPathPoint	def/defwWriter.cpp	/^defwSpecialNetPathPoint(int     numPts,$/;"	f
defwSpecialNetPathPointWithWireExt	cdef/xdefwWriter.cpp	/^int defwSpecialNetPathPointWithWireExt (int  numPts, double*  pointx, double*  pointy, double*  optValue) {$/;"	f
defwSpecialNetPathPointWithWireExt	def/defwWriter.cpp	/^defwSpecialNetPathPointWithWireExt(int      numPts,$/;"	f
defwSpecialNetPathShape	cdef/xdefwWriter.cpp	/^int defwSpecialNetPathShape (const char*  shapeType) {$/;"	f
defwSpecialNetPathShape	def/defwWriter.cpp	/^defwSpecialNetPathShape(const char *typ)$/;"	f
defwSpecialNetPathStart	cdef/xdefwWriter.cpp	/^int defwSpecialNetPathStart (const char*  typ) {$/;"	f
defwSpecialNetPathStart	def/defwWriter.cpp	/^defwSpecialNetPathStart(const char *typ)$/;"	f
defwSpecialNetPathStyle	cdef/xdefwWriter.cpp	/^int defwSpecialNetPathStyle (int  styleNum) {$/;"	f
defwSpecialNetPathStyle	def/defwWriter.cpp	/^defwSpecialNetPathStyle(int styleNum)$/;"	f
defwSpecialNetPathVia	cdef/xdefwWriter.cpp	/^int defwSpecialNetPathVia (const char*  name) {$/;"	f
defwSpecialNetPathVia	def/defwWriter.cpp	/^defwSpecialNetPathVia(const char *name)$/;"	f
defwSpecialNetPathViaData	cdef/xdefwWriter.cpp	/^int defwSpecialNetPathViaData (int  numX, int  numY, int  stepX, int  stepY) {$/;"	f
defwSpecialNetPathViaData	def/defwWriter.cpp	/^defwSpecialNetPathViaData(int   numX,$/;"	f
defwSpecialNetPathWidth	cdef/xdefwWriter.cpp	/^int defwSpecialNetPathWidth (int  width) {$/;"	f
defwSpecialNetPathWidth	def/defwWriter.cpp	/^defwSpecialNetPathWidth(int w)$/;"	f
defwSpecialNetPattern	cdef/xdefwWriter.cpp	/^int defwSpecialNetPattern (const char*  name) {$/;"	f
defwSpecialNetPattern	def/defwWriter.cpp	/^defwSpecialNetPattern(const char *name)$/;"	f
defwSpecialNetPolygon	cdef/xdefwWriter.cpp	/^int defwSpecialNetPolygon (const char*  layerName, int  num_polys, double*  xl, double*  yl) {$/;"	f
defwSpecialNetPolygon	def/defwWriter.cpp	/^defwSpecialNetPolygon(const char* layerName,$/;"	f
defwSpecialNetRect	cdef/xdefwWriter.cpp	/^int defwSpecialNetRect (const char*  layerName, int  xl, int  yl, int  xh, int  yh) {$/;"	f
defwSpecialNetRect	def/defwWriter.cpp	/^defwSpecialNetRect(const char   *layerName,$/;"	f
defwSpecialNetShieldEnd	cdef/xdefwWriter.cpp	/^int defwSpecialNetShieldEnd () {$/;"	f
defwSpecialNetShieldEnd	def/defwWriter.cpp	/^defwSpecialNetShieldEnd()$/;"	f
defwSpecialNetShieldLayer	cdef/xdefwWriter.cpp	/^int defwSpecialNetShieldLayer (const char*  name) {$/;"	f
defwSpecialNetShieldLayer	def/defwWriter.cpp	/^defwSpecialNetShieldLayer(const char *name)$/;"	f
defwSpecialNetShieldNetName	cdef/xdefwWriter.cpp	/^int defwSpecialNetShieldNetName (const char*  name) {$/;"	f
defwSpecialNetShieldNetName	def/defwWriter.cpp	/^defwSpecialNetShieldNetName(const char *name)$/;"	f
defwSpecialNetShieldPoint	cdef/xdefwWriter.cpp	/^int defwSpecialNetShieldPoint (int  numPts, double*  pointx, double*  pointy) {$/;"	f
defwSpecialNetShieldPoint	def/defwWriter.cpp	/^defwSpecialNetShieldPoint(int       numPts,$/;"	f
defwSpecialNetShieldShape	cdef/xdefwWriter.cpp	/^int defwSpecialNetShieldShape (const char*  shapeType) {$/;"	f
defwSpecialNetShieldShape	def/defwWriter.cpp	/^defwSpecialNetShieldShape(const char *typ)$/;"	f
defwSpecialNetShieldStart	cdef/xdefwWriter.cpp	/^int defwSpecialNetShieldStart (const char*  name) {$/;"	f
defwSpecialNetShieldStart	def/defwWriter.cpp	/^defwSpecialNetShieldStart(const char *name)$/;"	f
defwSpecialNetShieldVia	cdef/xdefwWriter.cpp	/^int defwSpecialNetShieldVia (const char*  name) {$/;"	f
defwSpecialNetShieldVia	def/defwWriter.cpp	/^defwSpecialNetShieldVia(const char *name)$/;"	f
defwSpecialNetShieldViaData	cdef/xdefwWriter.cpp	/^int defwSpecialNetShieldViaData (int  numX, int  numY, int  stepX, int  stepY) {$/;"	f
defwSpecialNetShieldViaData	def/defwWriter.cpp	/^defwSpecialNetShieldViaData(int numX,$/;"	f
defwSpecialNetShieldWidth	cdef/xdefwWriter.cpp	/^int defwSpecialNetShieldWidth (int  width) {$/;"	f
defwSpecialNetShieldWidth	def/defwWriter.cpp	/^defwSpecialNetShieldWidth(int w)$/;"	f
defwSpecialNetSource	cdef/xdefwWriter.cpp	/^int defwSpecialNetSource (const char*  name) {$/;"	f
defwSpecialNetSource	def/defwWriter.cpp	/^defwSpecialNetSource(const char *name)$/;"	f
defwSpecialNetSpacing	cdef/xdefwWriter.cpp	/^int defwSpecialNetSpacing (const char*  layer, int  spacing, double  minwidth, double  maxwidth) {$/;"	f
defwSpecialNetSpacing	def/defwWriter.cpp	/^defwSpecialNetSpacing(const char    *layer,$/;"	f
defwSpecialNetUse	cdef/xdefwWriter.cpp	/^int defwSpecialNetUse (const char*  name) {$/;"	f
defwSpecialNetUse	def/defwWriter.cpp	/^defwSpecialNetUse(const char *name)$/;"	f
defwSpecialNetVia	cdef/xdefwWriter.cpp	/^int defwSpecialNetVia (const char*  layerName) {$/;"	f
defwSpecialNetVia	def/defwWriter.cpp	/^defwSpecialNetVia(const char *layerName)$/;"	f
defwSpecialNetViaPoints	cdef/xdefwWriter.cpp	/^int defwSpecialNetViaPoints (int  num_points, double*  xl, double*  yl) {$/;"	f
defwSpecialNetViaPoints	def/defwWriter.cpp	/^defwSpecialNetViaPoints(int     num_points,$/;"	f
defwSpecialNetViaWithOrient	cdef/xdefwWriter.cpp	/^int defwSpecialNetViaWithOrient (const char*  layerName, int  orient) {$/;"	f
defwSpecialNetViaWithOrient	def/defwWriter.cpp	/^defwSpecialNetViaWithOrient(const char  *layerName,$/;"	f
defwSpecialNetVoltage	cdef/xdefwWriter.cpp	/^int defwSpecialNetVoltage (double  v) {$/;"	f
defwSpecialNetVoltage	def/defwWriter.cpp	/^defwSpecialNetVoltage(double d)$/;"	f
defwSpecialNetWeight	cdef/xdefwWriter.cpp	/^int defwSpecialNetWeight (double  value) {$/;"	f
defwSpecialNetWeight	def/defwWriter.cpp	/^defwSpecialNetWeight(double d)$/;"	f
defwSpecialNetWidth	cdef/xdefwWriter.cpp	/^int defwSpecialNetWidth (const char*  layer, int  width) {$/;"	f
defwSpecialNetWidth	def/defwWriter.cpp	/^defwSpecialNetWidth(const char  *layer,$/;"	f
defwStartBeginext	cdef/xdefwWriter.cpp	/^int defwStartBeginext (const char*  name) {$/;"	f
defwStartBeginext	def/defwWriter.cpp	/^defwStartBeginext(const char *name)$/;"	f
defwStartBlockages	cdef/xdefwWriter.cpp	/^int defwStartBlockages (int  count) {$/;"	f
defwStartBlockages	def/defwWriter.cpp	/^defwStartBlockages(int count)$/;"	f
defwStartComponents	cdef/xdefwWriter.cpp	/^int defwStartComponents (int  count) {$/;"	f
defwStartComponents	def/defwWriter.cpp	/^defwStartComponents(int count)$/;"	f
defwStartConstraints	cdef/xdefwWriter.cpp	/^int defwStartConstraints (int  count) {$/;"	f
defwStartConstraints	def/defwWriter.cpp	/^defwStartConstraints(int count)$/;"	f
defwStartDefaultCap	cdef/xdefwWriter.cpp	/^int defwStartDefaultCap (int  count) {$/;"	f
defwStartDefaultCap	def/defwWriter.cpp	/^defwStartDefaultCap(int count)$/;"	f
defwStartFills	cdef/xdefwWriter.cpp	/^int defwStartFills (int  count) {$/;"	f
defwStartFills	def/defwWriter.cpp	/^defwStartFills(int count)$/;"	f
defwStartGroups	cdef/xdefwWriter.cpp	/^int defwStartGroups (int  count) {$/;"	f
defwStartGroups	def/defwWriter.cpp	/^defwStartGroups(int count)$/;"	f
defwStartIOTimings	cdef/xdefwWriter.cpp	/^int defwStartIOTimings (int  count) {$/;"	f
defwStartIOTimings	def/defwWriter.cpp	/^defwStartIOTimings(int count)$/;"	f
defwStartNets	cdef/xdefwWriter.cpp	/^int defwStartNets (int  count) {$/;"	f
defwStartNets	def/defwWriter.cpp	/^defwStartNets(int count)$/;"	f
defwStartNonDefaultRules	cdef/xdefwWriter.cpp	/^int defwStartNonDefaultRules (int  count) {$/;"	f
defwStartNonDefaultRules	def/defwWriter.cpp	/^defwStartNonDefaultRules(int count)$/;"	f
defwStartPinProperties	cdef/xdefwWriter.cpp	/^int defwStartPinProperties (int  count) {$/;"	f
defwStartPinProperties	def/defwWriter.cpp	/^defwStartPinProperties(int count)$/;"	f
defwStartPins	cdef/xdefwWriter.cpp	/^int defwStartPins (int  count) {$/;"	f
defwStartPins	def/defwWriter.cpp	/^defwStartPins(int count)$/;"	f
defwStartPropDef	cdef/xdefwWriter.cpp	/^int defwStartPropDef () {$/;"	f
defwStartPropDef	def/defwWriter.cpp	/^defwStartPropDef()$/;"	f
defwStartRegions	cdef/xdefwWriter.cpp	/^int defwStartRegions (int  count) {$/;"	f
defwStartRegions	def/defwWriter.cpp	/^defwStartRegions(int count)$/;"	f
defwStartScanchains	cdef/xdefwWriter.cpp	/^int defwStartScanchains (int  count) {$/;"	f
defwStartScanchains	def/defwWriter.cpp	/^defwStartScanchains(int count)$/;"	f
defwStartSlots	cdef/xdefwWriter.cpp	/^int defwStartSlots (int  count) {$/;"	f
defwStartSlots	def/defwWriter.cpp	/^defwStartSlots(int count)$/;"	f
defwStartSpecialNets	cdef/xdefwWriter.cpp	/^int defwStartSpecialNets (int  count) {$/;"	f
defwStartSpecialNets	def/defwWriter.cpp	/^defwStartSpecialNets(int count)$/;"	f
defwStartStyles	cdef/xdefwWriter.cpp	/^int defwStartStyles (int  count) {$/;"	f
defwStartStyles	def/defwWriter.cpp	/^defwStartStyles(int count)$/;"	f
defwStartVias	cdef/xdefwWriter.cpp	/^int defwStartVias (int  count) {$/;"	f
defwStartVias	def/defwWriter.cpp	/^defwStartVias(int count)$/;"	f
defwState	def/defwWriter.cpp	/^int defwState = DEFW_UNINIT;  \/\/ Current state of writer$/;"	v
defwStateStr	def/defwWriter.cpp	/^char defwStateStr[MAXSYN] [80] = {$/;"	v
defwStringPropDef	cdef/xdefwWriter.cpp	/^int defwStringPropDef (const char*  objType, const char*  propName, double  leftRange, double  rightRange, const char*  propValue) {$/;"	f
defwStringPropDef	def/defwWriter.cpp	/^defwStringPropDef(const char    *objType,$/;"	f
defwStringProperty	cdef/xdefwWriter.cpp	/^int defwStringProperty (const char*  propName, const char*  propValue) {$/;"	f
defwStringProperty	def/defwWriter.cpp	/^defwStringProperty(const char   *propName,$/;"	f
defwStyles	cdef/xdefwWriter.cpp	/^int defwStyles (int  styleNums, int  num_points, double*  xp, double*  yp) {$/;"	f
defwStyles	def/defwWriter.cpp	/^defwStyles(int      styleNums,$/;"	f
defwTechCbk	def/defwWriterCalls.cpp	65;"	d	file:
defwTechCbkType	cdef/defwWriterCalls.h	/^  defwTechCbkType = 6,$/;"	e	enum:__anon13
defwTechCbkType	def/defwWriterCalls.hpp	/^  defwTechCbkType,$/;"	e	enum:__anon11
defwTechCbkType	include/defwWriterCalls.h	/^  defwTechCbkType = 6,$/;"	e	enum:__anon4
defwTechCbkType	include/defwWriterCalls.hpp	/^  defwTechCbkType,$/;"	e	enum:__anon5
defwTechnology	cdef/xdefwWriter.cpp	/^int defwTechnology (const char*  technology) {$/;"	f
defwTechnology	def/defwWriter.cpp	/^defwTechnology(const char *technology)$/;"	f
defwTrackCbk	def/defwWriterCalls.cpp	73;"	d	file:
defwTrackCbkType	cdef/defwWriterCalls.h	/^  defwTrackCbkType = 14,$/;"	e	enum:__anon13
defwTrackCbkType	def/defwWriterCalls.hpp	/^  defwTrackCbkType,$/;"	e	enum:__anon11
defwTrackCbkType	include/defwWriterCalls.h	/^  defwTrackCbkType = 14,$/;"	e	enum:__anon4
defwTrackCbkType	include/defwWriterCalls.hpp	/^  defwTrackCbkType,$/;"	e	enum:__anon5
defwTracks	cdef/xdefwWriter.cpp	/^int defwTracks (const char*  master, int  doStart, int  doCount, int  doStep, int  numLayers, const char**  layers, int  mask, int  sameMask) {$/;"	f
defwTracks	def/defwWriter.cpp	/^defwTracks(const char   *master,$/;"	f
defwUnits	cdef/xdefwWriter.cpp	/^int defwUnits (int  units) {$/;"	f
defwUnits	def/defwWriter.cpp	/^defwUnits(int units)$/;"	f
defwUnitsCbk	def/defwWriterCalls.cpp	68;"	d	file:
defwUnitsCbkType	cdef/defwWriterCalls.h	/^  defwUnitsCbkType = 9,$/;"	e	enum:__anon13
defwUnitsCbkType	def/defwWriterCalls.hpp	/^  defwUnitsCbkType,$/;"	e	enum:__anon11
defwUnitsCbkType	include/defwWriterCalls.h	/^  defwUnitsCbkType = 9,$/;"	e	enum:__anon4
defwUnitsCbkType	include/defwWriterCalls.hpp	/^  defwUnitsCbkType,$/;"	e	enum:__anon5
defwUnspecifiedCbkType	cdef/defwWriterCalls.h	/^  defwUnspecifiedCbkType = 0,$/;"	e	enum:__anon13
defwUnspecifiedCbkType	def/defwWriterCalls.hpp	/^  defwUnspecifiedCbkType = 0,$/;"	e	enum:__anon11
defwUnspecifiedCbkType	include/defwWriterCalls.h	/^  defwUnspecifiedCbkType = 0,$/;"	e	enum:__anon4
defwUnspecifiedCbkType	include/defwWriterCalls.hpp	/^  defwUnspecifiedCbkType = 0,$/;"	e	enum:__anon5
defwUnusedCount	def/defwWriterCalls.cpp	/^static int defwUnusedCount[100];$/;"	v	file:
defwUserData	def/defwWriterCalls.cpp	/^defiUserData defwUserData = 0;$/;"	v
defwVersion	cdef/xdefwWriter.cpp	/^int defwVersion (int  vers1, int  vers2) {$/;"	f
defwVersion	def/defwWriter.cpp	/^defwVersion(int vers1,$/;"	f
defwVersionCbk	def/defwWriterCalls.cpp	60;"	d	file:
defwVersionCbkType	cdef/defwWriterCalls.h	/^  defwVersionCbkType = 1,$/;"	e	enum:__anon13
defwVersionCbkType	def/defwWriterCalls.hpp	/^  defwVersionCbkType,$/;"	e	enum:__anon11
defwVersionCbkType	include/defwWriterCalls.h	/^  defwVersionCbkType = 1,$/;"	e	enum:__anon4
defwVersionCbkType	include/defwWriterCalls.hpp	/^  defwVersionCbkType,$/;"	e	enum:__anon5
defwViaCbk	def/defwWriterCalls.cpp	78;"	d	file:
defwViaCbkType	cdef/defwWriterCalls.h	/^  defwViaCbkType = 19,$/;"	e	enum:__anon13
defwViaCbkType	def/defwWriterCalls.hpp	/^  defwViaCbkType,$/;"	e	enum:__anon11
defwViaCbkType	include/defwWriterCalls.h	/^  defwViaCbkType = 19,$/;"	e	enum:__anon4
defwViaCbkType	include/defwWriterCalls.hpp	/^  defwViaCbkType,$/;"	e	enum:__anon5
defwViaHasVal	def/defwWriter.cpp	/^static int defwViaHasVal = 0;    \/\/ keep track only ViaRule|Pattern$/;"	v	file:
defwViaName	cdef/xdefwWriter.cpp	/^int defwViaName (const char*  name) {$/;"	f
defwViaName	def/defwWriter.cpp	/^defwViaName(const char *name)$/;"	f
defwViaPattern	cdef/xdefwWriter.cpp	/^int defwViaPattern (const char*  patternName) {$/;"	f
defwViaPattern	def/defwWriter.cpp	/^defwViaPattern(const char *pattern)$/;"	f
defwViaPolygon	cdef/xdefwWriter.cpp	/^int defwViaPolygon (const char*  layerName, int  num_polys, double*  xl, double*  yl, int  mask) {$/;"	f
defwViaPolygon	def/defwWriter.cpp	/^defwViaPolygon(const char   *layerName,$/;"	f
defwViaRect	cdef/xdefwWriter.cpp	/^int defwViaRect (const char*  layerName, int  xl, int  yl, int  xh, int  yh, int  mask) {$/;"	f
defwViaRect	def/defwWriter.cpp	/^defwViaRect(const char  *layerNames,$/;"	f
defwViaViarule	cdef/xdefwWriter.cpp	/^int defwViaViarule (const char*  viaRuleName, double  xCutSize, double  yCutSize, const char*  botMetalLayer, const char*  cutLayer, const char*  topMetalLayer, double  xCutSpacing, double  yCutSpacing, double  xBotEnc, double  yBotEnc, double  xTopEnc, double  yTopEnc) {$/;"	f
defwViaViarule	def/defwWriter.cpp	/^defwViaViarule(const char   *viaRuleName,$/;"	f
defwViaViaruleOffset	cdef/xdefwWriter.cpp	/^int defwViaViaruleOffset (int  xBotOffset, int  yBotOffset, int  xTopOffset, int  yTopOffset) {$/;"	f
defwViaViaruleOffset	def/defwWriter.cpp	/^defwViaViaruleOffset(int    xBotOffset,$/;"	f
defwViaViaruleOrigin	cdef/xdefwWriter.cpp	/^int defwViaViaruleOrigin (int  xOffset, int  yOffset) {$/;"	f
defwViaViaruleOrigin	def/defwWriter.cpp	/^defwViaViaruleOrigin(int    xOffset,$/;"	f
defwViaViarulePattern	cdef/xdefwWriter.cpp	/^int defwViaViarulePattern (const char*  cutPattern) {$/;"	f
defwViaViarulePattern	def/defwWriter.cpp	/^defwViaViarulePattern(const char *cutPattern)$/;"	f
defwViaViaruleRowCol	cdef/xdefwWriter.cpp	/^int defwViaViaruleRowCol (int  numCutRows, int  numCutCols) {$/;"	f
defwViaViaruleRowCol	def/defwWriter.cpp	/^defwViaViaruleRowCol(int    numCutRows,$/;"	f
defwVoidCbkFnType	cdef/defwWriterCalls.h	/^typedef int (*defwVoidCbkFnType) ( defwCallbackType_e, defiUserData );$/;"	t
defwVoidCbkFnType	def/defwWriterCalls.hpp	/^typedef int (*defwVoidCbkFnType) ( defwCallbackType_e, defiUserData );$/;"	t
defwVoidCbkFnType	include/defwWriterCalls.h	/^typedef int (*defwVoidCbkFnType) ( defwCallbackType_e, defiUserData );$/;"	t
defwVoidCbkFnType	include/defwWriterCalls.hpp	/^typedef int (*defwVoidCbkFnType) ( defwCallbackType_e, defiUserData );$/;"	t
defwWarningLogFunction	def/defwWriterCalls.cpp	/^DEFI_WARNING_LOG_FUNCTION defwWarningLogFunction;$/;"	v
defwWrite	cdef/xdefwWriterCalls.cpp	/^int defwWrite (FILE * file, const char * fileName, defiUserData  userData) {$/;"	f
defwWrite	def/defwWriterCalls.cpp	/^int defwWrite(FILE* f, const char* fName, defiUserData uData) {$/;"	f
defyyerror	def/def_keywords.cpp	/^defrData::defyyerror(const char *s) {$/;"	f	class:defrData
defyylex	def/def_keywords.cpp	/^defrData::defyylex(YYSTYPE *pYylval) {$/;"	f	class:defrData
delay_spec	def/def.y	/^delay_spec: '+' K_RISEMIN NUMBER $/;"	l
delay_specs	def/def.y	/^delay_specs: \/\/ empty $/;"	l
deltaX1	cdef/defiTypedefs.h	/^  int deltaX1;$/;"	m	struct:defiViaRect
deltaX1	def/defiPath.hpp	/^  int deltaX1;$/;"	m	struct:defiViaRect
deltaX1	include/defiPath.hpp	/^  int deltaX1;$/;"	m	struct:defiViaRect
deltaX1	include/defiTypedefs.h	/^  int deltaX1;$/;"	m	struct:defiViaRect
deltaX2	cdef/defiTypedefs.h	/^  int deltaX2;$/;"	m	struct:defiViaRect
deltaX2	def/defiPath.hpp	/^  int deltaX2;$/;"	m	struct:defiViaRect
deltaX2	include/defiPath.hpp	/^  int deltaX2;$/;"	m	struct:defiViaRect
deltaX2	include/defiTypedefs.h	/^  int deltaX2;$/;"	m	struct:defiViaRect
deltaX_	def/defiPath.hpp	/^  int deltaX_;$/;"	m	class:defiPath
deltaX_	include/defiPath.hpp	/^  int deltaX_;$/;"	m	class:defiPath
deltaY1	cdef/defiTypedefs.h	/^  int deltaY1;$/;"	m	struct:defiViaRect
deltaY1	def/defiPath.hpp	/^  int deltaY1;$/;"	m	struct:defiViaRect
deltaY1	include/defiPath.hpp	/^  int deltaY1;$/;"	m	struct:defiViaRect
deltaY1	include/defiTypedefs.h	/^  int deltaY1;$/;"	m	struct:defiViaRect
deltaY2	cdef/defiTypedefs.h	/^  int deltaY2;$/;"	m	struct:defiViaRect
deltaY2	def/defiPath.hpp	/^  int deltaY2;$/;"	m	struct:defiViaRect
deltaY2	include/defiPath.hpp	/^  int deltaY2;$/;"	m	struct:defiViaRect
deltaY2	include/defiTypedefs.h	/^  int deltaY2;$/;"	m	struct:defiViaRect
deltaY_	def/defiPath.hpp	/^  int deltaY_;$/;"	m	class:defiPath
deltaY_	include/defiPath.hpp	/^  int deltaY_;$/;"	m	class:defiPath
designCB	defwrite/defwriteCbs.cpp	/^int designCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
designRuleWidth	def/defiBlockage.cpp	/^int defiBlockage::designRuleWidth() const {$/;"	f	class:defiBlockage
design_name	def/def.y	/^design_name: K_DESIGN {defData->dumb_mode = 1; defData->no_num = 1; } T_STRING ';' $/;"	l
design_section	def/def.y	/^design_section: array_name | bus_bit_chars | canplace | cannotoccupy |$/;"	l
designendCB	defwrite/defwriteCbs.cpp	/^static int designendCB(defwCallbackType_e c, defiUserData ud) {$/;"	f	file:
diagWidth_	def/defiNonDefault.hpp	/^  double* diagWidth_;$/;"	m	class:defiNonDefault
diagWidth_	include/defiNonDefault.hpp	/^  double* diagWidth_;$/;"	m	class:defiNonDefault
die_area	def/def.y	/^die_area: K_DIEAREA$/;"	l
dieareaCB	defwrite/defwriteCbs.cpp	/^int dieareaCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
diffDefReadFile	defdiff/diffDefRW.cpp	/^int diffDefReadFile(char* inFile, char* outFile, char* ignorePinExtra,$/;"	f
diffUsage	defdiff/differDef.cpp	/^void diffUsage() {$/;"	f
direction	def/defiPartition.cpp	/^char defiPartition::direction() const {$/;"	f	class:defiPartition
direction	def/defiPinCap.cpp	/^const char* defiPin::direction() const {$/;"	f	class:defiPin
directionLength_	def/defiPinCap.hpp	/^  int directionLength_;  \/\/ allocated size of direction$/;"	m	class:defiPin
directionLength_	include/defiPinCap.hpp	/^  int directionLength_;  \/\/ allocated size of direction$/;"	m	class:defiPin
direction_	def/defiFPC.hpp	/^  char direction_; \/\/ H or V$/;"	m	class:defiFPC
direction_	def/defiPartition.hpp	/^  char direction_;   \/\/ 'F' or 'T'$/;"	m	class:defiPartition
direction_	def/defiPinCap.hpp	/^  char* direction_;$/;"	m	class:defiPin
direction_	include/defiFPC.hpp	/^  char direction_; \/\/ H or V$/;"	m	class:defiFPC
direction_	include/defiPartition.hpp	/^  char direction_;   \/\/ 'F' or 'T'$/;"	m	class:defiPartition
direction_	include/defiPinCap.hpp	/^  char* direction_;$/;"	m	class:defiPin
disableDMsgs	def/defrSettings.hpp	/^    int* disableDMsgs;$/;"	m	class:defrSettings
disableDMsgs	include/defrSettings.hpp	/^    int* disableDMsgs;$/;"	m	class:defrSettings
distance	def/defiAssertion.cpp	/^double defiAssertion::distance() const {$/;"	f	class:defiAssertion
dividerCB	defwrite/defwriteCbs.cpp	/^int dividerCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
divider_char	def/def.y	/^divider_char: K_DIVIDERCHAR QSTRING ';'$/;"	l
dn	defdiff/diffDefRW.cpp	/^int dn(defrCallbackType_e c, const char* h, defiUserData ud) {$/;"	f
dn	defrw/defrw.cpp	/^int dn(defrCallbackType_e c, const char* h, defiUserData ud) {$/;"	f
dname	defdiff/diffDefRW.cpp	/^int dname(defrCallbackType_e c, const char* string, defiUserData ud) {$/;"	f
dname	defrw/defrw.cpp	/^int dname(defrCallbackType_e c, const char* string, defiUserData ud) {$/;"	f
do_is_keyword	def/defrData.hpp	/^    int  do_is_keyword; $/;"	m	class:defrData
do_is_keyword	include/defrData.hpp	/^    int  do_is_keyword; $/;"	m	class:defrData
done	defrw/defrw.cpp	/^int done(defrCallbackType_e c, void*, defiUserData ud) {$/;"	f
doneDesign	def/defrData.hpp	/^    int doneDesign;      \/\/ keep track if the Design is done parsing$/;"	m	class:defrData
doneDesign	include/defrData.hpp	/^    int doneDesign;      \/\/ keep track if the Design is done parsing$/;"	m	class:defrData
driveCell	def/defiIOTiming.cpp	/^const char* defiIOTiming::driveCell() const {$/;"	f	class:defiIOTiming
driveCellLength_	def/defiIOTiming.hpp	/^  char driveCellLength_;$/;"	m	class:defiIOTiming
driveCellLength_	include/defiIOTiming.hpp	/^  char driveCellLength_;$/;"	m	class:defiIOTiming
driveCell_	def/defiIOTiming.hpp	/^  char* driveCell_;$/;"	m	class:defiIOTiming
driveCell_	include/defiIOTiming.hpp	/^  char* driveCell_;$/;"	m	class:defiIOTiming
dumb_mode	def/defrData.hpp	/^    int  dumb_mode; $/;"	m	class:defrData
dumb_mode	include/defrData.hpp	/^    int  dumb_mode; $/;"	m	class:defrData
dval	def/defrData.hpp	/^        double dval ;$/;"	m	union:__anon12
dval	include/defrData.hpp	/^        double dval ;$/;"	m	union:__anon6
dvalues_	def/defiComponent.hpp	/^  double* dvalues_;$/;"	m	class:defiComponent
dvalues_	def/defiNonDefault.hpp	/^  double* dvalues_;$/;"	m	class:defiNonDefault
dvalues_	include/defiComponent.hpp	/^  double* dvalues_;$/;"	m	class:defiComponent
dvalues_	include/defiNonDefault.hpp	/^  double* dvalues_;$/;"	m	class:defiNonDefault
end_comps	def/def.y	/^end_comps: K_END K_COMPS$/;"	l
end_def_cap	def/def.y	/^end_def_cap: K_END K_DEFAULTCAP $/;"	l
end_design	def/def.y	/^end_design: K_END K_DESIGN$/;"	l
end_nets	def/def.y	/^end_nets: K_END K_NETS $/;"	l
end_pin_props	def/def.y	/^end_pin_props: K_END K_PINPROPERTIES$/;"	l
end_pins	def/def.y	/^end_pins: K_END K_PINS$/;"	l
end_snets	def/def.y	/^end_snets: K_END K_SNETS $/;"	l
endfunc	defrw/defrw.cpp	/^int endfunc(defrCallbackType_e c, void*, defiUserData ud) {$/;"	f
equal	def/defiFPC.cpp	/^double defiFPC::equal() const {$/;"	f	class:defiFPC
errors	def/defrData.hpp	/^    int  errors; $/;"	m	class:defrData
errors	include/defrData.hpp	/^    int  errors; $/;"	m	class:defrData
exeName	defdiff/differDef.cpp	/^char * exeName;   \/\/ use to save the executable name$/;"	v
ext	cdef/defiTypedefs.h	/^  int ext;$/;"	m	struct:defiPnt
ext	def/defiPath.hpp	/^  int ext;$/;"	m	struct:defiPnt
ext	defdiff/diffDefRW.cpp	/^int ext(defrCallbackType_e t, const char* c, defiUserData ud) {$/;"	f
ext	defrw/defrw.cpp	/^int ext(defrCallbackType_e t, const char* c, defiUserData ud) {$/;"	f
ext	include/defiPath.hpp	/^  int ext;$/;"	m	struct:defiPnt
ext	include/defiTypedefs.h	/^  int ext;$/;"	m	struct:defiPnt
extension	defrw/defrw.cpp	/^int extension(defrCallbackType_e c, const char* extsn, defiUserData ud) {$/;"	f
extensionCB	defwrite/defwriteCbs.cpp	/^int extensionCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
extension_section	def/def.y	/^extension_section: K_BEGINEXT$/;"	l
extension_stmt	def/def.y	/^extension_stmt: '+' K_BEGINEXT$/;"	l
fallMax	def/defiAssertion.cpp	/^double defiAssertion::fallMax() const {$/;"	f	class:defiAssertion
fallMax	def/defiPartition.cpp	/^double defiPartition::fallMax() const {$/;"	f	class:defiPartition
fallMaxLeft	def/defiPartition.cpp	/^double defiPartition::fallMaxLeft() const {$/;"	f	class:defiPartition
fallMaxLeft_	def/defiPartition.hpp	/^  double fallMaxLeft_;$/;"	m	class:defiPartition
fallMaxLeft_	include/defiPartition.hpp	/^  double fallMaxLeft_;$/;"	m	class:defiPartition
fallMaxRight	def/defiPartition.cpp	/^double defiPartition::fallMaxRight() const {$/;"	f	class:defiPartition
fallMaxRight_	def/defiPartition.hpp	/^  double fallMaxRight_;$/;"	m	class:defiPartition
fallMaxRight_	include/defiPartition.hpp	/^  double fallMaxRight_;$/;"	m	class:defiPartition
fallMax_	def/defiAssertion.hpp	/^  double fallMax_;    \/\/ also used to store the wired logic dist$/;"	m	class:defiAssertion
fallMax_	def/defiPartition.hpp	/^  double fallMax_;$/;"	m	class:defiPartition
fallMax_	include/defiAssertion.hpp	/^  double fallMax_;    \/\/ also used to store the wired logic dist$/;"	m	class:defiAssertion
fallMax_	include/defiPartition.hpp	/^  double fallMax_;$/;"	m	class:defiPartition
fallMin	def/defiAssertion.cpp	/^double defiAssertion::fallMin() const {$/;"	f	class:defiAssertion
fallMin	def/defiPartition.cpp	/^double defiPartition::fallMin() const {$/;"	f	class:defiPartition
fallMinLeft	def/defiPartition.cpp	/^double defiPartition::fallMinLeft() const {$/;"	f	class:defiPartition
fallMinLeft_	def/defiPartition.hpp	/^  double fallMinLeft_;$/;"	m	class:defiPartition
fallMinLeft_	include/defiPartition.hpp	/^  double fallMinLeft_;$/;"	m	class:defiPartition
fallMinRight	def/defiPartition.cpp	/^double defiPartition::fallMinRight() const {$/;"	f	class:defiPartition
fallMinRight_	def/defiPartition.hpp	/^  double fallMinRight_;$/;"	m	class:defiPartition
fallMinRight_	include/defiPartition.hpp	/^  double fallMinRight_;$/;"	m	class:defiPartition
fallMin_	def/defiAssertion.hpp	/^  double fallMin_;$/;"	m	class:defiAssertion
fallMin_	def/defiPartition.hpp	/^  double fallMin_;$/;"	m	class:defiPartition
fallMin_	include/defiAssertion.hpp	/^  double fallMin_;$/;"	m	class:defiAssertion
fallMin_	include/defiPartition.hpp	/^  double fallMin_;$/;"	m	class:defiPartition
fillWarnings	def/defrData.hpp	/^    int  fillWarnings; $/;"	m	class:defrData
fillWarnings	include/defrData.hpp	/^    int  fillWarnings; $/;"	m	class:defrData
fill_def	def/def.y	/^fill_def: fill_rule geom_fill_rules ';'$/;"	l
fill_defs	def/def.y	/^fill_defs: \/\/ empty $/;"	l
fill_end	def/def.y	/^fill_end: K_END K_FILLS$/;"	l
fill_layer_mask_opc_opt	def/def.y	/^fill_layer_mask_opc_opt: \/\/ empty $/;"	l
fill_layer_opc	def/def.y	/^fill_layer_opc: $/;"	l
fill_mask	def/def.y	/^fill_mask:$/;"	l
fill_rule	def/def.y	/^fill_rule: '-' K_LAYER { defData->dumb_mode = 1; defData->no_num = 1; } T_STRING$/;"	l
fill_section	def/def.y	/^fill_section: fill_start fill_defs fill_end ;$/;"	l
fill_start	def/def.y	/^fill_start: K_FILLS NUMBER ';'$/;"	l
fill_viaMask	def/def.y	/^fill_viaMask:$/;"	l
fill_via_mask_opc_opt	def/def.y	/^fill_via_mask_opc_opt: \/\/ empty $/;"	l
fill_via_opc	def/def.y	/^fill_via_opc:$/;"	l
fill_via_pt	def/def.y	/^fill_via_pt: firstPt otherPts$/;"	l
first	def/defiAlias.hpp	/^  int first;$/;"	m	class:defiAlias_itr
first	include/defiAlias.hpp	/^  int first;$/;"	m	class:defiAlias_itr
firstPt	def/def.y	/^firstPt: pt$/;"	l
firstTrackMask	def/defiRowTrack.cpp	/^int defiTrack::firstTrackMask() const {$/;"	f	class:defiTrack
firstTrackMask_	def/defiRowTrack.hpp	/^  int firstTrackMask_;$/;"	m	class:defiTrack
firstTrackMask_	include/defiRowTrack.hpp	/^  int firstTrackMask_;$/;"	m	class:defiTrack
first_buffer	def/defrData.hpp	/^    int  first_buffer; $/;"	m	class:defrData
first_buffer	include/defrData.hpp	/^    int  first_buffer; $/;"	m	class:defrData
fixed_is_keyword	def/defrData.hpp	/^    int  fixed_is_keyword; $/;"	m	class:defrData
fixed_is_keyword	include/defrData.hpp	/^    int  fixed_is_keyword; $/;"	m	class:defrData
fixedbump_	def/defiNet.hpp	/^  int    fixedbump_;     \/\/ 5.4.1$/;"	m	class:defiNet
fixedbump_	include/defiNet.hpp	/^  int    fixedbump_;     \/\/ 5.4.1$/;"	m	class:defiNet
floatBits_	def/defiScanchain.hpp	/^  int*   floatBits_;    \/\/ 5.4.1$/;"	m	class:defiScanchain
floatBits_	include/defiScanchain.hpp	/^  int*   floatBits_;    \/\/ 5.4.1$/;"	m	class:defiScanchain
floatIn_	def/defiScanchain.hpp	/^  char** floatIn_;$/;"	m	class:defiScanchain
floatIn_	include/defiScanchain.hpp	/^  char** floatIn_;$/;"	m	class:defiScanchain
floatInst_	def/defiScanchain.hpp	/^  char** floatInst_;    \/\/ Array of floating names$/;"	m	class:defiScanchain
floatInst_	include/defiScanchain.hpp	/^  char** floatInst_;    \/\/ Array of floating names$/;"	m	class:defiScanchain
floatOut_	def/defiScanchain.hpp	/^  char** floatOut_;$/;"	m	class:defiScanchain
floatOut_	include/defiScanchain.hpp	/^  char** floatOut_;$/;"	m	class:defiScanchain
floating	def/defiScanchain.cpp	/^void defiScanchain::floating(int* size, char*** inst,$/;"	f	class:defiScanchain
floating_inst_list	def/def.y	/^floating_inst_list: \/\/ empty $/;"	l
floating_pins	def/def.y	/^floating_pins: \/\/ empty  $/;"	l
floorplanCB	defwrite/defwriteCbs.cpp	/^int floorplanCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
floorplan_contraints_section	def/def.y	/^floorplan_contraints_section: fp_start fp_stmts K_END K_FPC$/;"	l
floorplan_name	def/def.y	/^floorplan_name: K_FLOORPLAN { defData->dumb_mode = 1; defData->no_num = 1; } T_STRING ';'$/;"	l
fn	defrw/defrw.cpp	/^int fn(defrCallbackType_e c, const char* h, defiUserData ud) {$/;"	f
foreignName	def/defiComponent.cpp	/^const char* defiComponent::foreignName() const {$/;"	f	class:defiComponent
foreignNameSize_	def/defiComponent.hpp	/^  int foreignNameSize_; \/\/ allocate size of foreign name$/;"	m	class:defiComponent
foreignNameSize_	include/defiComponent.hpp	/^  int foreignNameSize_; \/\/ allocate size of foreign name$/;"	m	class:defiComponent
foreignName_	def/defiComponent.hpp	/^  char* foreignName_;   \/\/ name$/;"	m	class:defiComponent
foreignName_	include/defiComponent.hpp	/^  char* foreignName_;   \/\/ name$/;"	m	class:defiComponent
foreignOri	def/defiComponent.cpp	/^const char* defiComponent::foreignOri() const {$/;"	f	class:defiComponent
foreignOrient	def/defiComponent.cpp	/^int defiComponent::foreignOrient() const {$/;"	f	class:defiComponent
foreignX	def/defiComponent.cpp	/^int defiComponent::foreignX() const {$/;"	f	class:defiComponent
foreignY	def/defiComponent.cpp	/^int defiComponent::foreignY() const {$/;"	f	class:defiComponent
fout	defdiff/diffDefRW.cpp	/^FILE* fout;$/;"	v
fout	defrw/defrw.cpp	/^FILE* fout;$/;"	v
fout	defwrite/defwrite.cpp	/^FILE* fout;$/;"	v
fout	defwrite/defwriteCbs.cpp	/^FILE* fout;$/;"	v
fp_start	def/def.y	/^fp_start: K_FPC NUMBER ';'$/;"	l
fp_stmt	def/def.y	/^fp_stmt: '-' { defData->dumb_mode = 1; defData->no_num = 1;  } T_STRING h_or_v$/;"	l
fp_stmts	def/def.y	/^fp_stmts: \/\/ empty $/;"	l
freeCB	defrw/defrw.cpp	/^void freeCB(void* name) {$/;"	f
freeShield	def/defiNet.cpp	/^void defiNet::freeShield() {$/;"	f	class:defiNet
freeWire	def/defiNet.cpp	/^void defiNet::freeWire() {$/;"	f	class:defiNet
frequency	def/defiNet.cpp	/^double defiNet::frequency() const {$/;"	f	class:defiNet
frequency_	def/defiNet.hpp	/^  double frequency_;     \/\/ 5.4.1$/;"	m	class:defiNet
frequency_	include/defiNet.hpp	/^  double frequency_;     \/\/ 5.4.1$/;"	m	class:defiNet
from	def/defiIOTiming.cpp	/^const char* defiIOTiming::from() const {$/;"	f	class:defiIOTiming
fromInst	def/defiTimingDisable.cpp	/^const char* defiTimingDisable::fromInst() const {$/;"	f	class:defiTimingDisable
fromInstLength_	def/defiTimingDisable.hpp	/^  int fromInstLength_;$/;"	m	class:defiTimingDisable
fromInstLength_	include/defiTimingDisable.hpp	/^  int fromInstLength_;$/;"	m	class:defiTimingDisable
fromInst_	def/defiAssertion.cpp	/^  char* fromInst_;$/;"	m	struct:defiAssertPath	file:
fromInst_	def/defiTimingDisable.hpp	/^  char* fromInst_;  \/\/ also macro name and thru inst$/;"	m	class:defiTimingDisable
fromInst_	include/defiTimingDisable.hpp	/^  char* fromInst_;  \/\/ also macro name and thru inst$/;"	m	class:defiTimingDisable
fromLength_	def/defiIOTiming.hpp	/^  int fromLength_;$/;"	m	class:defiIOTiming
fromLength_	include/defiIOTiming.hpp	/^  int fromLength_;$/;"	m	class:defiIOTiming
fromPin	def/defiTimingDisable.cpp	/^const char* defiTimingDisable::fromPin() const {$/;"	f	class:defiTimingDisable
fromPinLength_	def/defiTimingDisable.hpp	/^  int fromPinLength_;$/;"	m	class:defiTimingDisable
fromPinLength_	include/defiTimingDisable.hpp	/^  int fromPinLength_;$/;"	m	class:defiTimingDisable
fromPin_	def/defiAssertion.cpp	/^  char* fromPin_;$/;"	m	struct:defiAssertPath	file:
fromPin_	def/defiTimingDisable.hpp	/^  char* fromPin_;  \/\/ also macro thru and thru pin$/;"	m	class:defiTimingDisable
fromPin_	include/defiTimingDisable.hpp	/^  char* fromPin_;  \/\/ also macro thru and thru pin$/;"	m	class:defiTimingDisable
from_	def/defiIOTiming.hpp	/^  char* from_;$/;"	m	class:defiIOTiming
from_	include/defiIOTiming.hpp	/^  char* from_;$/;"	m	class:defiIOTiming
gcellGridWarnings	def/defrData.hpp	/^    int  gcellGridWarnings; $/;"	m	class:defrData
gcellGridWarnings	include/defrData.hpp	/^    int  gcellGridWarnings; $/;"	m	class:defrData
gcellgrid	def/def.y	/^gcellgrid: K_GCELLGRID track_type NUMBER $/;"	l
gcellgridCB	defwrite/defwriteCbs.cpp	/^int gcellgridCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
generateName	def/defiComponent.cpp	/^const char* defiComponent::generateName() const {$/;"	f	class:defiComponent
generateNameSize_	def/defiComponent.hpp	/^  int generateNameSize_;$/;"	m	class:defiComponent
generateNameSize_	include/defiComponent.hpp	/^  int generateNameSize_;$/;"	m	class:defiComponent
generateName_	def/defiComponent.hpp	/^  char* generateName_;$/;"	m	class:defiComponent
generateName_	include/defiComponent.hpp	/^  char* generateName_;$/;"	m	class:defiComponent
geom_fill	def/def.y	/^geom_fill: K_RECT pt pt$/;"	l
geom_fill_rules	def/def.y	/^geom_fill_rules: \/\/ empty $/;"	l
geom_slot	def/def.y	/^geom_slot: K_RECT pt pt$/;"	l
geom_slot_rules	def/def.y	/^geom_slot_rules: \/\/ empty $/;"	l
getFlushPoint	def/defiPath.cpp	/^void defiPath::getFlushPoint(int* x, int* y, int* ext) const {$/;"	f	class:defiPath
getLayer	def/defiPath.cpp	/^const char* defiPath::getLayer() const {$/;"	f	class:defiPath
getMask	def/defiPath.cpp	/^int defiPath::getMask() const {$/;"	f	class:defiPath
getPart	def/defiFPC.cpp	/^void defiFPC::getPart(int index, int* corner, int* typ, char** name) const {$/;"	f	class:defiFPC
getPoint	def/defiPath.cpp	/^void defiPath::getPoint(int* x, int* y) const {$/;"	f	class:defiPath
getPoint	def/defiSite.cpp	/^struct defiPoints defiBox::getPoint() const {$/;"	f	class:defiBox
getPolygon	def/defiBlockage.cpp	/^struct defiPoints defiBlockage::getPolygon(int index) const {$/;"	f	class:defiBlockage
getPolygon	def/defiFill.cpp	/^struct defiPoints defiFill::getPolygon(int index) const {$/;"	f	class:defiFill
getPolygon	def/defiMisc.cpp	/^struct defiPoints defiStyles::getPolygon() const {$/;"	f	class:defiStyles
getPolygon	def/defiNet.cpp	/^struct defiPoints defiNet::getPolygon(int index) const {$/;"	f	class:defiNet
getPolygon	def/defiPinCap.cpp	/^struct defiPoints defiPin::getPolygon(int index) const {$/;"	f	class:defiPin
getPolygon	def/defiPinCap.cpp	/^struct defiPoints defiPinPort::getPolygon(int index) const {$/;"	f	class:defiPinPort
getPolygon	def/defiSlot.cpp	/^struct defiPoints defiSlot::getPolygon(int index) const {$/;"	f	class:defiSlot
getPolygon	def/defiVia.cpp	/^struct defiPoints defiVia::getPolygon(int index) const {$/;"	f	class:defiVia
getShape	def/defiPath.cpp	/^const char* defiPath::getShape() const {$/;"	f	class:defiPath
getStyle	def/defiPath.cpp	/^int defiPath::getStyle() const {$/;"	f	class:defiPath
getTaper	def/defiPath.cpp	/^int defiPath::getTaper() const {$/;"	f	class:defiPath
getTaperRule	def/defiPath.cpp	/^const char* defiPath::getTaperRule() const {$/;"	f	class:defiPath
getVia	def/defiPath.cpp	/^const char* defiPath::getVia() const {$/;"	f	class:defiPath
getViaBottomMask	def/defiPath.cpp	/^int defiPath::getViaBottomMask() const {$/;"	f	class:defiPath
getViaCutMask	def/defiPath.cpp	/^int defiPath::getViaCutMask() const {$/;"	f	class:defiPath
getViaData	def/defiPath.cpp	/^void defiPath::getViaData(int* numX, int* numY, int* stepX, int* stepY) const {$/;"	f	class:defiPath
getViaPts	def/defiFill.cpp	/^struct defiPoints defiFill::getViaPts(int index) const {$/;"	f	class:defiFill
getViaPts	def/defiNet.cpp	/^struct defiPoints defiNet::getViaPts(int index)const {$/;"	f	class:defiNet
getViaRect	def/defiPath.cpp	/^void defiPath::getViaRect(int* deltaX1, int* deltaY1, int* deltaX2, int* deltaY2) const {$/;"	f	class:defiPath
getViaRotation	def/defiPath.cpp	/^int defiPath::getViaRotation() const {$/;"	f	class:defiPath
getViaRotationStr	def/defiPath.cpp	/^const char* defiPath::getViaRotationStr() const {$/;"	f	class:defiPath
getViaTopMask	def/defiPath.cpp	/^int defiPath::getViaTopMask() const {$/;"	f	class:defiPath
getVirtualPoint	def/defiPath.cpp	/^void defiPath::getVirtualPoint(int* x, int* y) const {$/;"	f	class:defiPath
getWidth	def/defiPath.cpp	/^int defiPath::getWidth() const {$/;"	f	class:defiPath
groundSensLength_	def/defiPinCap.hpp	/^  int groundSensLength_;                 \/\/ 5.6$/;"	m	class:defiPin
groundSensLength_	include/defiPinCap.hpp	/^  int groundSensLength_;                 \/\/ 5.6$/;"	m	class:defiPin
groundSens_	def/defiPinCap.hpp	/^  char* groundSens_;                     \/\/ 5.6$/;"	m	class:defiPin
groundSens_	include/defiPinCap.hpp	/^  char* groundSens_;                     \/\/ 5.6$/;"	m	class:defiPin
groundSensitivity	def/defiPinCap.cpp	/^const char* defiPin::groundSensitivity() const {$/;"	f	class:defiPin
groupCB	defwrite/defwriteCbs.cpp	/^int groupCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
group_member	def/def.y	/^group_member: T_STRING$/;"	l
group_members	def/def.y	/^group_members: $/;"	l
group_option	def/def.y	/^group_option: '+' K_SOFT group_soft_options$/;"	l
group_options	def/def.y	/^group_options: \/\/ empty $/;"	l
group_prop	def/def.y	/^group_prop : T_STRING NUMBER$/;"	l
group_prop_list	def/def.y	/^group_prop_list : \/\/ empty $/;"	l
group_region	def/def.y	/^group_region: pt pt$/;"	l
group_rule	def/def.y	/^group_rule: start_group group_members group_options ';'$/;"	l
group_rules	def/def.y	/^group_rules: \/\/ empty $/;"	l
group_soft_option	def/def.y	/^group_soft_option: K_MAXX NUMBER$/;"	l
group_soft_options	def/def.y	/^group_soft_options: \/\/ empty $/;"	l
groups_end	def/def.y	/^groups_end: K_END K_GROUPS $/;"	l
groups_section	def/def.y	/^groups_section: groups_start group_rules groups_end$/;"	l
groups_start	def/def.y	/^groups_start: K_GROUPS NUMBER ';'$/;"	l
h_or_v	def/def.y	/^h_or_v: K_HORIZONTAL $/;"	l
haloDist	def/defiComponent.cpp	/^int defiComponent::haloDist() const {$/;"	f	class:defiComponent
haloDist_	def/defiComponent.hpp	/^  int haloDist_;              \/\/ 5.7$/;"	m	class:defiComponent
haloDist_	include/defiComponent.hpp	/^  int haloDist_;              \/\/ 5.7$/;"	m	class:defiComponent
haloEdges	def/defiComponent.cpp	/^void defiComponent::haloEdges(int* left, int* bottom, int* right, int* top) {$/;"	f	class:defiComponent
halo_soft	def/def.y	/^halo_soft: \/\/ 5.7 $/;"	l
hardSpacing_	def/defiNonDefault.hpp	/^  char    hardSpacing_;$/;"	m	class:defiNonDefault
hardSpacing_	include/defiNonDefault.hpp	/^  char    hardSpacing_;$/;"	m	class:defiNonDefault
hasAPinDiffArea	def/defiPinCap.cpp	/^int defiPin::hasAPinDiffArea() const {$/;"	f	class:defiPin
hasAPinDiffAreaLayer	def/defiPinCap.cpp	/^int defiPin::hasAPinDiffAreaLayer(int i) const {$/;"	f	class:defiPin
hasAPinGateArea	def/defiPinCap.cpp	/^int defiPinAntennaModel::hasAPinGateArea() const {$/;"	f	class:defiPinAntennaModel
hasAPinGateAreaLayer	def/defiPinCap.cpp	/^int defiPinAntennaModel::hasAPinGateAreaLayer(int i) const {$/;"	f	class:defiPinAntennaModel
hasAPinMaxAreaCar	def/defiPinCap.cpp	/^int defiPinAntennaModel::hasAPinMaxAreaCar() const {$/;"	f	class:defiPinAntennaModel
hasAPinMaxAreaCarLayer	def/defiPinCap.cpp	/^int defiPinAntennaModel::hasAPinMaxAreaCarLayer(int i) const {$/;"	f	class:defiPinAntennaModel
hasAPinMaxCutCar	def/defiPinCap.cpp	/^int defiPinAntennaModel::hasAPinMaxCutCar() const {$/;"	f	class:defiPinAntennaModel
hasAPinMaxCutCarLayer	def/defiPinCap.cpp	/^int defiPinAntennaModel::hasAPinMaxCutCarLayer(int i) const {$/;"	f	class:defiPinAntennaModel
hasAPinMaxSideAreaCar	def/defiPinCap.cpp	/^int defiPinAntennaModel::hasAPinMaxSideAreaCar() const {$/;"	f	class:defiPinAntennaModel
hasAPinMaxSideAreaCarLayer	def/defiPinCap.cpp	/^int defiPinAntennaModel::hasAPinMaxSideAreaCarLayer(int i) const {$/;"	f	class:defiPinAntennaModel
hasAPinPartialCutArea	def/defiPinCap.cpp	/^int defiPin::hasAPinPartialCutArea() const {$/;"	f	class:defiPin
hasAPinPartialCutAreaLayer	def/defiPinCap.cpp	/^int defiPin::hasAPinPartialCutAreaLayer(int i) const {$/;"	f	class:defiPin
hasAPinPartialMetalArea	def/defiPinCap.cpp	/^int defiPin::hasAPinPartialMetalArea() const {$/;"	f	class:defiPin
hasAPinPartialMetalAreaLayer	def/defiPinCap.cpp	/^int defiPin::hasAPinPartialMetalAreaLayer(int i) const {$/;"	f	class:defiPin
hasAPinPartialMetalSideArea	def/defiPinCap.cpp	/^int defiPin::hasAPinPartialMetalSideArea() const {$/;"	f	class:defiPin
hasAPinPartialMetalSideAreaLayer	def/defiPinCap.cpp	/^int defiPin::hasAPinPartialMetalSideAreaLayer(int i) const {$/;"	f	class:defiPin
hasAlign	def/defiFPC.cpp	/^int defiFPC::hasAlign() const {$/;"	f	class:defiFPC
hasAlign_	def/defiFPC.hpp	/^  char hasAlign_;$/;"	m	class:defiFPC
hasAlign_	include/defiFPC.hpp	/^  char hasAlign_;$/;"	m	class:defiFPC
hasBlkLayerComp	def/defrData.hpp	/^    int  hasBlkLayerComp; \/\/ only 1 BLOCKAGE\/LAYER\/COMP$/;"	m	class:defrData
hasBlkLayerComp	include/defrData.hpp	/^    int  hasBlkLayerComp; \/\/ only 1 BLOCKAGE\/LAYER\/COMP$/;"	m	class:defrData
hasBlkLayerSpac	def/defrData.hpp	/^    int  hasBlkLayerSpac; \/\/ only 1 BLOCKAGE\/LAYER\/SPACING$/;"	m	class:defrData
hasBlkLayerSpac	include/defrData.hpp	/^    int  hasBlkLayerSpac; \/\/ only 1 BLOCKAGE\/LAYER\/SPACING$/;"	m	class:defrData
hasBlkLayerTypeComp	def/defrData.hpp	/^    int  hasBlkLayerTypeComp; \/\/ SLOTS or FILLS$/;"	m	class:defrData
hasBlkLayerTypeComp	include/defrData.hpp	/^    int  hasBlkLayerTypeComp; \/\/ SLOTS or FILLS$/;"	m	class:defrData
hasBlkPlaceComp	def/defrData.hpp	/^    int  hasBlkPlaceComp; \/\/ only 1 BLOCKAGE\/PLACEMENT\/COMP$/;"	m	class:defrData
hasBlkPlaceComp	include/defrData.hpp	/^    int  hasBlkPlaceComp; \/\/ only 1 BLOCKAGE\/PLACEMENT\/COMP$/;"	m	class:defrData
hasBlkPlaceTypeComp	def/defrData.hpp	/^    int  hasBlkPlaceTypeComp; \/\/ SOFT or PARTIAL$/;"	m	class:defrData
hasBlkPlaceTypeComp	include/defrData.hpp	/^    int  hasBlkPlaceTypeComp; \/\/ SOFT or PARTIAL$/;"	m	class:defrData
hasBusBit	def/defrData.hpp	/^    int  hasBusBit; \/\/ keep track BUSBITCHARS is in the file$/;"	m	class:defrData
hasBusBit	include/defrData.hpp	/^    int  hasBusBit; \/\/ keep track BUSBITCHARS is in the file$/;"	m	class:defrData
hasCap	def/defiNet.cpp	/^int defiNet::hasCap() const {$/;"	f	class:defiNet
hasCap_	def/defiNet.hpp	/^  char hasCap_;         \/\/ file supplied a capacitance value$/;"	m	class:defiNet
hasCap_	include/defiNet.hpp	/^  char hasCap_;         \/\/ file supplied a capacitance value$/;"	m	class:defiNet
hasCapacitance	def/defiIOTiming.cpp	/^int defiIOTiming::hasCapacitance() const {$/;"	f	class:defiIOTiming
hasCapacitance_	def/defiIOTiming.hpp	/^  char hasCapacitance_;$/;"	m	class:defiIOTiming
hasCapacitance_	include/defiIOTiming.hpp	/^  char hasCapacitance_;$/;"	m	class:defiIOTiming
hasCommonInPin	def/defiScanchain.cpp	/^int defiScanchain::hasCommonInPin() const {$/;"	f	class:defiScanchain
hasCommonOutPin	def/defiScanchain.cpp	/^int defiScanchain::hasCommonOutPin() const {$/;"	f	class:defiScanchain
hasComponent	def/defiBlockage.cpp	/^int defiBlockage::hasComponent() const {$/;"	f	class:defiBlockage
hasComponent_	def/defiBlockage.hpp	/^  int    hasComponent_;$/;"	m	class:defiBlockage
hasComponent_	include/defiBlockage.hpp	/^  int    hasComponent_;$/;"	m	class:defiBlockage
hasCutPattern	def/defiVia.cpp	/^int defiVia::hasCutPattern() const {$/;"	f	class:defiVia
hasCutPattern_	def/defiVia.hpp	/^  int   hasCutPattern_;     \/\/ 5.6$/;"	m	class:defiVia
hasCutPattern_	include/defiVia.hpp	/^  int   hasCutPattern_;     \/\/ 5.6$/;"	m	class:defiVia
hasDes	def/defrData.hpp	/^    int  hasDes; \/\/ keep track DESIGN is in the file$/;"	m	class:defrData
hasDes	include/defrData.hpp	/^    int  hasDes; \/\/ keep track DESIGN is in the file$/;"	m	class:defrData
hasDesignRuleWidth	def/defiBlockage.cpp	/^int defiBlockage::hasDesignRuleWidth() const {$/;"	f	class:defiBlockage
hasDiagWidth_	def/defiNonDefault.hpp	/^  char*   hasDiagWidth_;$/;"	m	class:defiNonDefault
hasDiagWidth_	include/defiNonDefault.hpp	/^  char*   hasDiagWidth_;$/;"	m	class:defiNonDefault
hasDirection	def/defiPinCap.cpp	/^int defiPin::hasDirection() const {$/;"	f	class:defiPin
hasDirection_	def/defiPinCap.hpp	/^  char hasDirection_;$/;"	m	class:defiPin
hasDirection_	include/defiPinCap.hpp	/^  char hasDirection_;$/;"	m	class:defiPin
hasDivChar	def/defrData.hpp	/^    int  hasDivChar; \/\/ keep track DIVIDERCHAR is in the file$/;"	m	class:defrData
hasDivChar	include/defrData.hpp	/^    int  hasDivChar; \/\/ keep track DIVIDERCHAR is in the file$/;"	m	class:defrData
hasDo	def/defiRowTrack.cpp	/^int defiRow::hasDo() const {$/;"	f	class:defiRow
hasDoStep	def/defiRowTrack.cpp	/^int defiRow::hasDoStep() const {$/;"	f	class:defiRow
hasDoStep	def/defrData.hpp	/^    int  hasDoStep; $/;"	m	class:defrData
hasDoStep	include/defrData.hpp	/^    int  hasDoStep; $/;"	m	class:defrData
hasDoStep_	def/defiRowTrack.hpp	/^  int    hasDoStep_;$/;"	m	class:defiRow
hasDoStep_	include/defiRowTrack.hpp	/^  int    hasDoStep_;$/;"	m	class:defiRow
hasDo_	def/defiRowTrack.hpp	/^  int    hasDo_;$/;"	m	class:defiRow
hasDo_	include/defiRowTrack.hpp	/^  int    hasDo_;$/;"	m	class:defiRow
hasDriveCell	def/defiIOTiming.cpp	/^int defiIOTiming::hasDriveCell() const {$/;"	f	class:defiIOTiming
hasDriveCell_	def/defiIOTiming.hpp	/^  char hasDriveCell_;$/;"	m	class:defiIOTiming
hasDriveCell_	include/defiIOTiming.hpp	/^  char hasDriveCell_;$/;"	m	class:defiIOTiming
hasEEQ	def/defiComponent.cpp	/^int defiComponent::hasEEQ() const {$/;"	f	class:defiComponent
hasEEQ_	def/defiComponent.hpp	/^  char hasEEQ_;         \/\/ the file supplied an eeq$/;"	m	class:defiComponent
hasEEQ_	include/defiComponent.hpp	/^  char hasEEQ_;         \/\/ the file supplied an eeq$/;"	m	class:defiComponent
hasEqual	def/defiFPC.cpp	/^int defiFPC::hasEqual() const {$/;"	f	class:defiFPC
hasEqual_	def/defiFPC.hpp	/^  char hasEqual_;$/;"	m	class:defiFPC
hasEqual_	include/defiFPC.hpp	/^  char hasEqual_;$/;"	m	class:defiFPC
hasExceptpgnet	def/defiBlockage.cpp	/^int defiBlockage::hasExceptpgnet() const {$/;"	f	class:defiBlockage
hasExceptpgnet_	def/defiBlockage.hpp	/^  int    hasExceptpgnet_ ;               \/\/ 5.7$/;"	m	class:defiBlockage
hasExceptpgnet_	include/defiBlockage.hpp	/^  int    hasExceptpgnet_ ;               \/\/ 5.7$/;"	m	class:defiBlockage
hasFallMax	def/defiAssertion.cpp	/^int defiAssertion::hasFallMax() const {$/;"	f	class:defiAssertion
hasFallMax	def/defiPartition.cpp	/^int defiPartition::hasFallMax() const {$/;"	f	class:defiPartition
hasFallMaxRange	def/defiPartition.cpp	/^int defiPartition::hasFallMaxRange() const {$/;"	f	class:defiPartition
hasFallMaxRange_	def/defiPartition.hpp	/^  char hasFallMaxRange_;$/;"	m	class:defiPartition
hasFallMaxRange_	include/defiPartition.hpp	/^  char hasFallMaxRange_;$/;"	m	class:defiPartition
hasFallMax_	def/defiAssertion.hpp	/^  char hasFallMax_;$/;"	m	class:defiAssertion
hasFallMax_	def/defiPartition.hpp	/^  char hasFallMax_;$/;"	m	class:defiPartition
hasFallMax_	include/defiAssertion.hpp	/^  char hasFallMax_;$/;"	m	class:defiAssertion
hasFallMax_	include/defiPartition.hpp	/^  char hasFallMax_;$/;"	m	class:defiPartition
hasFallMin	def/defiAssertion.cpp	/^int defiAssertion::hasFallMin() const {$/;"	f	class:defiAssertion
hasFallMin	def/defiPartition.cpp	/^int defiPartition::hasFallMin() const {$/;"	f	class:defiPartition
hasFallMinRange	def/defiPartition.cpp	/^int defiPartition::hasFallMinRange() const {$/;"	f	class:defiPartition
hasFallMinRange_	def/defiPartition.hpp	/^  char hasFallMinRange_;$/;"	m	class:defiPartition
hasFallMinRange_	include/defiPartition.hpp	/^  char hasFallMinRange_;$/;"	m	class:defiPartition
hasFallMin_	def/defiAssertion.hpp	/^  char hasFallMin_;$/;"	m	class:defiAssertion
hasFallMin_	def/defiPartition.hpp	/^  char hasFallMin_;$/;"	m	class:defiPartition
hasFallMin_	include/defiAssertion.hpp	/^  char hasFallMin_;$/;"	m	class:defiAssertion
hasFallMin_	include/defiPartition.hpp	/^  char hasFallMin_;$/;"	m	class:defiPartition
hasFatalError	def/defrData.hpp	/^    int  hasFatalError; \/\/ don't report errors after the file end.$/;"	m	class:defrData
hasFatalError	include/defrData.hpp	/^    int  hasFatalError; \/\/ don't report errors after the file end.$/;"	m	class:defrData
hasFills	def/defiBlockage.cpp	/^int defiBlockage::hasFills() const {$/;"	f	class:defiBlockage
hasFills_	def/defiBlockage.hpp	/^  int    hasFills_;$/;"	m	class:defiBlockage
hasFills_	include/defiBlockage.hpp	/^  int    hasFills_;$/;"	m	class:defiBlockage
hasFixedbump	def/defiNet.cpp	/^int defiNet::hasFixedbump() const {$/;"	f	class:defiNet
hasFloating	def/defiScanchain.cpp	/^int defiScanchain::hasFloating() const {$/;"	f	class:defiScanchain
hasForeignName	def/defiComponent.cpp	/^int defiComponent::hasForeignName() const {$/;"	f	class:defiComponent
hasForeignName_	def/defiComponent.hpp	/^  char hasForeignName_; \/\/ the file supplied a foreign name$/;"	m	class:defiComponent
hasForeignName_	include/defiComponent.hpp	/^  char hasForeignName_; \/\/ the file supplied a foreign name$/;"	m	class:defiComponent
hasFori	def/defiComponent.cpp	/^int defiComponent::hasFori() const {$/;"	f	class:defiComponent
hasFori_	def/defiComponent.hpp	/^  char hasFori_;        \/\/ the file supplied a foreign orig name$/;"	m	class:defiComponent
hasFori_	include/defiComponent.hpp	/^  char hasFori_;        \/\/ the file supplied a foreign orig name$/;"	m	class:defiComponent
hasFrequency	def/defiNet.cpp	/^int defiNet::hasFrequency() const {$/;"	f	class:defiNet
hasFrequency_	def/defiNet.hpp	/^  char hasFrequency_;   \/\/ file supplied a frequency value$/;"	m	class:defiNet
hasFrequency_	include/defiNet.hpp	/^  char hasFrequency_;   \/\/ file supplied a frequency value$/;"	m	class:defiNet
hasFrom	def/defiIOTiming.cpp	/^int defiIOTiming::hasFrom() const {$/;"	f	class:defiIOTiming
hasFromTo	def/defiTimingDisable.cpp	/^int defiTimingDisable::hasFromTo() const {$/;"	f	class:defiTimingDisable
hasFromTo_	def/defiTimingDisable.hpp	/^  int hasFromTo_;$/;"	m	class:defiTimingDisable
hasFromTo_	include/defiTimingDisable.hpp	/^  int hasFromTo_;$/;"	m	class:defiTimingDisable
hasFrom_	def/defiIOTiming.hpp	/^  char hasFrom_;$/;"	m	class:defiIOTiming
hasFrom_	include/defiIOTiming.hpp	/^  char hasFrom_;$/;"	m	class:defiIOTiming
hasGenerate	def/defiComponent.cpp	/^int defiComponent::hasGenerate() const {$/;"	f	class:defiComponent
hasGenerate_	def/defiComponent.hpp	/^  char hasGenerate_;    \/\/ the file supplied an generate name and macro name$/;"	m	class:defiComponent
hasGenerate_	include/defiComponent.hpp	/^  char hasGenerate_;    \/\/ the file supplied an generate name and macro name$/;"	m	class:defiComponent
hasGroundSens_	def/defiPinCap.hpp	/^  char hasGroundSens_;                   \/\/ 5.6$/;"	m	class:defiPin
hasGroundSens_	include/defiPinCap.hpp	/^  char hasGroundSens_;                   \/\/ 5.6$/;"	m	class:defiPin
hasGroundSensitivity	def/defiPinCap.cpp	/^int defiPin::hasGroundSensitivity() const {$/;"	f	class:defiPin
hasHalo	def/defiComponent.cpp	/^int defiComponent::hasHalo() const {$/;"	f	class:defiComponent
hasHaloSoft	def/defiComponent.cpp	/^int defiComponent::hasHaloSoft() const {$/;"	f	class:defiComponent
hasHaloSoft_	def/defiComponent.hpp	/^  int hasHaloSoft_;           \/\/ 5.7$/;"	m	class:defiComponent
hasHaloSoft_	include/defiComponent.hpp	/^  int hasHaloSoft_;           \/\/ 5.7$/;"	m	class:defiComponent
hasHalo_	def/defiComponent.hpp	/^  int hasHalo_;$/;"	m	class:defiComponent
hasHalo_	include/defiComponent.hpp	/^  int hasHalo_;$/;"	m	class:defiComponent
hasHardspacing	def/defiNonDefault.cpp	/^int defiNonDefault::hasHardspacing() const {$/;"	f	class:defiNonDefault
hasLayer	def/defiBlockage.cpp	/^int defiBlockage::hasLayer() const {$/;"	f	class:defiBlockage
hasLayer	def/defiFill.cpp	/^int defiFill::hasLayer() const {$/;"	f	class:defiFill
hasLayer	def/defiPinCap.cpp	/^int defiPin::hasLayer() const {$/;"	f	class:defiPin
hasLayer	def/defiSlot.cpp	/^int defiSlot::hasLayer() const {$/;"	f	class:defiSlot
hasLayerDesignRuleWidth	def/defiPinCap.cpp	/^int defiPin::hasLayerDesignRuleWidth(int index) const{$/;"	f	class:defiPin
hasLayerDesignRuleWidth	def/defiPinCap.cpp	/^int defiPinPort::hasLayerDesignRuleWidth(int index) const{$/;"	f	class:defiPinPort
hasLayerDiagWidth	def/defiNonDefault.cpp	/^int defiNonDefault::hasLayerDiagWidth(int index) const { $/;"	f	class:defiNonDefault
hasLayerOpc	def/defiFill.cpp	/^int defiFill::hasLayerOpc() const {$/;"	f	class:defiFill
hasLayerSpacing	def/defiNonDefault.cpp	/^int defiNonDefault::hasLayerSpacing(int index) const { $/;"	f	class:defiNonDefault
hasLayerSpacing	def/defiPinCap.cpp	/^int defiPin::hasLayerSpacing(int index) const{$/;"	f	class:defiPin
hasLayerSpacing	def/defiPinCap.cpp	/^int defiPinPort::hasLayerSpacing(int index) const{$/;"	f	class:defiPinPort
hasLayerWireExt	def/defiNonDefault.cpp	/^int defiNonDefault::hasLayerWireExt(int index) const { $/;"	f	class:defiNonDefault
hasLayer_	def/defiBlockage.hpp	/^  int    hasLayer_;$/;"	m	class:defiBlockage
hasLayer_	def/defiFill.hpp	/^  int   hasLayer_;$/;"	m	class:defiFill
hasLayer_	def/defiSlot.hpp	/^  int   hasLayer_;$/;"	m	class:defiSlot
hasLayer_	include/defiBlockage.hpp	/^  int    hasLayer_;$/;"	m	class:defiBlockage
hasLayer_	include/defiFill.hpp	/^  int   hasLayer_;$/;"	m	class:defiFill
hasLayer_	include/defiSlot.hpp	/^  int   hasLayer_;$/;"	m	class:defiSlot
hasMacroFromTo	def/defiTimingDisable.cpp	/^int defiTimingDisable::hasMacroFromTo() const {$/;"	f	class:defiTimingDisable
hasMacroThru	def/defiTimingDisable.cpp	/^int defiTimingDisable::hasMacroThru() const {$/;"	f	class:defiTimingDisable
hasMacro_	def/defiTimingDisable.hpp	/^  int hasMacro_;$/;"	m	class:defiTimingDisable
hasMacro_	include/defiTimingDisable.hpp	/^  int hasMacro_;$/;"	m	class:defiTimingDisable
hasMask	def/defiBlockage.cpp	/^int defiBlockage::hasMask() const {$/;"	f	class:defiBlockage
hasMax	def/defiFPC.cpp	/^int defiFPC::hasMax() const {$/;"	f	class:defiFPC
hasMax	def/defiPartition.cpp	/^int defiPartition::hasMax() const {$/;"	f	class:defiPartition
hasMaxX	def/defiGroup.cpp	/^int defiGroup::hasMaxX() const {$/;"	f	class:defiGroup
hasMaxX_	def/defiGroup.hpp	/^  char hasMaxX_;$/;"	m	class:defiGroup
hasMaxX_	include/defiGroup.hpp	/^  char hasMaxX_;$/;"	m	class:defiGroup
hasMaxY	def/defiGroup.cpp	/^int defiGroup::hasMaxY() const {$/;"	f	class:defiGroup
hasMaxY_	def/defiGroup.hpp	/^  char hasMaxY_;$/;"	m	class:defiGroup
hasMaxY_	include/defiGroup.hpp	/^  char hasMaxY_;$/;"	m	class:defiGroup
hasMax_	def/defiFPC.hpp	/^  char hasMax_;$/;"	m	class:defiFPC
hasMax_	def/defiPartition.hpp	/^  char hasMax_;$/;"	m	class:defiPartition
hasMax_	include/defiFPC.hpp	/^  char hasMax_;$/;"	m	class:defiFPC
hasMax_	include/defiPartition.hpp	/^  char hasMax_;$/;"	m	class:defiPartition
hasMin	def/defiFPC.cpp	/^int defiFPC::hasMin() const {$/;"	f	class:defiFPC
hasMin	def/defiPartition.cpp	/^int defiPartition::hasMin() const {$/;"	f	class:defiPartition
hasMin_	def/defiFPC.hpp	/^  char hasMin_;$/;"	m	class:defiFPC
hasMin_	def/defiPartition.hpp	/^  char hasMin_;$/;"	m	class:defiPartition
hasMin_	include/defiFPC.hpp	/^  char hasMin_;$/;"	m	class:defiFPC
hasMin_	include/defiPartition.hpp	/^  char hasMin_;$/;"	m	class:defiPartition
hasNameCase	def/defrData.hpp	/^    int  hasNameCase; \/\/ keep track NAMESCASESENSITIVE is in the file$/;"	m	class:defrData
hasNameCase	include/defrData.hpp	/^    int  hasNameCase; \/\/ keep track NAMESCASESENSITIVE is in the file$/;"	m	class:defrData
hasNameMapString	def/defiProp.cpp	/^int defiProp::hasNameMapString() const {$/;"	f	class:defiProp
hasNameMapString_	def/defiProp.hpp	/^  char hasNameMapString_;$/;"	m	class:defiProp
hasNameMapString_	include/defiProp.hpp	/^  char hasNameMapString_;$/;"	m	class:defiProp
hasNetExpr	def/defiPinCap.cpp	/^int defiPin::hasNetExpr() const {$/;"	f	class:defiPin
hasNetExpr_	def/defiPinCap.hpp	/^  char hasNetExpr_;                      \/\/ 5.6$/;"	m	class:defiPin
hasNetExpr_	include/defiPinCap.hpp	/^  char hasNetExpr_;                      \/\/ 5.6$/;"	m	class:defiPin
hasNets	def/defiComponent.cpp	/^int defiComponent::hasNets() const {$/;"	f	class:defiComponent
hasNonDefaultRule	def/defiNet.cpp	/^int defiNet::hasNonDefaultRule() const {$/;"	f	class:defiNet
hasNonDefaultRule	def/defiNet.cpp	/^int defiSubnet::hasNonDefaultRule() const {$/;"	f	class:defiSubnet
hasNumber	def/defiProp.cpp	/^int defiProp::hasNumber() const {$/;"	f	class:defiProp
hasNumber_	def/defiProp.hpp	/^  char hasNumber_;      \/\/ either 0:NO or 1:YES.$/;"	m	class:defiProp
hasNumber_	include/defiProp.hpp	/^  char hasNumber_;      \/\/ either 0:NO or 1:YES.$/;"	m	class:defiProp
hasOffset	def/defiVia.cpp	/^int defiVia::hasOffset() const {$/;"	f	class:defiVia
hasOpenedDefLogFile	def/defrData.hpp	/^    int  hasOpenedDefLogFile; $/;"	m	class:defrData
hasOpenedDefLogFile	include/defrData.hpp	/^    int  hasOpenedDefLogFile; $/;"	m	class:defrData
hasOrdered	def/defiScanchain.cpp	/^int defiScanchain::hasOrdered() const {$/;"	f	class:defiScanchain
hasOrigin	def/defiVia.cpp	/^int defiVia::hasOrigin() const {$/;"	f	class:defiVia
hasOriginal	def/defiNet.cpp	/^int defiNet::hasOriginal() const {$/;"	f	class:defiNet
hasParallel	def/defiIOTiming.cpp	/^int defiIOTiming::hasParallel() const {$/;"	f	class:defiIOTiming
hasParallel_	def/defiIOTiming.hpp	/^  char hasParallel_;$/;"	m	class:defiIOTiming
hasParallel_	include/defiIOTiming.hpp	/^  char hasParallel_;$/;"	m	class:defiIOTiming
hasPartial	def/defiBlockage.cpp	/^int defiBlockage::hasPartial() const {$/;"	f	class:defiBlockage
hasPartition	def/defiScanchain.cpp	/^int defiScanchain::hasPartition() const {$/;"	f	class:defiScanchain
hasPartitionMaxBits	def/defiScanchain.cpp	/^int defiScanchain::hasPartitionMaxBits() const {$/;"	f	class:defiScanchain
hasPartition_	def/defiScanchain.hpp	/^  char  hasPartition_;  \/\/ 5.4.1$/;"	m	class:defiScanchain
hasPartition_	include/defiScanchain.hpp	/^  char  hasPartition_;  \/\/ 5.4.1$/;"	m	class:defiScanchain
hasPattern	def/defiNet.cpp	/^int defiNet::hasPattern() const {$/;"	f	class:defiNet
hasPattern	def/defiVia.cpp	/^int defiVia::hasPattern() const {$/;"	f	class:defiVia
hasPattern_	def/defiVia.hpp	/^  int hasPattern_;$/;"	m	class:defiVia
hasPattern_	include/defiVia.hpp	/^  int hasPattern_;$/;"	m	class:defiVia
hasPerim	def/defiGroup.cpp	/^int defiGroup::hasPerim() const {$/;"	f	class:defiGroup
hasPerim_	def/defiGroup.hpp	/^  char hasPerim_;$/;"	m	class:defiGroup
hasPerim_	include/defiGroup.hpp	/^  char hasPerim_;$/;"	m	class:defiGroup
hasPlacement	def/defiBlockage.cpp	/^int defiBlockage::hasPlacement() const {$/;"	f	class:defiBlockage
hasPlacement	def/defiPinCap.cpp	/^int defiPin::hasPlacement() const {$/;"	f	class:defiPin
hasPlacement	def/defiPinCap.cpp	/^int defiPinPort::hasPlacement() const {$/;"	f	class:defiPinPort
hasPlacement_	def/defiBlockage.hpp	/^  int    hasPlacement_;$/;"	m	class:defiBlockage
hasPlacement_	include/defiBlockage.hpp	/^  int    hasPlacement_;$/;"	m	class:defiBlockage
hasPolyMask	def/defiVia.cpp	/^int defiVia::hasPolyMask(int index) const {$/;"	f	class:defiVia
hasPolygonDesignRuleWidth	def/defiPinCap.cpp	/^int defiPin::hasPolygonDesignRuleWidth(int index) const{$/;"	f	class:defiPin
hasPolygonDesignRuleWidth	def/defiPinCap.cpp	/^int defiPinPort::hasPolygonDesignRuleWidth(int index) const{$/;"	f	class:defiPinPort
hasPolygonSpacing	def/defiPinCap.cpp	/^int defiPin::hasPolygonSpacing(int index) const{$/;"	f	class:defiPin
hasPolygonSpacing	def/defiPinCap.cpp	/^int defiPinPort::hasPolygonSpacing(int index) const{$/;"	f	class:defiPinPort
hasPort	def/defiPinCap.cpp	/^int defiPin::hasPort() const {$/;"	f	class:defiPin
hasPort	def/defrData.hpp	/^    int  hasPort; \/\/ keep track is port defined in a Pin$/;"	m	class:defrData
hasPort	include/defrData.hpp	/^    int  hasPort; \/\/ keep track is port defined in a Pin$/;"	m	class:defrData
hasProps	def/defiNet.cpp	/^int defiNet::hasProps() const {$/;"	f	class:defiNet
hasPushdown	def/defiBlockage.cpp	/^int defiBlockage::hasPushdown() const {$/;"	f	class:defiBlockage
hasPushdown_	def/defiBlockage.hpp	/^  int    hasPushdown_;                   \/\/ 5.7$/;"	m	class:defiBlockage
hasPushdown_	include/defiBlockage.hpp	/^  int    hasPushdown_;                   \/\/ 5.7$/;"	m	class:defiBlockage
hasRange	def/defiProp.cpp	/^int defiProp::hasRange() const {$/;"	f	class:defiProp
hasRange_	def/defiProp.hpp	/^  char hasRange_;       \/\/ either 0:NO or 1:YES.$/;"	m	class:defiProp
hasRange_	include/defiProp.hpp	/^  char hasRange_;       \/\/ either 0:NO or 1:YES.$/;"	m	class:defiProp
hasRectMask	def/defiVia.cpp	/^int defiVia::hasRectMask(int index) const {$/;"	f	class:defiVia
hasReentrantPathsFlag	def/defiTimingDisable.cpp	/^int defiTimingDisable::hasReentrantPathsFlag() const {$/;"	f	class:defiTimingDisable
hasReentrantPathsFlag_	def/defiTimingDisable.hpp	/^  int hasReentrantPathsFlag_;$/;"	m	class:defiTimingDisable
hasReentrantPathsFlag_	include/defiTimingDisable.hpp	/^  int hasReentrantPathsFlag_;$/;"	m	class:defiTimingDisable
hasRegionBounds	def/defiComponent.cpp	/^int defiComponent::hasRegionBounds() const {$/;"	f	class:defiComponent
hasRegionBox	def/defiGroup.cpp	/^int defiGroup::hasRegionBox() const {$/;"	f	class:defiGroup
hasRegionBox_	def/defiGroup.hpp	/^  char hasRegionBox_;$/;"	m	class:defiGroup
hasRegionBox_	include/defiGroup.hpp	/^  char hasRegionBox_;$/;"	m	class:defiGroup
hasRegionName	def/defiComponent.cpp	/^int defiComponent::hasRegionName() const {$/;"	f	class:defiComponent
hasRegionName	def/defiGroup.cpp	/^int defiGroup::hasRegionName() const {$/;"	f	class:defiGroup
hasRegionName_	def/defiComponent.hpp	/^  char hasRegionName_;  \/\/ the file supplied a region name for this comp$/;"	m	class:defiComponent
hasRegionName_	def/defiGroup.hpp	/^  char hasRegionName_;$/;"	m	class:defiGroup
hasRegionName_	include/defiComponent.hpp	/^  char hasRegionName_;  \/\/ the file supplied a region name for this comp$/;"	m	class:defiComponent
hasRegionName_	include/defiGroup.hpp	/^  char hasRegionName_;$/;"	m	class:defiGroup
hasRiseMax	def/defiAssertion.cpp	/^int defiAssertion::hasRiseMax() const {$/;"	f	class:defiAssertion
hasRiseMax	def/defiPartition.cpp	/^int defiPartition::hasRiseMax() const {$/;"	f	class:defiPartition
hasRiseMaxRange	def/defiPartition.cpp	/^int defiPartition::hasRiseMaxRange() const {$/;"	f	class:defiPartition
hasRiseMaxRange_	def/defiPartition.hpp	/^  char hasRiseMaxRange_;$/;"	m	class:defiPartition
hasRiseMaxRange_	include/defiPartition.hpp	/^  char hasRiseMaxRange_;$/;"	m	class:defiPartition
hasRiseMax_	def/defiAssertion.hpp	/^  char hasRiseMax_;$/;"	m	class:defiAssertion
hasRiseMax_	def/defiPartition.hpp	/^  char hasRiseMax_;$/;"	m	class:defiPartition
hasRiseMax_	include/defiAssertion.hpp	/^  char hasRiseMax_;$/;"	m	class:defiAssertion
hasRiseMax_	include/defiPartition.hpp	/^  char hasRiseMax_;$/;"	m	class:defiPartition
hasRiseMin	def/defiAssertion.cpp	/^int defiAssertion::hasRiseMin() const {$/;"	f	class:defiAssertion
hasRiseMin	def/defiPartition.cpp	/^int defiPartition::hasRiseMin() const {$/;"	f	class:defiPartition
hasRiseMinRange	def/defiPartition.cpp	/^int defiPartition::hasRiseMinRange() const {$/;"	f	class:defiPartition
hasRiseMinRange_	def/defiPartition.hpp	/^  char hasRiseMinRange_;$/;"	m	class:defiPartition
hasRiseMinRange_	include/defiPartition.hpp	/^  char hasRiseMinRange_;$/;"	m	class:defiPartition
hasRiseMin_	def/defiAssertion.hpp	/^  char hasRiseMin_;$/;"	m	class:defiAssertion
hasRiseMin_	def/defiPartition.hpp	/^  char hasRiseMin_;$/;"	m	class:defiPartition
hasRiseMin_	include/defiAssertion.hpp	/^  char hasRiseMin_;$/;"	m	class:defiAssertion
hasRiseMin_	include/defiPartition.hpp	/^  char hasRiseMin_;$/;"	m	class:defiPartition
hasRouteHalo	def/defiComponent.cpp	/^int defiComponent::hasRouteHalo() const {$/;"	f	class:defiComponent
hasRowCol	def/defiVia.cpp	/^int defiVia::hasRowCol() const {$/;"	f	class:defiVia
hasSlewFall	def/defiIOTiming.cpp	/^int defiIOTiming::hasSlewFall() const {$/;"	f	class:defiIOTiming
hasSlewFall_	def/defiIOTiming.hpp	/^  char hasSlewFall_;$/;"	m	class:defiIOTiming
hasSlewFall_	include/defiIOTiming.hpp	/^  char hasSlewFall_;$/;"	m	class:defiIOTiming
hasSlewRise	def/defiIOTiming.cpp	/^int defiIOTiming::hasSlewRise() const {$/;"	f	class:defiIOTiming
hasSlewRise_	def/defiIOTiming.hpp	/^  char hasSlewRise_;$/;"	m	class:defiIOTiming
hasSlewRise_	include/defiIOTiming.hpp	/^  char hasSlewRise_;$/;"	m	class:defiIOTiming
hasSlots	def/defiBlockage.cpp	/^int defiBlockage::hasSlots() const {$/;"	f	class:defiBlockage
hasSlots_	def/defiBlockage.hpp	/^  int    hasSlots_;$/;"	m	class:defiBlockage
hasSlots_	include/defiBlockage.hpp	/^  int    hasSlots_;$/;"	m	class:defiBlockage
hasSoft	def/defiBlockage.cpp	/^int defiBlockage::hasSoft() const {$/;"	f	class:defiBlockage
hasSoft_	def/defiBlockage.hpp	/^  int    hasSoft_;                       \/\/ 5.7$/;"	m	class:defiBlockage
hasSoft_	include/defiBlockage.hpp	/^  int    hasSoft_;                       \/\/ 5.7$/;"	m	class:defiBlockage
hasSource	def/defiComponent.cpp	/^int defiComponent::hasSource() const {$/;"	f	class:defiComponent
hasSource	def/defiNet.cpp	/^int defiNet::hasSource() const {$/;"	f	class:defiNet
hasSpacing	def/defiBlockage.cpp	/^int defiBlockage::hasSpacing() const {$/;"	f	class:defiBlockage
hasSpacingRules	def/defiNet.cpp	/^int defiNet::hasSpacingRules() const {$/;"	f	class:defiNet
hasSpacing_	def/defiNonDefault.hpp	/^  char*   hasSpacing_;$/;"	m	class:defiNonDefault
hasSpacing_	include/defiNonDefault.hpp	/^  char*   hasSpacing_;$/;"	m	class:defiNonDefault
hasSpecial	def/defiPinCap.cpp	/^int defiPin::hasSpecial() const {$/;"	f	class:defiPin
hasSpecial_	def/defiPinCap.hpp	/^  int hasSpecial_;$/;"	m	class:defiPin
hasSpecial_	include/defiPinCap.hpp	/^  int hasSpecial_;$/;"	m	class:defiPin
hasStart	def/defiScanchain.cpp	/^int defiScanchain::hasStart() const {$/;"	f	class:defiScanchain
hasStart_	def/defiScanchain.hpp	/^  char hasStart_;$/;"	m	class:defiScanchain
hasStart_	include/defiScanchain.hpp	/^  char hasStart_;$/;"	m	class:defiScanchain
hasStop	def/defiScanchain.cpp	/^int defiScanchain::hasStop() const {$/;"	f	class:defiScanchain
hasStop_	def/defiScanchain.hpp	/^  char hasStop_;$/;"	m	class:defiScanchain
hasStop_	include/defiScanchain.hpp	/^  char hasStop_;$/;"	m	class:defiScanchain
hasString	def/defiProp.cpp	/^int defiProp::hasString() const {$/;"	f	class:defiProp
hasStyle	def/defiNet.cpp	/^int defiNet::hasStyle() const {$/;"	f	class:defiNet
hasSubnets	def/defiNet.cpp	/^int defiNet::hasSubnets() const {$/;"	f	class:defiNet
hasSupplySens_	def/defiPinCap.hpp	/^  char hasSupplySens_;                   \/\/ 5.6$/;"	m	class:defiPin
hasSupplySens_	include/defiPinCap.hpp	/^  char hasSupplySens_;                   \/\/ 5.6$/;"	m	class:defiPin
hasSupplySensitivity	def/defiPinCap.cpp	/^int defiPin::hasSupplySensitivity() const {$/;"	f	class:defiPin
hasThru	def/defiTimingDisable.cpp	/^int defiTimingDisable::hasThru() const {$/;"	f	class:defiTimingDisable
hasThru_	def/defiTimingDisable.hpp	/^  int hasThru_;$/;"	m	class:defiTimingDisable
hasThru_	include/defiTimingDisable.hpp	/^  int hasThru_;$/;"	m	class:defiTimingDisable
hasTo	def/defiIOTiming.cpp	/^int defiIOTiming::hasTo() const {$/;"	f	class:defiIOTiming
hasTo_	def/defiIOTiming.hpp	/^  char hasTo_;$/;"	m	class:defiIOTiming
hasTo_	include/defiIOTiming.hpp	/^  char hasTo_;$/;"	m	class:defiIOTiming
hasType	def/defiRegion.cpp	/^int defiRegion::hasType() const {$/;"	f	class:defiRegion
hasUse	def/defiNet.cpp	/^int defiNet::hasUse() const {$/;"	f	class:defiNet
hasUse	def/defiPinCap.cpp	/^int defiPin::hasUse() const {$/;"	f	class:defiPin
hasUse_	def/defiPinCap.hpp	/^  char hasUse_;$/;"	m	class:defiPin
hasUse_	include/defiPinCap.hpp	/^  char hasUse_;$/;"	m	class:defiPin
hasVariableFall	def/defiIOTiming.cpp	/^int defiIOTiming::hasVariableFall() const {$/;"	f	class:defiIOTiming
hasVariableFall_	def/defiIOTiming.hpp	/^  char hasVariableFall_;$/;"	m	class:defiIOTiming
hasVariableFall_	include/defiIOTiming.hpp	/^  char hasVariableFall_;$/;"	m	class:defiIOTiming
hasVariableRise	def/defiIOTiming.cpp	/^int defiIOTiming::hasVariableRise() const {$/;"	f	class:defiIOTiming
hasVariableRise_	def/defiIOTiming.hpp	/^  char hasVariableRise_;$/;"	m	class:defiIOTiming
hasVariableRise_	include/defiIOTiming.hpp	/^  char hasVariableRise_;$/;"	m	class:defiIOTiming
hasVer	def/defrData.hpp	/^    int  hasVer; \/\/ keep track VERSION is in the file$/;"	m	class:defrData
hasVer	include/defrData.hpp	/^    int  hasVer; \/\/ keep track VERSION is in the file$/;"	m	class:defrData
hasVia	def/defiFill.cpp	/^int defiFill::hasVia() const {$/;"	f	class:defiFill
hasViaOpc	def/defiFill.cpp	/^int defiFill::hasViaOpc() const {$/;"	f	class:defiFill
hasViaRule	def/defiVia.cpp	/^int defiVia::hasViaRule() const {$/;"	f	class:defiVia
hasViaRule_	def/defiVia.hpp	/^  int   hasViaRule_;        \/\/ 5.6$/;"	m	class:defiVia
hasViaRule_	include/defiVia.hpp	/^  int   hasViaRule_;        \/\/ 5.6$/;"	m	class:defiVia
hasVia_	def/defiFill.hpp	/^  int   hasVia_;                    \/\/ 5.7$/;"	m	class:defiFill
hasVia_	include/defiFill.hpp	/^  int   hasVia_;                    \/\/ 5.7$/;"	m	class:defiFill
hasVoltage	def/defiNet.cpp	/^int defiNet::hasVoltage() const {$/;"	f	class:defiNet
hasVoltage_	def/defiNet.hpp	/^  char hasVoltage_;$/;"	m	class:defiNet
hasVoltage_	include/defiNet.hpp	/^  char hasVoltage_;$/;"	m	class:defiNet
hasWeight	def/defiComponent.cpp	/^int defiComponent::hasWeight() const {$/;"	f	class:defiComponent
hasWeight	def/defiNet.cpp	/^int defiNet::hasWeight() const {$/;"	f	class:defiNet
hasWeight_	def/defiComponent.hpp	/^  char hasWeight_;      \/\/ the file supplied a weight$/;"	m	class:defiComponent
hasWeight_	def/defiNet.hpp	/^  char hasWeight_;      \/\/ flag for optional weight$/;"	m	class:defiNet
hasWeight_	include/defiComponent.hpp	/^  char hasWeight_;      \/\/ the file supplied a weight$/;"	m	class:defiComponent
hasWeight_	include/defiNet.hpp	/^  char hasWeight_;      \/\/ flag for optional weight$/;"	m	class:defiNet
hasWidthRules	def/defiNet.cpp	/^int defiNet::hasWidthRules() const {$/;"	f	class:defiNet
hasWireExt_	def/defiNonDefault.hpp	/^  char*   hasWireExt_;$/;"	m	class:defiNonDefault
hasWireExt_	include/defiNonDefault.hpp	/^  char*   hasWireExt_;$/;"	m	class:defiNonDefault
hasXTalk	def/defiNet.cpp	/^int defiNet::hasXTalk() const {$/;"	f	class:defiNet
hist	defdiff/diffDefRW.cpp	/^int hist(defrCallbackType_e c, const char* h, defiUserData ud) {$/;"	f
hist	defrw/defrw.cpp	/^int hist(defrCallbackType_e c, const char* h, defiUserData ud) {$/;"	f
history	def/def.y	/^history: K_HISTORY$/;"	l
historyCB	defwrite/defwriteCbs.cpp	/^int historyCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
hold_	def/defiPartition.hpp	/^  char hold_;$/;"	m	class:defiPartition
hold_	include/defiPartition.hpp	/^  char hold_;$/;"	m	class:defiPartition
iOTimingWarnings	def/defrData.hpp	/^    int  iOTimingWarnings; $/;"	m	class:defrData
iOTimingWarnings	include/defrData.hpp	/^    int  iOTimingWarnings; $/;"	m	class:defrData
id	def/defiComponent.cpp	/^const char* defiComponent::id() const {$/;"	f	class:defiComponent
idSize_	def/defiComponent.hpp	/^  int idSize_;          \/\/ allocated size of id.$/;"	m	class:defiComponent
idSize_	include/defiComponent.hpp	/^  int idSize_;          \/\/ allocated size of id.$/;"	m	class:defiComponent
id_	def/defiComponent.hpp	/^  char* id_;            \/\/ instance id$/;"	m	class:defiComponent
id_	include/defiComponent.hpp	/^  char* id_;            \/\/ instance id$/;"	m	class:defiComponent
ignorePE	defdiff/diffDefRW.cpp	/^static int ignorePE = 0;$/;"	v	file:
ignoreRN	defdiff/diffDefRW.cpp	/^static int ignoreRN = 0;$/;"	v	file:
ignoreRowNames	defrw/defrw.cpp	/^static int ignoreRowNames = 0;$/;"	v	file:
ignoreVN	defdiff/diffDefRW.cpp	/^static int ignoreVN = 0;$/;"	v	file:
ignoreViaNames	defrw/defrw.cpp	/^static int ignoreViaNames = 0;$/;"	v	file:
in	def/defiScanchain.cpp	/^char** defiOrdered::in() const {$/;"	f	class:defiOrdered
in_	def/defiScanchain.hpp	/^  char** in_;$/;"	m	class:defiOrdered
in_	include/defiScanchain.hpp	/^  char** in_;$/;"	m	class:defiOrdered
initTraverse	def/defiPath.cpp	/^void defiPath::initTraverse() const {$/;"	f	class:defiPath
initTraverseBackwards	def/defiPath.cpp	/^void defiPath::initTraverseBackwards() const {$/;"	f	class:defiPath
init_call_func	def/defrData.hpp	/^    const char            *init_call_func;$/;"	m	class:defrContext
init_call_func	include/defrData.hpp	/^    const char            *init_call_func;$/;"	m	class:defrContext
init_symbol_table	def/defrSettings.cpp	/^defrSettings::init_symbol_table()$/;"	f	class:defrSettings
input_level	def/defrData.hpp	/^    int  input_level; $/;"	m	class:defrData
input_level	include/defrData.hpp	/^    int  input_level; $/;"	m	class:defrData
inst	def/defiIOTiming.cpp	/^const char* defiIOTiming::inst() const {$/;"	f	class:defiIOTiming
inst	def/defiScanchain.cpp	/^char** defiOrdered::inst() const {$/;"	f	class:defiOrdered
instLength_	def/defiIOTiming.hpp	/^  int instLength_;$/;"	m	class:defiIOTiming
instLength_	def/defiPartition.hpp	/^  int instLength_;$/;"	m	class:defiPartition
instLength_	include/defiIOTiming.hpp	/^  int instLength_;$/;"	m	class:defiIOTiming
instLength_	include/defiPartition.hpp	/^  int instLength_;$/;"	m	class:defiPartition
instName	def/defiPartition.cpp	/^const char* defiPartition::instName() const {$/;"	f	class:defiPartition
instName	def/defiPinProp.cpp	/^const char* defiPinProp::instName() const {$/;"	f	class:defiPinProp
instNameSize_	def/defiPinProp.hpp	/^  int instNameSize_;$/;"	m	class:defiPinProp
instNameSize_	include/defiPinProp.hpp	/^  int instNameSize_;$/;"	m	class:defiPinProp
instName_	def/defiPinProp.hpp	/^  char* instName_;$/;"	m	class:defiPinProp
instName_	include/defiPinProp.hpp	/^  char* instName_;$/;"	m	class:defiPinProp
inst_	def/defiIOTiming.hpp	/^  char* inst_;$/;"	m	class:defiIOTiming
inst_	def/defiPartition.hpp	/^  char* inst_;$/;"	m	class:defiPartition
inst_	def/defiScanchain.hpp	/^  char** inst_;$/;"	m	class:defiOrdered
inst_	include/defiIOTiming.hpp	/^  char* inst_;$/;"	m	class:defiIOTiming
inst_	include/defiPartition.hpp	/^  char* inst_;$/;"	m	class:defiPartition
inst_	include/defiScanchain.hpp	/^  char** inst_;$/;"	m	class:defiOrdered
instance	def/defiNet.cpp	/^const char* defiNet::instance(int index) const {$/;"	f	class:defiNet
instance	def/defiNet.cpp	/^const char* defiSubnet::instance(int index) const {$/;"	f	class:defiSubnet
instances_	def/defiNet.hpp	/^  char** instances_;      \/\/ instance names for connections$/;"	m	class:defiSubnet
instances_	def/defiNet.hpp	/^  char** instances_;    \/\/ instance names for connections$/;"	m	class:defiNet
instances_	include/defiNet.hpp	/^  char** instances_;      \/\/ instance names for connections$/;"	m	class:defiSubnet
instances_	include/defiNet.hpp	/^  char** instances_;    \/\/ instance names for connections$/;"	m	class:defiNet
integer	def/defrData.hpp	/^        int    integer ;$/;"	m	union:__anon12
integer	include/defrData.hpp	/^        int    integer ;$/;"	m	union:__anon6
iotiming_drivecell_opt	def/def.y	/^iotiming_drivecell_opt: iotiming_frompin$/;"	l
iotiming_end	def/def.y	/^iotiming_end: K_END K_IOTIMINGS$/;"	l
iotiming_frompin	def/def.y	/^iotiming_frompin: \/\/ empty $/;"	l
iotiming_member	def/def.y	/^iotiming_member:$/;"	l
iotiming_members	def/def.y	/^iotiming_members: $/;"	l
iotiming_parallel	def/def.y	/^iotiming_parallel: \/\/ empty $/;"	l
iotiming_rule	def/def.y	/^iotiming_rule: start_iotiming iotiming_members ';' $/;"	l
iotiming_rules	def/def.y	/^iotiming_rules: \/\/ empty $/;"	l
iotiming_section	def/def.y	/^iotiming_section: iotiming_start iotiming_rules iotiming_end$/;"	l
iotiming_start	def/def.y	/^iotiming_start: K_IOTIMINGS NUMBER ';'$/;"	l
isAssertion	def/defiAssertion.cpp	/^int defiAssertion::isAssertion() const {$/;"	f	class:defiAssertion
isAssertion_	def/defiAssertion.hpp	/^  char isAssertion_;$/;"	m	class:defiAssertion
isAssertion_	include/defiAssertion.hpp	/^  char isAssertion_;$/;"	m	class:defiAssertion
isConstraint	def/defiAssertion.cpp	/^int defiAssertion::isConstraint() const {$/;"	f	class:defiAssertion
isCover	def/defiComponent.cpp	/^int defiComponent::isCover() const {$/;"	f	class:defiComponent
isCover	def/defiNet.cpp	/^int defiNet::isCover() const {$/;"	f	class:defiNet
isCover	def/defiNet.cpp	/^int defiSubnet::isCover() const {$/;"	f	class:defiSubnet
isCover	def/defiPinCap.cpp	/^int defiPin::isCover() const {$/;"	f	class:defiPin
isCover	def/defiPinCap.cpp	/^int defiPinPort::isCover() const {$/;"	f	class:defiPinPort
isCover_	def/defiNet.hpp	/^  char isCover_;$/;"	m	class:defiNet
isCover_	def/defiNet.hpp	/^  char isCover_;$/;"	m	class:defiSubnet
isCover_	include/defiNet.hpp	/^  char isCover_;$/;"	m	class:defiNet
isCover_	include/defiNet.hpp	/^  char isCover_;$/;"	m	class:defiSubnet
isDelay	def/defiAssertion.cpp	/^int defiAssertion::isDelay() const {$/;"	f	class:defiAssertion
isDelay_	def/defiAssertion.hpp	/^  char isDelay_;$/;"	m	class:defiAssertion
isDelay_	include/defiAssertion.hpp	/^  char isDelay_;$/;"	m	class:defiAssertion
isDiff	def/defiAssertion.cpp	/^int defiAssertion::isDiff() const {$/;"	f	class:defiAssertion
isDiff_	def/defiAssertion.hpp	/^  char isDiff_;$/;"	m	class:defiAssertion
isDiff_	include/defiAssertion.hpp	/^  char isDiff_;$/;"	m	class:defiAssertion
isFixed	def/defiComponent.cpp	/^int defiComponent::isFixed() const {$/;"	f	class:defiComponent
isFixed	def/defiNet.cpp	/^int defiNet::isFixed() const {$/;"	f	class:defiNet
isFixed	def/defiNet.cpp	/^int defiSubnet::isFixed() const {$/;"	f	class:defiSubnet
isFixed	def/defiPinCap.cpp	/^int defiPin::isFixed() const {$/;"	f	class:defiPin
isFixed	def/defiPinCap.cpp	/^int defiPinPort::isFixed() const {$/;"	f	class:defiPinPort
isFixed_	def/defiNet.hpp	/^  char isFixed_;        \/\/ net type$/;"	m	class:defiNet
isFixed_	def/defiNet.hpp	/^  char isFixed_;        \/\/ net type$/;"	m	class:defiSubnet
isFixed_	include/defiNet.hpp	/^  char isFixed_;        \/\/ net type$/;"	m	class:defiNet
isFixed_	include/defiNet.hpp	/^  char isFixed_;        \/\/ net type$/;"	m	class:defiSubnet
isHoldFall	def/defiPartition.cpp	/^int defiPartition::isHoldFall() const {$/;"	f	class:defiPartition
isHoldRise	def/defiPartition.cpp	/^int defiPartition::isHoldRise() const {$/;"	f	class:defiPartition
isHorizontal	def/defiFPC.cpp	/^int defiFPC::isHorizontal() const {$/;"	f	class:defiFPC
isNet	def/defiAssertion.cpp	/^int defiAssertion::isNet(int index) const {$/;"	f	class:defiAssertion
isPath	def/defiAssertion.cpp	/^int defiAssertion::isPath(int index) const {$/;"	f	class:defiAssertion
isPin	def/defiPinProp.cpp	/^int defiPinProp::isPin() const {$/;"	f	class:defiPinProp
isPin_	def/defiPinProp.hpp	/^  char isPin_;$/;"	m	class:defiPinProp
isPin_	include/defiPinProp.hpp	/^  char isPin_;$/;"	m	class:defiPinProp
isPlaced	def/defiComponent.cpp	/^int defiComponent::isPlaced() const {$/;"	f	class:defiComponent
isPlaced	def/defiPinCap.cpp	/^int defiPin::isPlaced() const {$/;"	f	class:defiPin
isPlaced	def/defiPinCap.cpp	/^int defiPinPort::isPlaced() const {$/;"	f	class:defiPinPort
isProp	defdiff/diffDefRW.cpp	/^int isProp = 0;    \/\/ for PROPDEF$/;"	v
isProp	defrw/defrw.cpp	/^int isProp = 0;    \/\/ for PROPERTYDEFINITIONS$/;"	v
isRouted	def/defiNet.cpp	/^int defiNet::isRouted() const {$/;"	f	class:defiNet
isRouted	def/defiNet.cpp	/^int defiSubnet::isRouted() const {$/;"	f	class:defiSubnet
isRouted_	def/defiNet.hpp	/^  char isRouted_;$/;"	m	class:defiNet
isRouted_	def/defiNet.hpp	/^  char isRouted_;$/;"	m	class:defiSubnet
isRouted_	include/defiNet.hpp	/^  char isRouted_;$/;"	m	class:defiNet
isRouted_	include/defiNet.hpp	/^  char isRouted_;$/;"	m	class:defiSubnet
isSessionless	defrw/defrw.cpp	/^static int isSessionless = 0;$/;"	v	file:
isSetupFall	def/defiPartition.cpp	/^int defiPartition::isSetupFall() const {$/;"	f	class:defiPartition
isSetupRise	def/defiPartition.cpp	/^int defiPartition::isSetupRise() const {$/;"	f	class:defiPartition
isSum	def/defiAssertion.cpp	/^int defiAssertion::isSum() const {$/;"	f	class:defiAssertion
isSumSet	defdiff/diffDefRW.cpp	/^int isSumSet;      \/\/ to keep track if within SUM$/;"	v
isSumSet	defrw/defrw.cpp	/^int isSumSet;      \/\/ to keep track if within SUM$/;"	v
isSum_	def/defiAssertion.hpp	/^  char isSum_;$/;"	m	class:defiAssertion
isSum_	include/defiAssertion.hpp	/^  char isSum_;$/;"	m	class:defiAssertion
isUnplaced	def/defiComponent.cpp	/^int defiComponent::isUnplaced() const {$/;"	f	class:defiComponent
isUnplaced	def/defiPinCap.cpp	/^int defiPin::isUnplaced() const {$/;"	f	class:defiPin
isVertical	def/defiFPC.cpp	/^int defiFPC::isVertical() const {$/;"	f	class:defiFPC
isWiredlogic	def/defiAssertion.cpp	/^int defiAssertion::isWiredlogic() const {$/;"	f	class:defiAssertion
isWiredlogic_	def/defiAssertion.hpp	/^  char isWiredlogic_;$/;"	m	class:defiAssertion
isWiredlogic_	include/defiAssertion.hpp	/^  char isWiredlogic_;$/;"	m	class:defiAssertion
itemType	def/defiPartition.cpp	/^const char* defiPartition::itemType() const {$/;"	f	class:defiPartition
itemTypes_	def/defiAssertion.hpp	/^  char* itemTypes_;$/;"	m	class:defiAssertion
itemTypes_	include/defiAssertion.hpp	/^  char* itemTypes_;$/;"	m	class:defiAssertion
items_	def/defiAssertion.hpp	/^  int** items_;       \/\/ not really integers.$/;"	m	class:defiAssertion
items_	include/defiAssertion.hpp	/^  int** items_;       \/\/ not really integers.$/;"	m	class:defiAssertion
iterator	def/defiAlias.hpp	/^  defAliasIterator   *iterator;$/;"	m	class:defiAlias_itr
iterator	include/defiAlias.hpp	/^  defAliasIterator   *iterator;$/;"	m	class:defiAlias_itr
keys_	def/defiPath.hpp	/^  int* keys_;           \/\/ type of item in path$/;"	m	class:defiPath
keys_	include/defiPath.hpp	/^  int* keys_;           \/\/ type of item in path$/;"	m	class:defiPath
keyword	def/defrData.hpp	/^        int    keyword ;  \/\/ really just a nop $/;"	m	union:__anon12
keyword	include/defrData.hpp	/^        int    keyword ;  \/\/ really just a nop $/;"	m	union:__anon6
lVal	def/defrData.hpp	/^    double lVal;$/;"	m	class:defrData
lVal	include/defrData.hpp	/^    double lVal;$/;"	m	class:defrData
last	def/defrData.hpp	/^    char*  last; $/;"	m	class:defrData
last	include/defrData.hpp	/^    char*  last; $/;"	m	class:defrData
layer	def/defiNet.cpp	/^const char* defiVpin::layer() const {$/;"	f	class:defiVpin
layer	def/defiPinCap.cpp	/^const char* defiPin::layer(int index) const {$/;"	f	class:defiPin
layer	def/defiPinCap.cpp	/^const char* defiPinPort::layer(int index) const {$/;"	f	class:defiPinPort
layer	def/defiRowTrack.cpp	/^const char* defiTrack::layer(int index) const {$/;"	f	class:defiTrack
layer	def/defiVia.cpp	/^void defiVia::layer(int index, char** layer, int* xl, int* yl, $/;"	f	class:defiVia
layerComponentName	def/defiBlockage.cpp	/^const char* defiBlockage::layerComponentName() const {$/;"	f	class:defiBlockage
layerDesignRuleWidth	def/defiPinCap.cpp	/^int defiPin::layerDesignRuleWidth(int index) const {$/;"	f	class:defiPin
layerDesignRuleWidth	def/defiPinCap.cpp	/^int defiPinPort::layerDesignRuleWidth(int index) const {$/;"	f	class:defiPinPort
layerDiagWidth	def/defiNonDefault.cpp	/^double defiNonDefault::layerDiagWidth(int index) const { $/;"	f	class:defiNonDefault
layerDiagWidthVal	def/defiNonDefault.cpp	/^int defiNonDefault::layerDiagWidthVal(int index) const { $/;"	f	class:defiNonDefault
layerEffectiveWidth_	def/defiPinCap.hpp	/^  int    *layerEffectiveWidth_;$/;"	m	class:defiPinPort
layerEffectiveWidth_	def/defiPinCap.hpp	/^  int *layerEffectiveWidth_;        \/\/ 5.6, DESIGNRULEWIDTH in LAYER$/;"	m	class:defiPin
layerEffectiveWidth_	include/defiPinCap.hpp	/^  int    *layerEffectiveWidth_;$/;"	m	class:defiPinPort
layerEffectiveWidth_	include/defiPinCap.hpp	/^  int *layerEffectiveWidth_;        \/\/ 5.6, DESIGNRULEWIDTH in LAYER$/;"	m	class:defiPin
layerMask	def/defiFill.cpp	/^int defiFill::layerMask() const {$/;"	f	class:defiFill
layerMask	def/defiPinCap.cpp	/^int defiPin::layerMask(int index) const {$/;"	f	class:defiPin
layerMask	def/defiPinCap.cpp	/^int defiPinPort::layerMask(int index) const {$/;"	f	class:defiPinPort
layerMask_	def/defiPinCap.hpp	/^  int    *layerMask_;$/;"	m	class:defiPinPort
layerMask_	def/defiPinCap.hpp	/^  int *layerMask_;                  \/\/ 5.8$/;"	m	class:defiPin
layerMask_	include/defiPinCap.hpp	/^  int    *layerMask_;$/;"	m	class:defiPinPort
layerMask_	include/defiPinCap.hpp	/^  int *layerMask_;                  \/\/ 5.8$/;"	m	class:defiPin
layerMinSpacing_	def/defiPinCap.hpp	/^  int    *layerMinSpacing_;$/;"	m	class:defiPinPort
layerMinSpacing_	def/defiPinCap.hpp	/^  int *layerMinSpacing_;            \/\/ 5.6, SPACING in LAYER$/;"	m	class:defiPin
layerMinSpacing_	include/defiPinCap.hpp	/^  int    *layerMinSpacing_;$/;"	m	class:defiPinPort
layerMinSpacing_	include/defiPinCap.hpp	/^  int *layerMinSpacing_;            \/\/ 5.6, SPACING in LAYER$/;"	m	class:defiPin
layerName	def/defiBlockage.cpp	/^const char* defiBlockage::layerName() const {$/;"	f	class:defiBlockage
layerName	def/defiFill.cpp	/^const char* defiFill::layerName() const {$/;"	f	class:defiFill
layerName	def/defiNonDefault.cpp	/^const char* defiNonDefault::layerName(int index) const { $/;"	f	class:defiNonDefault
layerName	def/defiSlot.cpp	/^const char* defiSlot::layerName() const {$/;"	f	class:defiSlot
layerNameLength_	def/defiBlockage.hpp	/^  int    layerNameLength_;$/;"	m	class:defiBlockage
layerNameLength_	def/defiFill.hpp	/^  int   layerNameLength_;$/;"	m	class:defiFill
layerNameLength_	def/defiSlot.hpp	/^  int   layerNameLength_;$/;"	m	class:defiSlot
layerNameLength_	include/defiBlockage.hpp	/^  int    layerNameLength_;$/;"	m	class:defiBlockage
layerNameLength_	include/defiFill.hpp	/^  int   layerNameLength_;$/;"	m	class:defiFill
layerNameLength_	include/defiSlot.hpp	/^  int   layerNameLength_;$/;"	m	class:defiSlot
layerName_	def/defiBlockage.hpp	/^  char*  layerName_;$/;"	m	class:defiBlockage
layerName_	def/defiFill.hpp	/^  char* layerName_;$/;"	m	class:defiFill
layerName_	def/defiNonDefault.hpp	/^  char**  layerName_;$/;"	m	class:defiNonDefault
layerName_	def/defiSlot.hpp	/^  char* layerName_;$/;"	m	class:defiSlot
layerName_	include/defiBlockage.hpp	/^  char*  layerName_;$/;"	m	class:defiBlockage
layerName_	include/defiFill.hpp	/^  char* layerName_;$/;"	m	class:defiFill
layerName_	include/defiNonDefault.hpp	/^  char**  layerName_;$/;"	m	class:defiNonDefault
layerName_	include/defiSlot.hpp	/^  char* layerName_;$/;"	m	class:defiSlot
layerOpc_	def/defiFill.hpp	/^  int   layerOpc_;                  \/\/ 5.7$/;"	m	class:defiFill
layerOpc_	include/defiFill.hpp	/^  int   layerOpc_;                  \/\/ 5.7$/;"	m	class:defiFill
layerSpacing	def/defiNonDefault.cpp	/^double defiNonDefault::layerSpacing(int index) const { $/;"	f	class:defiNonDefault
layerSpacing	def/defiPinCap.cpp	/^int defiPin::layerSpacing(int index) const {$/;"	f	class:defiPin
layerSpacing	def/defiPinCap.cpp	/^int defiPinPort::layerSpacing(int index) const {$/;"	f	class:defiPinPort
layerSpacingVal	def/defiNonDefault.cpp	/^int defiNonDefault::layerSpacingVal(int index) const { $/;"	f	class:defiNonDefault
layerWidth	def/defiNonDefault.cpp	/^double defiNonDefault::layerWidth(int index) const { $/;"	f	class:defiNonDefault
layerWidthVal	def/defiNonDefault.cpp	/^int defiNonDefault::layerWidthVal(int index) const { $/;"	f	class:defiNonDefault
layerWireExt	def/defiNonDefault.cpp	/^double defiNonDefault::layerWireExt(int index) const { $/;"	f	class:defiNonDefault
layerWireExtVal	def/defiNonDefault.cpp	/^int defiNonDefault::layerWireExtVal(int index) const { $/;"	f	class:defiNonDefault
layer_	def/defiNet.hpp	/^  char* layer_;$/;"	m	class:defiVpin
layer_	include/defiNet.hpp	/^  char* layer_;$/;"	m	class:defiVpin
layer_blockage_rule	def/def.y	/^layer_blockage_rule: '+' K_SPACING NUMBER$/;"	l
layer_blockage_rules	def/def.y	/^layer_blockage_rules: \/\/ empty $/;"	l
layer_statement	def/def.y	/^layer_statement : \/\/ empty $/;"	l
layer_stmt	def/def.y	/^layer_stmt: '+' K_RECT {defData->dumb_mode = 1;defData->no_num = 1; } T_STRING mask pt pt $/;"	l
layer_stmts	def/def.y	/^layer_stmts: \/\/ empty $/;"	l
layer_viarule_opts	def/def.y	/^layer_viarule_opts: '+' K_ROWCOL NUMBER NUMBER$/;"	l
layersAllocated_	def/defiComponent.hpp	/^    int          layersAllocated_;  \/\/ allocated size of layers_$/;"	m	class:defiComponentMaskShiftLayer
layersAllocated_	def/defiNonDefault.hpp	/^  int     layersAllocated_;$/;"	m	class:defiNonDefault
layersAllocated_	def/defiPinCap.hpp	/^  int    layersAllocated_;$/;"	m	class:defiPinPort
layersAllocated_	def/defiPinCap.hpp	/^  int layersAllocated_;             \/\/ 5.6$/;"	m	class:defiPin
layersAllocated_	include/defiComponent.hpp	/^    int          layersAllocated_;  \/\/ allocated size of layers_$/;"	m	class:defiComponentMaskShiftLayer
layersAllocated_	include/defiNonDefault.hpp	/^  int     layersAllocated_;$/;"	m	class:defiNonDefault
layersAllocated_	include/defiPinCap.hpp	/^  int    layersAllocated_;$/;"	m	class:defiPinPort
layersAllocated_	include/defiPinCap.hpp	/^  int layersAllocated_;             \/\/ 5.6$/;"	m	class:defiPin
layersLength_	def/defiRowTrack.hpp	/^  int layersLength_;  \/\/ allocated size of layers_$/;"	m	class:defiTrack
layersLength_	def/defiVia.hpp	/^  int layersLength_;$/;"	m	class:defiVia
layersLength_	include/defiRowTrack.hpp	/^  int layersLength_;  \/\/ allocated size of layers_$/;"	m	class:defiTrack
layersLength_	include/defiVia.hpp	/^  int layersLength_;$/;"	m	class:defiVia
layers_	def/defiComponent.hpp	/^    char**       layers_;$/;"	m	class:defiComponentMaskShiftLayer
layers_	def/defiPinCap.hpp	/^  char** layers_;                   \/\/ 5.6, changed to array$/;"	m	class:defiPin
layers_	def/defiPinCap.hpp	/^  char** layers_;$/;"	m	class:defiPinPort
layers_	def/defiRowTrack.hpp	/^  char** layers_;$/;"	m	class:defiTrack
layers_	def/defiVia.hpp	/^  char** layers_;$/;"	m	class:defiVia
layers_	include/defiComponent.hpp	/^    char**       layers_;$/;"	m	class:defiComponentMaskShiftLayer
layers_	include/defiPinCap.hpp	/^  char** layers_;                   \/\/ 5.6, changed to array$/;"	m	class:defiPin
layers_	include/defiPinCap.hpp	/^  char** layers_;$/;"	m	class:defiPinPort
layers_	include/defiRowTrack.hpp	/^  char** layers_;$/;"	m	class:defiTrack
layers_	include/defiVia.hpp	/^  char** layers_;$/;"	m	class:defiVia
left	def/defiProp.cpp	/^double defiProp::left() const {$/;"	f	class:defiProp
leftHalo_	def/defiComponent.hpp	/^  int leftHalo_;$/;"	m	class:defiComponent
leftHalo_	include/defiComponent.hpp	/^  int leftHalo_;$/;"	m	class:defiComponent
left_	def/defiProp.hpp	/^  double left_, right_; \/\/ if it has a range the numbers are here.$/;"	m	class:defiProp
left_	include/defiProp.hpp	/^  double left_, right_; \/\/ if it has a range the numbers are here.$/;"	m	class:defiProp
lineBuffer	def/defrData.hpp	/^    char                lineBuffer[MSG_SIZE];$/;"	m	class:defrData
lineBuffer	include/defrData.hpp	/^    char                lineBuffer[MSG_SIZE];$/;"	m	class:defrData
lineNumberCB	defrw/defrw.cpp	/^void lineNumberCB(long long lineNo) {$/;"	f
lines2str	def/def_keywords.cpp	/^defrData::lines2str(long long lines) $/;"	f	class:defrData
ll	def/defiDefs.hpp	/^    defPOINT ll,ur;$/;"	m	struct:defrect
ll	include/defiDefs.hpp	/^    defPOINT ll,ur;$/;"	m	struct:defrect
macro	def/defiRowTrack.cpp	/^const char* defiGcellGrid::macro() const {$/;"	f	class:defiGcellGrid
macro	def/defiRowTrack.cpp	/^const char* defiRow::macro() const {$/;"	f	class:defiRow
macro	def/defiRowTrack.cpp	/^const char* defiTrack::macro() const {$/;"	f	class:defiTrack
macroLength_	def/defiRowTrack.hpp	/^  int macroLength_;  \/\/ allocated size of macro_;$/;"	m	class:defiTrack
macroLength_	def/defiRowTrack.hpp	/^  int macroLength_;$/;"	m	class:defiGcellGrid
macroLength_	def/defiRowTrack.hpp	/^  int macroLength_;$/;"	m	class:defiRow
macroLength_	include/defiRowTrack.hpp	/^  int macroLength_;  \/\/ allocated size of macro_;$/;"	m	class:defiTrack
macroLength_	include/defiRowTrack.hpp	/^  int macroLength_;$/;"	m	class:defiGcellGrid
macroLength_	include/defiRowTrack.hpp	/^  int macroLength_;$/;"	m	class:defiRow
macroName	def/defiComponent.cpp	/^const char* defiComponent::macroName() const {$/;"	f	class:defiComponent
macroName	def/defiTimingDisable.cpp	/^const char* defiTimingDisable::macroName() const {$/;"	f	class:defiTimingDisable
macroNameSize_	def/defiComponent.hpp	/^  int macroNameSize_;$/;"	m	class:defiComponent
macroNameSize_	include/defiComponent.hpp	/^  int macroNameSize_;$/;"	m	class:defiComponent
macroName_	def/defiComponent.hpp	/^  char* macroName_;$/;"	m	class:defiComponent
macroName_	include/defiComponent.hpp	/^  char* macroName_;$/;"	m	class:defiComponent
macro_	def/defiRowTrack.hpp	/^  char* macro_;$/;"	m	class:defiGcellGrid
macro_	def/defiRowTrack.hpp	/^  char* macro_;$/;"	m	class:defiRow
macro_	def/defiRowTrack.hpp	/^  char* macro_;$/;"	m	class:defiTrack
macro_	include/defiRowTrack.hpp	/^  char* macro_;$/;"	m	class:defiGcellGrid
macro_	include/defiRowTrack.hpp	/^  char* macro_;$/;"	m	class:defiRow
macro_	include/defiRowTrack.hpp	/^  char* macro_;$/;"	m	class:defiTrack
magic	def/defrData.hpp	/^    char*  magic; $/;"	m	class:defrData
magic	include/defrData.hpp	/^    char*  magic; $/;"	m	class:defrData
main	defdiff/differDef.cpp	/^int main(int argc, char** argv) {$/;"	f
main	defrw/defrw.cpp	/^int main(int argc, char** argv) {$/;"	f
main	defwrite/defwrite.cpp	/^int main(int argc, char** argv) {$/;"	f
main	defwrite/defwriteCbs.cpp	/^main(int argc, char** argv) {$/;"	f
mallocCB	defrw/defrw.cpp	/^void* mallocCB(size_t size) {$/;"	f
mask	def/def.y	/^mask: \/\/ empty $/;"	l
mask	def/defiBlockage.cpp	/^int defiBlockage::mask() const {$/;"	f	class:defiBlockage
maskLayer	def/def.y	/^maskLayer: T_STRING$/;"	l
maskShift	def/def.y	/^maskShift: '+' K_MASKSHIFT { defData->dumb_mode = 1; defData->no_num = 1; } T_STRING$/;"	l
maskShift	def/defiComponent.cpp	/^int defiComponent::maskShift(int index) const {$/;"	f	class:defiComponent
maskShiftLayer	def/defiComponent.cpp	/^const char* defiComponentMaskShiftLayer::maskShiftLayer(int index) const {$/;"	f	class:defiComponentMaskShiftLayer
maskShiftSize	def/defiComponent.cpp	/^int defiComponent::maskShiftSize() const {$/;"	f	class:defiComponent
maskShiftSize_	def/defiComponent.hpp	/^  int maskShiftSize_;$/;"	m	class:defiComponent
maskShiftSize_	include/defiComponent.hpp	/^  int maskShiftSize_;$/;"	m	class:defiComponent
maskShift_	def/defiComponent.hpp	/^  int* maskShift_; $/;"	m	class:defiComponent
maskShift_	include/defiComponent.hpp	/^  int* maskShift_; $/;"	m	class:defiComponent
mask_	def/defiBlockage.hpp	/^  int    mask_;                          \/\/ 5.8$/;"	m	class:defiBlockage
mask_	def/defiFill.hpp	/^  int   mask_;                      \/\/ 5.8$/;"	m	class:defiFill
mask_	def/defiPath.hpp	/^  int mask_;$/;"	m	class:defiPath
mask_	include/defiBlockage.hpp	/^  int    mask_;                          \/\/ 5.8$/;"	m	class:defiBlockage
mask_	include/defiFill.hpp	/^  int   mask_;                      \/\/ 5.8$/;"	m	class:defiFill
mask_	include/defiPath.hpp	/^  int mask_;$/;"	m	class:defiPath
mask_blockage_rule	def/def.y	/^mask_blockage_rule: $/;"	l
mask_is_keyword	def/defrData.hpp	/^    int  mask_is_keyword; $/;"	m	class:defrData
mask_is_keyword	include/defrData.hpp	/^    int  mask_is_keyword; $/;"	m	class:defrData
maxBits_	def/defiScanchain.hpp	/^  int   maxBits_;       \/\/ 5.4.1$/;"	m	class:defiScanchain
maxBits_	include/defiScanchain.hpp	/^  int   maxBits_;       \/\/ 5.4.1$/;"	m	class:defiScanchain
maxDensity_	def/defiBlockage.hpp	/^  double maxDensity_;                    \/\/ 5.7$/;"	m	class:defiBlockage
maxDensity_	include/defiBlockage.hpp	/^  double maxDensity_;                    \/\/ 5.7$/;"	m	class:defiBlockage
maxLayer	def/defiComponent.cpp	/^const char* defiComponent::maxLayer() const {$/;"	f	class:defiComponent
maxLayerSize_	def/defiComponent.hpp	/^  int maxLayerSize_;          \/\/ 5.7$/;"	m	class:defiComponent
maxLayerSize_	include/defiComponent.hpp	/^  int maxLayerSize_;          \/\/ 5.7$/;"	m	class:defiComponent
maxLayer_	def/defiComponent.hpp	/^  char* maxLayer_;            \/\/ 5.7$/;"	m	class:defiComponent
maxLayer_	include/defiComponent.hpp	/^  char* maxLayer_;            \/\/ 5.7$/;"	m	class:defiComponent
maxLimit	def/defiNet.cpp	40;"	d	file:
maxX	def/defiGroup.cpp	/^int defiGroup::maxX() const {$/;"	f	class:defiGroup
maxX_	def/defiGroup.hpp	/^  int maxX_;$/;"	m	class:defiGroup
maxX_	include/defiGroup.hpp	/^  int maxX_;$/;"	m	class:defiGroup
maxY	def/defiGroup.cpp	/^int defiGroup::maxY() const {$/;"	f	class:defiGroup
maxY_	def/defiGroup.hpp	/^  int maxY_;$/;"	m	class:defiGroup
maxY_	include/defiGroup.hpp	/^  int maxY_;$/;"	m	class:defiGroup
max_	def/defiPartition.hpp	/^  double min_, max_;$/;"	m	class:defiPartition
max_	include/defiPartition.hpp	/^  double min_, max_;$/;"	m	class:defiPartition
me	def/defiAlias.cpp	/^    std::map<std::string, std::string, defCompareStrings>::iterator me; $/;"	m	class:defAliasIterator	file:
minCutsAllocated_	def/defiNonDefault.hpp	/^  int     minCutsAllocated_;$/;"	m	class:defiNonDefault
minCutsAllocated_	include/defiNonDefault.hpp	/^  int     minCutsAllocated_;$/;"	m	class:defiNonDefault
minLayer	def/defiComponent.cpp	/^const char* defiComponent::minLayer() const {$/;"	f	class:defiComponent
minLayerSize_	def/defiComponent.hpp	/^  int minLayerSize_;          \/\/ 5.7$/;"	m	class:defiComponent
minLayerSize_	include/defiComponent.hpp	/^  int minLayerSize_;          \/\/ 5.7$/;"	m	class:defiComponent
minLayer_	def/defiComponent.hpp	/^  char* minLayer_;            \/\/ 5.7$/;"	m	class:defiComponent
minLayer_	include/defiComponent.hpp	/^  char* minLayer_;            \/\/ 5.7$/;"	m	class:defiComponent
minMaxEqual_	def/defiFPC.hpp	/^  double minMaxEqual_;$/;"	m	class:defiFPC
minMaxEqual_	include/defiFPC.hpp	/^  double minMaxEqual_;$/;"	m	class:defiFPC
minSpacing	def/defiBlockage.cpp	/^int defiBlockage::minSpacing() const {$/;"	f	class:defiBlockage
minSpacing_	def/defiBlockage.hpp	/^  int    minSpacing_;$/;"	m	class:defiBlockage
minSpacing_	include/defiBlockage.hpp	/^  int    minSpacing_;$/;"	m	class:defiBlockage
min_	def/defiPartition.hpp	/^  double min_, max_;$/;"	m	class:defiPartition
min_	include/defiPartition.hpp	/^  double min_, max_;$/;"	m	class:defiPartition
min_or_max_list	def/def.y	/^min_or_max_list: \/\/ empty $/;"	l
min_or_max_member	def/def.y	/^min_or_max_member: K_MIN NUMBER NUMBER$/;"	l
minmaxpins	def/def.y	/^minmaxpins: min_or_max_list K_PINS$/;"	l
msgLimit	def/defrData.hpp	/^    int msgLimit[DEF_MSGS];$/;"	m	class:defrData
msgLimit	include/defrData.hpp	/^    int msgLimit[DEF_MSGS];$/;"	m	class:defrData
mustjoin_is_keyword	def/defrData.hpp	/^    int  mustjoin_is_keyword; $/;"	m	class:defrData
mustjoin_is_keyword	include/defrData.hpp	/^    int  mustjoin_is_keyword; $/;"	m	class:defrData
musts_	def/defiNet.hpp	/^  char* musts_;           \/\/ must-join flags$/;"	m	class:defiSubnet
musts_	def/defiNet.hpp	/^  char* musts_;         \/\/ must-join flags for pins$/;"	m	class:defiNet
musts_	include/defiNet.hpp	/^  char* musts_;           \/\/ must-join flags$/;"	m	class:defiSubnet
musts_	include/defiNet.hpp	/^  char* musts_;         \/\/ must-join flags for pins$/;"	m	class:defiNet
myLogFunction	defrw/defrw.cpp	/^void myLogFunction(const char* errMsg){$/;"	f
myWarningLogFunction	defrw/defrw.cpp	/^void myWarningLogFunction(const char* errMsg){$/;"	f
nDDMsgs	def/defrSettings.hpp	/^    int  nDDMsgs; $/;"	m	class:defrSettings
nDDMsgs	include/defrSettings.hpp	/^    int  nDDMsgs; $/;"	m	class:defrSettings
name	def/defiComponent.cpp	/^const char* defiComponent::name() const {$/;"	f	class:defiComponent
name	def/defiFPC.cpp	/^const char* defiFPC::name() const {$/;"	f	class:defiFPC
name	def/defiGroup.cpp	/^const char* defiGroup::name() const {$/;"	f	class:defiGroup
name	def/defiNet.cpp	/^const char* defiNet::name() const {$/;"	f	class:defiNet
name	def/defiNet.cpp	/^const char* defiSubnet::name() const {$/;"	f	class:defiSubnet
name	def/defiNet.cpp	/^const char* defiVpin::name() const {$/;"	f	class:defiVpin
name	def/defiNonDefault.cpp	/^const char* defiNonDefault::name() const {$/;"	f	class:defiNonDefault
name	def/defiPartition.cpp	/^const char* defiPartition::name() const {$/;"	f	class:defiPartition
name	def/defiRegion.cpp	/^const char* defiRegion::name() const {$/;"	f	class:defiRegion
name	def/defiRowTrack.cpp	/^const char* defiRow::name() const {$/;"	f	class:defiRow
name	def/defiScanchain.cpp	/^const char* defiScanchain::name() const {$/;"	f	class:defiScanchain
name	def/defiSite.cpp	/^const char* defiSite::name() const {$/;"	f	class:defiSite
name	def/defiVia.cpp	/^const char* defiVia::name() const {$/;"	f	class:defiVia
nameLength_	def/defiFPC.hpp	/^  int nameLength_;$/;"	m	class:defiFPC
nameLength_	def/defiGroup.hpp	/^  int nameLength_;$/;"	m	class:defiGroup
nameLength_	def/defiPartition.hpp	/^  int nameLength_;$/;"	m	class:defiPartition
nameLength_	def/defiRegion.hpp	/^  int nameLength_;$/;"	m	class:defiRegion
nameLength_	def/defiRowTrack.hpp	/^  int nameLength_;$/;"	m	class:defiRow
nameLength_	def/defiScanchain.hpp	/^  int nameLength_;$/;"	m	class:defiScanchain
nameLength_	def/defiVia.hpp	/^  int nameLength_;$/;"	m	class:defiVia
nameLength_	include/defiFPC.hpp	/^  int nameLength_;$/;"	m	class:defiFPC
nameLength_	include/defiGroup.hpp	/^  int nameLength_;$/;"	m	class:defiGroup
nameLength_	include/defiPartition.hpp	/^  int nameLength_;$/;"	m	class:defiPartition
nameLength_	include/defiRegion.hpp	/^  int nameLength_;$/;"	m	class:defiRegion
nameLength_	include/defiRowTrack.hpp	/^  int nameLength_;$/;"	m	class:defiRow
nameLength_	include/defiScanchain.hpp	/^  int nameLength_;$/;"	m	class:defiScanchain
nameLength_	include/defiVia.hpp	/^  int nameLength_;$/;"	m	class:defiVia
nameSize_	def/defiComponent.hpp	/^  int nameSize_;        \/\/ allocated size of name.$/;"	m	class:defiComponent
nameSize_	def/defiNet.hpp	/^  int nameSize_;          \/\/ allocated size of name.$/;"	m	class:defiSubnet
nameSize_	def/defiNet.hpp	/^  int nameSize_;        \/\/ allocated size of name.$/;"	m	class:defiNet
nameSize_	def/defiProp.hpp	/^  int nameSize_;        \/\/ allocated size of name.$/;"	m	class:defiProp
nameSize_	def/defiSite.hpp	/^  int nameSize_;       \/\/ allocated size of siteName_$/;"	m	class:defiSite
nameSize_	include/defiComponent.hpp	/^  int nameSize_;        \/\/ allocated size of name.$/;"	m	class:defiComponent
nameSize_	include/defiNet.hpp	/^  int nameSize_;          \/\/ allocated size of name.$/;"	m	class:defiSubnet
nameSize_	include/defiNet.hpp	/^  int nameSize_;        \/\/ allocated size of name.$/;"	m	class:defiNet
nameSize_	include/defiProp.hpp	/^  int nameSize_;        \/\/ allocated size of name.$/;"	m	class:defiProp
nameSize_	include/defiSite.hpp	/^  int nameSize_;       \/\/ allocated size of siteName_$/;"	m	class:defiSite
name_	def/defiComponent.hpp	/^  char* name_;          \/\/ name.$/;"	m	class:defiComponent
name_	def/defiFPC.hpp	/^  char* name_;$/;"	m	class:defiFPC
name_	def/defiGroup.hpp	/^  char* name_;$/;"	m	class:defiGroup
name_	def/defiNet.hpp	/^  char*      name_;$/;"	m	class:defiShield
name_	def/defiNet.hpp	/^  char* name_;            \/\/ name.$/;"	m	class:defiSubnet
name_	def/defiNet.hpp	/^  char* name_;          \/\/ name.$/;"	m	class:defiNet
name_	def/defiNet.hpp	/^  char* name_;$/;"	m	class:defiVpin
name_	def/defiNonDefault.hpp	/^  char*   name_;$/;"	m	class:defiNonDefault
name_	def/defiPartition.hpp	/^  char* name_;$/;"	m	class:defiPartition
name_	def/defiRegion.hpp	/^  char* name_;$/;"	m	class:defiRegion
name_	def/defiRowTrack.hpp	/^  char* name_;$/;"	m	class:defiRow
name_	def/defiScanchain.hpp	/^  char* name_;$/;"	m	class:defiScanchain
name_	def/defiVia.hpp	/^  char* name_;$/;"	m	class:defiVia
name_	include/defiComponent.hpp	/^  char* name_;          \/\/ name.$/;"	m	class:defiComponent
name_	include/defiFPC.hpp	/^  char* name_;$/;"	m	class:defiFPC
name_	include/defiGroup.hpp	/^  char* name_;$/;"	m	class:defiGroup
name_	include/defiNet.hpp	/^  char*      name_;$/;"	m	class:defiShield
name_	include/defiNet.hpp	/^  char* name_;            \/\/ name.$/;"	m	class:defiSubnet
name_	include/defiNet.hpp	/^  char* name_;          \/\/ name.$/;"	m	class:defiNet
name_	include/defiNet.hpp	/^  char* name_;$/;"	m	class:defiVpin
name_	include/defiNonDefault.hpp	/^  char*   name_;$/;"	m	class:defiNonDefault
name_	include/defiPartition.hpp	/^  char* name_;$/;"	m	class:defiPartition
name_	include/defiRegion.hpp	/^  char* name_;$/;"	m	class:defiRegion
name_	include/defiRowTrack.hpp	/^  char* name_;$/;"	m	class:defiRow
name_	include/defiScanchain.hpp	/^  char* name_;$/;"	m	class:defiScanchain
name_	include/defiVia.hpp	/^  char* name_;$/;"	m	class:defiVia
namesAllocated_	def/defiFPC.hpp	/^  int namesAllocated_;  \/\/ allocated size of names_ and rowOrComp_$/;"	m	class:defiFPC
namesAllocated_	include/defiFPC.hpp	/^  int namesAllocated_;  \/\/ allocated size of names_ and rowOrComp_$/;"	m	class:defiFPC
namesUsed_	def/defiFPC.hpp	/^  int namesUsed_;       \/\/ number of entries used in the arrays$/;"	m	class:defiFPC
namesUsed_	include/defiFPC.hpp	/^  int namesUsed_;       \/\/ number of entries used in the arrays$/;"	m	class:defiFPC
names_	def/defiComponent.hpp	/^  char**  names_;$/;"	m	class:defiComponent
names_	def/defiFPC.hpp	/^  char** names_;$/;"	m	class:defiFPC
names_	def/defiNonDefault.hpp	/^  char**  names_;$/;"	m	class:defiNonDefault
names_	include/defiComponent.hpp	/^  char**  names_;$/;"	m	class:defiComponent
names_	include/defiFPC.hpp	/^  char** names_;$/;"	m	class:defiFPC
names_	include/defiNonDefault.hpp	/^  char**  names_;$/;"	m	class:defiNonDefault
names_case_sensitive	def/defrData.hpp	/^    int  names_case_sensitive; \/\/ always true in 5.6$/;"	m	class:defrData
names_case_sensitive	include/defrData.hpp	/^    int  names_case_sensitive; \/\/ always true in 5.6$/;"	m	class:defrData
ndr	defdiff/diffDefRW.cpp	/^int ndr(defrCallbackType_e c, defiNonDefault* nd, defiUserData ud) {$/;"	f
ndr	defrw/defrw.cpp	/^int ndr(defrCallbackType_e c, defiNonDefault* nd, defiUserData ud) {$/;"	f
needNPCbk	def/defrData.hpp	/^    int  needNPCbk; \/\/ if cbk for net path is needed$/;"	m	class:defrData
needNPCbk	include/defrData.hpp	/^    int  needNPCbk; \/\/ if cbk for net path is needed$/;"	m	class:defrData
needSNPCbk	def/defrData.hpp	/^    int  needSNPCbk; \/\/ if cbk for snet path is needed$/;"	m	class:defrData
needSNPCbk	include/defrData.hpp	/^    int  needSNPCbk; \/\/ if cbk for snet path is needed$/;"	m	class:defrData
net	def/defiAssertion.cpp	/^void defiAssertion::net(int index, char** netName) const {$/;"	f	class:defiAssertion
net	def/defiComponent.cpp	/^const char* defiComponent::net(int index) const {$/;"	f	class:defiComponent
netCB	defwrite/defwriteCbs.cpp	/^int netCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
netExpr	def/defiPinCap.cpp	/^const char* defiPin::netExpr() const {$/;"	f	class:defiPin
netExprLength_	def/defiPinCap.hpp	/^  int netExprLength_;                    \/\/ 5.6$/;"	m	class:defiPin
netExprLength_	include/defiPinCap.hpp	/^  int netExprLength_;                    \/\/ 5.6$/;"	m	class:defiPin
netExpr_	def/defiPinCap.hpp	/^  char* netExpr_;                        \/\/ 5.6$/;"	m	class:defiPin
netExpr_	include/defiPinCap.hpp	/^  char* netExpr_;                        \/\/ 5.6$/;"	m	class:defiPin
netName	def/defiAssertion.cpp	/^const char* defiAssertion::netName() const {$/;"	f	class:defiAssertion
netName	def/defiPinCap.cpp	/^const char* defiPin::netName() const {$/;"	f	class:defiPin
netNameLength_	def/defiAssertion.hpp	/^  int netNameLength_;$/;"	m	class:defiAssertion
netNameLength_	def/defiPinCap.hpp	/^  int netNameLength_;    \/\/ allocated size of net name$/;"	m	class:defiPin
netNameLength_	include/defiAssertion.hpp	/^  int netNameLength_;$/;"	m	class:defiAssertion
netNameLength_	include/defiPinCap.hpp	/^  int netNameLength_;    \/\/ allocated size of net name$/;"	m	class:defiPin
netName_	def/defiAssertion.hpp	/^  char* netName_;     \/\/ wired logic net name$/;"	m	class:defiAssertion
netName_	def/defiPinCap.hpp	/^  char* netName_;$/;"	m	class:defiPin
netName_	include/defiAssertion.hpp	/^  char* netName_;     \/\/ wired logic net name$/;"	m	class:defiAssertion
netName_	include/defiPinCap.hpp	/^  char* netName_;$/;"	m	class:defiPin
netNamef	defrw/defrw.cpp	/^int netNamef(defrCallbackType_e c, const char* netName, defiUserData ud) {$/;"	f
netOsnet	def/defrData.hpp	/^    int  netOsnet; \/\/ net = 1 & snet = 2$/;"	m	class:defrData
netOsnet	include/defrData.hpp	/^    int  netOsnet; \/\/ net = 1 & snet = 2$/;"	m	class:defrData
netSeCmp	defdiff/diffDefRW.cpp	/^static int netSeCmp = 0;$/;"	v	file:
netWarnings	def/defrData.hpp	/^    int  netWarnings; $/;"	m	class:defrData
netWarnings	include/defrData.hpp	/^    int  netWarnings; $/;"	m	class:defrData
net_and_connections	def/def.y	/^net_and_connections: net_start$/;"	l
net_connection	def/def.y	/^net_connection: '(' T_STRING {defData->dumb_mode = DEF_MAX_INT; defData->no_num = DEF_MAX_INT;}$/;"	l
net_connections	def/def.y	/^net_connections: \/\/ empty $/;"	l
net_name	def/def.y	/^net_name: T_STRING$/;"	l
net_option	def/def.y	/^net_option: '+' net_type $/;"	l
net_options	def/def.y	/^net_options: \/\/ empty $/;"	l
net_prop	def/def.y	/^net_prop: T_STRING NUMBER$/;"	l
net_prop_list	def/def.y	/^net_prop_list: net_prop$/;"	l
net_rules	def/def.y	/^net_rules: \/\/ empty $/;"	l
net_start	def/def.y	/^net_start: '-' {defData->dumb_mode = DEF_MAX_INT; defData->no_num = DEF_MAX_INT; defData->nondef_is_keyword = TRUE; defData->mustjoin_is_keyword = TRUE;} net_name $/;"	l
net_type	def/def.y	/^net_type: K_FIXED$/;"	l
netf	defdiff/diffDefRW.cpp	/^int netf(defrCallbackType_e c, defiNet* net, defiUserData ud) {$/;"	f
netf	defrw/defrw.cpp	/^int netf(defrCallbackType_e c, defiNet* net, defiUserData ud) {$/;"	f
netpath	defrw/defrw.cpp	/^int netpath(defrCallbackType_e, defiNet*, defiUserData) {$/;"	f
netsAllocated_	def/defiComponent.hpp	/^  int netsAllocated_;   \/\/ allocated size of nets array$/;"	m	class:defiComponent
netsAllocated_	include/defiComponent.hpp	/^  int netsAllocated_;   \/\/ allocated size of nets array$/;"	m	class:defiComponent
nets_	def/defiComponent.hpp	/^  char** nets_;         \/\/ net connections$/;"	m	class:defiComponent
nets_	include/defiComponent.hpp	/^  char** nets_;         \/\/ net connections$/;"	m	class:defiComponent
nets_section	def/def.y	/^nets_section:  start_nets net_rules end_nets$/;"	l
netsource_type	def/def.y	/^netsource_type: K_NETLIST$/;"	l
new_is_keyword	def/defrData.hpp	/^    int  new_is_keyword; $/;"	m	class:defrData
new_is_keyword	include/defrData.hpp	/^    int  new_is_keyword; $/;"	m	class:defrData
new_path	def/def.y	/^new_path: K_NEW { defData->dumb_mode = 1; } path$/;"	l
next	def/defiDefs.hpp	/^    defTOKEN *next;$/;"	m	struct:deftoken
next	def/defiPath.cpp	/^int defiPath::next() const $/;"	f	class:defiPath
next	def/defrData.hpp	/^    char*  next; $/;"	m	class:defrData
next	include/defiDefs.hpp	/^    defTOKEN *next;$/;"	m	struct:deftoken
next	include/defrData.hpp	/^    char*  next; $/;"	m	class:defrData
nextPt	def/def.y	/^nextPt: pt$/;"	l
nl_token	def/defrData.hpp	/^    int  nl_token; $/;"	m	class:defrData
nl_token	include/defrData.hpp	/^    int  nl_token; $/;"	m	class:defrData
nlines	def/defrData.hpp	/^    long long nlines;$/;"	m	class:defrData
nlines	include/defrData.hpp	/^    long long nlines;$/;"	m	class:defrData
noShield	def/defiNet.cpp	/^const defiShield* defiNet::noShield(int index) const {$/;"	f	class:defiNet
noShield	def/defiNet.cpp	/^defiShield* defiNet::noShield(int index) {$/;"	f	class:defiNet
no_num	def/defrData.hpp	/^    int  no_num; $/;"	m	class:defrData
no_num	include/defrData.hpp	/^    int  no_num; $/;"	m	class:defrData
nonDefaultRule	def/defiNet.cpp	/^const char* defiNet::nonDefaultRule() const {$/;"	f	class:defiNet
nonDefaultRule	def/defiNet.cpp	/^const char* defiSubnet::nonDefaultRule() const {$/;"	f	class:defiSubnet
nonDefaultRule_	def/defiNet.hpp	/^  char* nonDefaultRule_;$/;"	m	class:defiNet
nonDefaultRule_	def/defiNet.hpp	/^  char* nonDefaultRule_;$/;"	m	class:defiSubnet
nonDefaultRule_	include/defiNet.hpp	/^  char* nonDefaultRule_;$/;"	m	class:defiNet
nonDefaultRule_	include/defiNet.hpp	/^  char* nonDefaultRule_;$/;"	m	class:defiSubnet
nonDefaultWarnings	def/defrData.hpp	/^    int  nonDefaultWarnings; $/;"	m	class:defrData
nonDefaultWarnings	include/defrData.hpp	/^    int  nonDefaultWarnings; $/;"	m	class:defrData
nondefRulef	defrw/defrw.cpp	/^int nondefRulef(defrCallbackType_e c, const char* ruleName, defiUserData ud) {$/;"	f
nondef_is_keyword	def/defrData.hpp	/^    int  nondef_is_keyword; $/;"	m	class:defrData
nondef_is_keyword	include/defrData.hpp	/^    int  nondef_is_keyword; $/;"	m	class:defrData
nondefault_def	def/def.y	/^nondefault_def: '-' { defData->dumb_mode = 1; defData->no_num = 1; } T_STRING$/;"	l
nondefault_defs	def/def.y	/^nondefault_defs: \/\/ empty $/;"	l
nondefault_end	def/def.y	/^nondefault_end: K_END K_NONDEFAULTRULES$/;"	l
nondefault_layer_option	def/def.y	/^nondefault_layer_option:$/;"	l
nondefault_layer_options	def/def.y	/^nondefault_layer_options: \/\/ empty $/;"	l
nondefault_option	def/def.y	/^nondefault_option: '+' K_HARDSPACING$/;"	l
nondefault_options	def/def.y	/^nondefault_options: \/\/ empty  $/;"	l
nondefault_prop	def/def.y	/^nondefault_prop: T_STRING NUMBER$/;"	l
nondefault_prop_list	def/def.y	/^nondefault_prop_list: \/\/ empty $/;"	l
nondefault_prop_opt	def/def.y	/^nondefault_prop_opt: '+' K_PROPERTY { defData->dumb_mode = DEF_MAX_INT;  }$/;"	l
nondefault_start	def/def.y	/^nondefault_start: K_NONDEFAULTRULES NUMBER ';'$/;"	l
nondefaultrule_section	def/def.y	/^nondefaultrule_section: nondefault_start nondefault_def nondefault_defs$/;"	l
ntokens	def/defrData.hpp	/^    int  ntokens; $/;"	m	class:defrData
ntokens	include/defrData.hpp	/^    int  ntokens; $/;"	m	class:defrData
num	def/defiScanchain.cpp	/^int defiOrdered::num() const {$/;"	f	class:defiOrdered
numAPinDiffArea	def/defiPinCap.cpp	/^int defiPin::numAPinDiffArea() const {$/;"	f	class:defiPin
numAPinDiffArea_	def/defiPinCap.hpp	/^  int numAPinDiffArea_;                  \/\/ 5.4$/;"	m	class:defiPin
numAPinDiffArea_	include/defiPinCap.hpp	/^  int numAPinDiffArea_;                  \/\/ 5.4$/;"	m	class:defiPin
numAPinGateArea	def/defiPinCap.cpp	/^int defiPinAntennaModel::numAPinGateArea() const {$/;"	f	class:defiPinAntennaModel
numAPinGateArea_	def/defiPinCap.hpp	/^  int numAPinGateArea_;                  \/\/ 5.4$/;"	m	class:defiPinAntennaModel
numAPinGateArea_	include/defiPinCap.hpp	/^  int numAPinGateArea_;                  \/\/ 5.4$/;"	m	class:defiPinAntennaModel
numAPinMaxAreaCar	def/defiPinCap.cpp	/^int defiPinAntennaModel::numAPinMaxAreaCar() const {$/;"	f	class:defiPinAntennaModel
numAPinMaxAreaCar_	def/defiPinCap.hpp	/^  int numAPinMaxAreaCar_;                \/\/ 5.4$/;"	m	class:defiPinAntennaModel
numAPinMaxAreaCar_	include/defiPinCap.hpp	/^  int numAPinMaxAreaCar_;                \/\/ 5.4$/;"	m	class:defiPinAntennaModel
numAPinMaxCutCar	def/defiPinCap.cpp	/^int defiPinAntennaModel::numAPinMaxCutCar() const {$/;"	f	class:defiPinAntennaModel
numAPinMaxCutCar_	def/defiPinCap.hpp	/^  int numAPinMaxCutCar_;                 \/\/ 5.4$/;"	m	class:defiPinAntennaModel
numAPinMaxCutCar_	include/defiPinCap.hpp	/^  int numAPinMaxCutCar_;                 \/\/ 5.4$/;"	m	class:defiPinAntennaModel
numAPinMaxSideAreaCar	def/defiPinCap.cpp	/^int defiPinAntennaModel::numAPinMaxSideAreaCar() const {$/;"	f	class:defiPinAntennaModel
numAPinMaxSideAreaCar_	def/defiPinCap.hpp	/^  int numAPinMaxSideAreaCar_;            \/\/ 5.4$/;"	m	class:defiPinAntennaModel
numAPinMaxSideAreaCar_	include/defiPinCap.hpp	/^  int numAPinMaxSideAreaCar_;            \/\/ 5.4$/;"	m	class:defiPinAntennaModel
numAPinPartialCutArea	def/defiPinCap.cpp	/^int defiPin::numAPinPartialCutArea() const {$/;"	f	class:defiPin
numAPinPartialCutArea_	def/defiPinCap.hpp	/^  int numAPinPartialCutArea_;            \/\/ 5.4$/;"	m	class:defiPin
numAPinPartialCutArea_	include/defiPinCap.hpp	/^  int numAPinPartialCutArea_;            \/\/ 5.4$/;"	m	class:defiPin
numAPinPartialMetalArea	def/defiPinCap.cpp	/^int defiPin::numAPinPartialMetalArea() const {$/;"	f	class:defiPin
numAPinPartialMetalArea_	def/defiPinCap.hpp	/^  int numAPinPartialMetalArea_;          \/\/ 5.4$/;"	m	class:defiPin
numAPinPartialMetalArea_	include/defiPinCap.hpp	/^  int numAPinPartialMetalArea_;          \/\/ 5.4$/;"	m	class:defiPin
numAPinPartialMetalSideArea	def/defiPinCap.cpp	/^int defiPin::numAPinPartialMetalSideArea() const {$/;"	f	class:defiPin
numAPinPartialMetalSideArea_	def/defiPinCap.hpp	/^  int numAPinPartialMetalSideArea_;      \/\/ 5.4$/;"	m	class:defiPin
numAPinPartialMetalSideArea_	include/defiPinCap.hpp	/^  int numAPinPartialMetalSideArea_;      \/\/ 5.4$/;"	m	class:defiPin
numAllocated_	def/defiPath.hpp	/^  int numAllocated_;    \/\/ allocated size of keys and data$/;"	m	class:defiPath
numAllocated_	include/defiPath.hpp	/^  int numAllocated_;    \/\/ allocated size of keys and data$/;"	m	class:defiPath
numAntennaModel	def/defiPinCap.cpp	/^int defiPin::numAntennaModel() const {$/;"	f	class:defiPin
numAntennaModel_	def/defiPinCap.hpp	/^  int numAntennaModel_;$/;"	m	class:defiPin
numAntennaModel_	include/defiPinCap.hpp	/^  int numAntennaModel_;$/;"	m	class:defiPin
numConnections	def/defiNet.cpp	/^int defiNet::numConnections() const {$/;"	f	class:defiNet
numConnections	def/defiNet.cpp	/^int defiSubnet::numConnections() const {$/;"	f	class:defiSubnet
numCuts	def/defiNonDefault.cpp	/^int defiNonDefault::numCuts(int index) const {$/;"	f	class:defiNonDefault
numCuts_	def/defiNonDefault.hpp	/^  int*    numCuts_;$/;"	m	class:defiNonDefault
numCuts_	include/defiNonDefault.hpp	/^  int*    numCuts_;$/;"	m	class:defiNonDefault
numFloatingAllocated_	def/defiScanchain.hpp	/^  int numFloatingAllocated_;$/;"	m	class:defiScanchain
numFloatingAllocated_	include/defiScanchain.hpp	/^  int numFloatingAllocated_;$/;"	m	class:defiScanchain
numFloating_	def/defiScanchain.hpp	/^  int numFloating_;$/;"	m	class:defiScanchain
numFloating_	include/defiScanchain.hpp	/^  int numFloating_;$/;"	m	class:defiScanchain
numIsInt	def/defrData.cpp	/^defrData::numIsInt (char* volt) {$/;"	f	class:defrData
numItems	def/defiAssertion.cpp	/^int defiAssertion::numItems() const {$/;"	f	class:defiAssertion
numItemsAllocated_	def/defiAssertion.hpp	/^  int numItemsAllocated_;$/;"	m	class:defiAssertion
numItemsAllocated_	include/defiAssertion.hpp	/^  int numItemsAllocated_;$/;"	m	class:defiAssertion
numItems_	def/defiAssertion.hpp	/^  int numItems_;$/;"	m	class:defiAssertion
numItems_	include/defiAssertion.hpp	/^  int numItems_;$/;"	m	class:defiAssertion
numLayer	def/defiPinCap.cpp	/^int defiPin::numLayer() const {$/;"	f	class:defiPin
numLayer	def/defiPinCap.cpp	/^int defiPinPort::numLayer() const {$/;"	f	class:defiPinPort
numLayers	def/defiNonDefault.cpp	/^int defiNonDefault::numLayers() const { $/;"	f	class:defiNonDefault
numLayers	def/defiRowTrack.cpp	/^int defiTrack::numLayers() const {$/;"	f	class:defiTrack
numLayers	def/defiVia.cpp	/^int defiVia::numLayers() const {$/;"	f	class:defiVia
numLayers_	def/defiComponent.hpp	/^    int          numLayers_;        \/\/ number of places used in layers_$/;"	m	class:defiComponentMaskShiftLayer
numLayers_	def/defiNonDefault.hpp	/^  int     numLayers_;$/;"	m	class:defiNonDefault
numLayers_	def/defiPinCap.hpp	/^  int    numLayers_;$/;"	m	class:defiPinPort
numLayers_	def/defiPinCap.hpp	/^  int numLayers_;                   \/\/ 5.6$/;"	m	class:defiPin
numLayers_	def/defiRowTrack.hpp	/^  int numLayers_;  \/\/ number of places used in layers_$/;"	m	class:defiTrack
numLayers_	def/defiVia.hpp	/^  int numLayers_;$/;"	m	class:defiVia
numLayers_	include/defiComponent.hpp	/^    int          numLayers_;        \/\/ number of places used in layers_$/;"	m	class:defiComponentMaskShiftLayer
numLayers_	include/defiNonDefault.hpp	/^  int     numLayers_;$/;"	m	class:defiNonDefault
numLayers_	include/defiPinCap.hpp	/^  int    numLayers_;$/;"	m	class:defiPinPort
numLayers_	include/defiPinCap.hpp	/^  int numLayers_;                   \/\/ 5.6$/;"	m	class:defiPin
numLayers_	include/defiRowTrack.hpp	/^  int numLayers_;  \/\/ number of places used in layers_$/;"	m	class:defiTrack
numLayers_	include/defiVia.hpp	/^  int numLayers_;$/;"	m	class:defiVia
numMaskShiftLayers	def/defiComponent.cpp	/^int defiComponentMaskShiftLayer::numMaskShiftLayers() const {$/;"	f	class:defiComponentMaskShiftLayer
numMinCuts	def/defiNonDefault.cpp	/^int defiNonDefault::numMinCuts() const {$/;"	f	class:defiNonDefault
numMinCuts_	def/defiNonDefault.hpp	/^  int     numMinCuts_;$/;"	m	class:defiNonDefault
numMinCuts_	include/defiNonDefault.hpp	/^  int     numMinCuts_;$/;"	m	class:defiNonDefault
numNets	def/defiComponent.cpp	/^int defiComponent::numNets() const {$/;"	f	class:defiComponent
numNets_	def/defiComponent.hpp	/^  int numNets_;         \/\/ number of net connections$/;"	m	class:defiComponent
numNets_	include/defiComponent.hpp	/^  int numNets_;         \/\/ number of net connections$/;"	m	class:defiComponent
numNoShields	def/defiNet.cpp	/^int defiNet::numNoShields() const {$/;"	f	class:defiNet
numNoShields_	def/defiNet.hpp	/^  int numNoShields_;          \/\/ number of NOSHIELD paths used$/;"	m	class:defiNet
numNoShields_	include/defiNet.hpp	/^  int numNoShields_;          \/\/ number of NOSHIELD paths used$/;"	m	class:defiNet
numObjs	defdiff/diffDefRW.cpp	/^int numObjs;$/;"	v
numObjs	defrw/defrw.cpp	/^int numObjs;$/;"	v
numOrderedAllocated_	def/defiScanchain.hpp	/^  int numOrderedAllocated_;$/;"	m	class:defiScanchain
numOrderedAllocated_	include/defiScanchain.hpp	/^  int numOrderedAllocated_;$/;"	m	class:defiScanchain
numOrderedLists	def/defiScanchain.cpp	/^int defiScanchain::numOrderedLists() const {$/;"	f	class:defiScanchain
numOrdered_	def/defiScanchain.hpp	/^  int numOrdered_;$/;"	m	class:defiScanchain
numOrdered_	include/defiScanchain.hpp	/^  int numOrdered_;$/;"	m	class:defiScanchain
numParts	def/defiFPC.cpp	/^int defiFPC::numParts() const {$/;"	f	class:defiFPC
numPaths	def/defiNet.cpp	/^int defiNet::numPaths() const {$/;"	f	class:defiNet
numPaths	def/defiNet.cpp	/^int defiShield::numPaths() const {$/;"	f	class:defiShield
numPaths	def/defiNet.cpp	/^int defiSubnet::numPaths() const {$/;"	f	class:defiSubnet
numPaths	def/defiNet.cpp	/^int defiWire::numPaths() const {$/;"	f	class:defiWire
numPaths_	def/defiNet.hpp	/^  int        numPaths_;$/;"	m	class:defiShield
numPaths_	def/defiNet.hpp	/^  int        numPaths_;$/;"	m	class:defiWire
numPaths_	def/defiNet.hpp	/^  int numPaths_;       \/\/ number of paths used$/;"	m	class:defiNet
numPaths_	def/defiNet.hpp	/^  int numPaths_;       \/\/ number of paths used$/;"	m	class:defiSubnet
numPaths_	include/defiNet.hpp	/^  int        numPaths_;$/;"	m	class:defiShield
numPaths_	include/defiNet.hpp	/^  int        numPaths_;$/;"	m	class:defiWire
numPaths_	include/defiNet.hpp	/^  int numPaths_;       \/\/ number of paths used$/;"	m	class:defiNet
numPaths_	include/defiNet.hpp	/^  int numPaths_;       \/\/ number of paths used$/;"	m	class:defiSubnet
numPins	def/defiPartition.cpp	/^int defiPartition::numPins() const {$/;"	f	class:defiPartition
numPins_	def/defiNet.hpp	/^  int numPins_;           \/\/ number of pins used in array.$/;"	m	class:defiSubnet
numPins_	def/defiNet.hpp	/^  int numPins_;         \/\/ number of pins used in array.$/;"	m	class:defiNet
numPins_	def/defiPartition.hpp	/^  int numPins_;$/;"	m	class:defiPartition
numPins_	include/defiNet.hpp	/^  int numPins_;           \/\/ number of pins used in array.$/;"	m	class:defiSubnet
numPins_	include/defiNet.hpp	/^  int numPins_;         \/\/ number of pins used in array.$/;"	m	class:defiNet
numPins_	include/defiPartition.hpp	/^  int numPins_;$/;"	m	class:defiPartition
numPointAlloc_	def/defiMisc.hpp	/^    int    numPointAlloc_;$/;"	m	class:defiStyles
numPointAlloc_	include/defiMisc.hpp	/^    int    numPointAlloc_;$/;"	m	class:defiStyles
numPoints	cdef/defiTypedefs.h	/^  int numPoints;$/;"	m	struct:defiPoints
numPoints	def/defiMisc.cpp	/^int defiGeometries::numPoints() const {$/;"	f	class:defiGeometries
numPoints	def/defiMisc.hpp	/^  int numPoints;$/;"	m	struct:defiPoints
numPoints	include/defiMisc.hpp	/^  int numPoints;$/;"	m	struct:defiPoints
numPoints	include/defiTypedefs.h	/^  int numPoints;$/;"	m	struct:defiPoints
numPoints_	def/defiMisc.hpp	/^  int numPoints_;$/;"	m	class:defiGeometries
numPoints_	include/defiMisc.hpp	/^  int numPoints_;$/;"	m	class:defiGeometries
numPolygons	def/defiBlockage.cpp	/^int defiBlockage::numPolygons() const {$/;"	f	class:defiBlockage
numPolygons	def/defiFill.cpp	/^int defiFill::numPolygons() const {$/;"	f	class:defiFill
numPolygons	def/defiNet.cpp	/^int defiNet::numPolygons() const {$/;"	f	class:defiNet
numPolygons	def/defiPinCap.cpp	/^int defiPin::numPolygons() const {$/;"	f	class:defiPin
numPolygons	def/defiPinCap.cpp	/^int defiPinPort::numPolygons() const {$/;"	f	class:defiPinPort
numPolygons	def/defiSlot.cpp	/^int defiSlot::numPolygons() const {$/;"	f	class:defiSlot
numPolygons	def/defiVia.cpp	/^int defiVia::numPolygons() const {$/;"	f	class:defiVia
numPolys_	def/defiBlockage.hpp	/^  int    numPolys_;                      \/\/ 5.6$/;"	m	class:defiBlockage
numPolys_	def/defiFill.hpp	/^  int   numPolys_;                  \/\/ 5.6$/;"	m	class:defiFill
numPolys_	def/defiNet.hpp	/^  int numPolys_;                    \/\/ 5.6$/;"	m	class:defiNet
numPolys_	def/defiPinCap.hpp	/^  int    numPolys_;$/;"	m	class:defiPinPort
numPolys_	def/defiPinCap.hpp	/^  int numPolys_;                    \/\/ 5.6$/;"	m	class:defiPin
numPolys_	def/defiSlot.hpp	/^  int   numPolys_;                  \/\/ 5.6$/;"	m	class:defiSlot
numPolys_	def/defiVia.hpp	/^  int numPolys_;            \/\/ 5.6$/;"	m	class:defiVia
numPolys_	include/defiBlockage.hpp	/^  int    numPolys_;                      \/\/ 5.6$/;"	m	class:defiBlockage
numPolys_	include/defiFill.hpp	/^  int   numPolys_;                  \/\/ 5.6$/;"	m	class:defiFill
numPolys_	include/defiNet.hpp	/^  int numPolys_;                    \/\/ 5.6$/;"	m	class:defiNet
numPolys_	include/defiPinCap.hpp	/^  int    numPolys_;$/;"	m	class:defiPinPort
numPolys_	include/defiPinCap.hpp	/^  int numPolys_;                    \/\/ 5.6$/;"	m	class:defiPin
numPolys_	include/defiSlot.hpp	/^  int   numPolys_;                  \/\/ 5.6$/;"	m	class:defiSlot
numPolys_	include/defiVia.hpp	/^  int numPolys_;            \/\/ 5.6$/;"	m	class:defiVia
numPorts	def/defiPinCap.cpp	/^int defiPin::numPorts() const {$/;"	f	class:defiPin
numPorts_	def/defiPinCap.hpp	/^  int numPorts_;                    \/\/ 5.7$/;"	m	class:defiPin
numPorts_	include/defiPinCap.hpp	/^  int numPorts_;                    \/\/ 5.7$/;"	m	class:defiPin
numProperties_	def/defiPropType.hpp	/^  int    numProperties_;$/;"	m	class:defiPropType
numProperties_	include/defiPropType.hpp	/^  int    numProperties_;$/;"	m	class:defiPropType
numProps	def/defiComponent.cpp	/^int defiComponent::numProps() const {$/;"	f	class:defiComponent
numProps	def/defiGroup.cpp	/^int defiGroup::numProps() const {$/;"	f	class:defiGroup
numProps	def/defiNet.cpp	/^int defiNet::numProps() const {$/;"	f	class:defiNet
numProps	def/defiNonDefault.cpp	/^int defiNonDefault::numProps() const {$/;"	f	class:defiNonDefault
numProps	def/defiPinProp.cpp	/^int defiPinProp::numProps() const {$/;"	f	class:defiPinProp
numProps	def/defiRegion.cpp	/^int defiRegion::numProps() const {$/;"	f	class:defiRegion
numProps	def/defiRowTrack.cpp	/^int defiRow::numProps() const {$/;"	f	class:defiRow
numProps_	def/defiComponent.hpp	/^  int numProps_;$/;"	m	class:defiComponent
numProps_	def/defiGroup.hpp	/^  int numProps_;$/;"	m	class:defiGroup
numProps_	def/defiNet.hpp	/^  int numProps_;        \/\/ num of props in array$/;"	m	class:defiNet
numProps_	def/defiNonDefault.hpp	/^  int     numProps_;$/;"	m	class:defiNonDefault
numProps_	def/defiPinProp.hpp	/^  int numProps_;$/;"	m	class:defiPinProp
numProps_	def/defiRegion.hpp	/^  int numProps_;$/;"	m	class:defiRegion
numProps_	def/defiRowTrack.hpp	/^  int numProps_;$/;"	m	class:defiRow
numProps_	include/defiComponent.hpp	/^  int numProps_;$/;"	m	class:defiComponent
numProps_	include/defiGroup.hpp	/^  int numProps_;$/;"	m	class:defiGroup
numProps_	include/defiNet.hpp	/^  int numProps_;        \/\/ num of props in array$/;"	m	class:defiNet
numProps_	include/defiNonDefault.hpp	/^  int     numProps_;$/;"	m	class:defiNonDefault
numProps_	include/defiPinProp.hpp	/^  int numProps_;$/;"	m	class:defiPinProp
numProps_	include/defiRegion.hpp	/^  int numProps_;$/;"	m	class:defiRegion
numProps_	include/defiRowTrack.hpp	/^  int numProps_;$/;"	m	class:defiRow
numPts_	def/defiFill.hpp	/^  int   numPts_;                    \/\/ 5.7$/;"	m	class:defiFill
numPts_	def/defiNet.hpp	/^  int   numPts_;                    $/;"	m	class:defiNet
numPts_	include/defiFill.hpp	/^  int   numPts_;                    \/\/ 5.7$/;"	m	class:defiFill
numPts_	include/defiNet.hpp	/^  int   numPts_;                    $/;"	m	class:defiNet
numRectangles	def/defiBlockage.cpp	/^int defiBlockage::numRectangles() const {$/;"	f	class:defiBlockage
numRectangles	def/defiFill.cpp	/^int defiFill::numRectangles() const {$/;"	f	class:defiFill
numRectangles	def/defiNet.cpp	/^int defiNet::numRectangles() const {$/;"	f	class:defiNet
numRectangles	def/defiRegion.cpp	/^int defiRegion::numRectangles() const {$/;"	f	class:defiRegion
numRectangles	def/defiSlot.cpp	/^int defiSlot::numRectangles() const {$/;"	f	class:defiSlot
numRectangles_	def/defiBlockage.hpp	/^  int    numRectangles_;$/;"	m	class:defiBlockage
numRectangles_	def/defiFill.hpp	/^  int   numRectangles_;$/;"	m	class:defiFill
numRectangles_	def/defiRegion.hpp	/^  int numRectangles_;$/;"	m	class:defiRegion
numRectangles_	def/defiSlot.hpp	/^  int   numRectangles_;$/;"	m	class:defiSlot
numRectangles_	include/defiBlockage.hpp	/^  int    numRectangles_;$/;"	m	class:defiBlockage
numRectangles_	include/defiFill.hpp	/^  int   numRectangles_;$/;"	m	class:defiFill
numRectangles_	include/defiRegion.hpp	/^  int numRectangles_;$/;"	m	class:defiRegion
numRectangles_	include/defiSlot.hpp	/^  int   numRectangles_;$/;"	m	class:defiSlot
numRects_	def/defiComponent.hpp	/^  int numRects_;$/;"	m	class:defiComponent
numRects_	def/defiGroup.hpp	/^  int numRects_;$/;"	m	class:defiGroup
numRects_	def/defiNet.hpp	/^  int numRects_;                    \/\/ 5.6$/;"	m	class:defiNet
numRects_	include/defiComponent.hpp	/^  int numRects_;$/;"	m	class:defiComponent
numRects_	include/defiGroup.hpp	/^  int numRects_;$/;"	m	class:defiGroup
numRects_	include/defiNet.hpp	/^  int numRects_;                    \/\/ 5.6$/;"	m	class:defiNet
numShieldNet_	def/defiNet.hpp	/^  int numShieldNet_;          \/\/ number of SHIELDNETS used in array.$/;"	m	class:defiNet
numShieldNet_	include/defiNet.hpp	/^  int numShieldNet_;          \/\/ number of SHIELDNETS used in array.$/;"	m	class:defiNet
numShieldNets	def/defiNet.cpp	/^int defiNet::numShieldNets() const {$/;"	f	class:defiNet
numShields	def/defiNet.cpp	/^int defiNet::numShields() const {$/;"	f	class:defiNet
numShields_	def/defiNet.hpp	/^  int numShields_;            \/\/ number of SHIELD paths used$/;"	m	class:defiNet
numShields_	include/defiNet.hpp	/^  int numShields_;            \/\/ number of SHIELD paths used$/;"	m	class:defiNet
numSpacingRules	def/defiNet.cpp	/^int defiNet::numSpacingRules() const {$/;"	f	class:defiNet
numSpacing_	def/defiNet.hpp	/^  int numSpacing_;$/;"	m	class:defiNet
numSpacing_	include/defiNet.hpp	/^  int numSpacing_;$/;"	m	class:defiNet
numSubnets	def/defiNet.cpp	/^int defiNet::numSubnets() const {$/;"	f	class:defiNet
numSubnets_	def/defiNet.hpp	/^  int numSubnets_;      \/\/ num of subnets in array$/;"	m	class:defiNet
numSubnets_	include/defiNet.hpp	/^  int numSubnets_;      \/\/ num of subnets in array$/;"	m	class:defiNet
numUsed_	def/defiPath.hpp	/^  int numUsed_;         \/\/ number of items used in array$/;"	m	class:defiPath
numUsed_	include/defiPath.hpp	/^  int numUsed_;         \/\/ number of items used in array$/;"	m	class:defiPath
numViaPts	def/defiFill.cpp	/^int defiFill::numViaPts() const {$/;"	f	class:defiFill
numViaRules	def/defiNonDefault.cpp	/^int defiNonDefault::numViaRules() const { $/;"	f	class:defiNonDefault
numViaRules_	def/defiNonDefault.hpp	/^  int     numViaRules_;$/;"	m	class:defiNonDefault
numViaRules_	include/defiNonDefault.hpp	/^  int     numViaRules_;$/;"	m	class:defiNonDefault
numViaSpecs	def/defiNet.cpp	/^int defiNet::numViaSpecs() const {$/;"	f	class:defiNet
numVias	def/defiNonDefault.cpp	/^int defiNonDefault::numVias() const { $/;"	f	class:defiNonDefault
numVias	def/defiPinCap.cpp	/^int defiPin::numVias() const {$/;"	f	class:defiPin
numVias	def/defiPinCap.cpp	/^int defiPinPort::numVias() const {$/;"	f	class:defiPinPort
numVias_	def/defiNonDefault.hpp	/^  int     numVias_;$/;"	m	class:defiNonDefault
numVias_	def/defiPinCap.hpp	/^  int    numVias_;$/;"	m	class:defiPinPort
numVias_	def/defiPinCap.hpp	/^  int numVias_;                     \/\/ 5.7$/;"	m	class:defiPin
numVias_	include/defiNonDefault.hpp	/^  int     numVias_;$/;"	m	class:defiNonDefault
numVias_	include/defiPinCap.hpp	/^  int    numVias_;$/;"	m	class:defiPinPort
numVias_	include/defiPinCap.hpp	/^  int numVias_;                     \/\/ 5.7$/;"	m	class:defiPin
numVpins	def/defiNet.cpp	/^int defiNet::numVpins() const {$/;"	f	class:defiNet
numVpins_	def/defiNet.hpp	/^  int numVpins_;$/;"	m	class:defiNet
numVpins_	include/defiNet.hpp	/^  int numVpins_;$/;"	m	class:defiNet
numWidthRules	def/defiNet.cpp	/^int defiNet::numWidthRules() const {$/;"	f	class:defiNet
numWidths_	def/defiNet.hpp	/^  int numWidths_;$/;"	m	class:defiNet
numWidths_	include/defiNet.hpp	/^  int numWidths_;$/;"	m	class:defiNet
numWires	def/defiNet.cpp	/^int defiNet::numWires() const {$/;"	f	class:defiNet
numWires	def/defiNet.cpp	/^int defiSubnet::numWires() const {$/;"	f	class:defiSubnet
numWires_	def/defiNet.hpp	/^  int numWires_;          \/\/ number of wires defined in the subnet$/;"	m	class:defiSubnet
numWires_	def/defiNet.hpp	/^  int numWires_;         \/\/ number of wires defined in the net$/;"	m	class:defiNet
numWires_	include/defiNet.hpp	/^  int numWires_;          \/\/ number of wires defined in the subnet$/;"	m	class:defiSubnet
numWires_	include/defiNet.hpp	/^  int numWires_;         \/\/ number of wires defined in the net$/;"	m	class:defiNet
numX	cdef/defiTypedefs.h	/^  int numX;$/;"	m	struct:defiViaData
numX	def/defiPath.hpp	/^  int numX;$/;"	m	struct:defiViaData
numX	include/defiPath.hpp	/^  int numX;$/;"	m	struct:defiViaData
numX	include/defiTypedefs.h	/^  int numX;$/;"	m	struct:defiViaData
numX_	def/defiPath.hpp	/^  int numX_;      $/;"	m	class:defiPath
numX_	include/defiPath.hpp	/^  int numX_;      $/;"	m	class:defiPath
numY	cdef/defiTypedefs.h	/^  int numY;$/;"	m	struct:defiViaData
numY	def/defiPath.hpp	/^  int numY;$/;"	m	struct:defiViaData
numY	include/defiPath.hpp	/^  int numY;$/;"	m	struct:defiViaData
numY	include/defiTypedefs.h	/^  int numY;$/;"	m	struct:defiViaData
numY_	def/defiPath.hpp	/^  int numY_;$/;"	m	class:defiPath
numY_	include/defiPath.hpp	/^  int numY_;$/;"	m	class:defiPath
num_	def/defiScanchain.hpp	/^  int num_;$/;"	m	class:defiOrdered
num_	include/defiScanchain.hpp	/^  int num_;$/;"	m	class:defiOrdered
number	def/defiProp.cpp	/^double defiProp::number() const {$/;"	f	class:defiProp
offset	def/defiVia.cpp	/^void defiVia::offset(int* xBotOffset, int* yBotOffset, int* xTopOffset,$/;"	f	class:defiVia
one_floating_inst	def/def.y	/^one_floating_inst: T_STRING$/;"	l
one_net	def/def.y	/^one_net: net_and_connections net_options ';'$/;"	l
one_ordered_inst	def/def.y	/^one_ordered_inst: T_STRING$/;"	l
operand	def/def.y	/^operand: K_NET { defData->dumb_mode = 1; defData->no_num = 1; } T_STRING $/;"	l
operand	defdiff/diffDefRW.cpp	/^void operand(defrCallbackType_e c, defiAssertion* a, int ind) {$/;"	f
operand	defrw/defrw.cpp	/^void operand(defrCallbackType_e c, defiAssertion* a, int ind) {$/;"	f
operand_list	def/def.y	/^operand_list: operand $/;"	l
operand_rule	def/def.y	/^operand_rule: '-' operand delay_specs ';'$/;"	l
operator ()	def/defrData.hpp	/^    bool operator()(const std::string &lhs, const std::string &rhs) const {$/;"	f	struct:defCompareStrings
operator ()	def/defrSettings.hpp	/^    bool operator()(const char* lhs, const char* rhs) const {$/;"	f	struct:defCompareCStrings
operator ()	include/defrData.hpp	/^    bool operator()(const std::string &lhs, const std::string &rhs) const {$/;"	f	struct:defCompareStrings
operator ()	include/defrSettings.hpp	/^    bool operator()(const char* lhs, const char* rhs) const {$/;"	f	struct:defCompareCStrings
opt_common_pins	def/def.y	/^opt_common_pins: \/\/ empty $/;"	l
opt_mask_opc	def/def.y	/^opt_mask_opc: fill_via_opc$/;"	l
opt_mask_opc_l	def/def.y	/^opt_mask_opc_l: fill_layer_opc$/;"	l
opt_num_val	def/def.y	/^opt_num_val: \/\/ empty $/;"	l
opt_paren	def/def.y	/^opt_paren:$/;"	l
opt_pattern	def/def.y	/^opt_pattern :$/;"	l
opt_pin	def/def.y	/^opt_pin :$/;"	l
opt_plus	def/def.y	/^opt_plus:$/;"	l
opt_range	def/def.y	/^opt_range: \/\/ nothing $/;"	l
opt_semi	def/def.y	/^opt_semi:$/;"	l
opt_shape_style	def/def.y	/^opt_shape_style:$/;"	l
opt_snet_range	def/def.y	/^opt_snet_range: \/\/ nothing $/;"	l
opt_spaths	def/def.y	/^opt_spaths: \/\/ empty $/;"	l
opt_style	def/def.y	/^opt_style: K_STYLE NUMBER$/;"	l
opt_taper	def/def.y	/^opt_taper: K_TAPER$/;"	l
opt_taper_style	def/def.y	/^opt_taper_style: opt_style$/;"	l
opt_taper_style_s	def/def.y	/^opt_taper_style_s: \/\/ empty $/;"	l
ordered	def/defiScanchain.cpp	/^void defiScanchain::ordered(int index, int* size, char*** inst,$/;"	f	class:defiScanchain
ordered_	def/defiScanchain.hpp	/^  defiOrdered** ordered_; $/;"	m	class:defiScanchain
ordered_	include/defiScanchain.hpp	/^  defiOrdered** ordered_; $/;"	m	class:defiScanchain
ordered_inst_list	def/def.y	/^ordered_inst_list: \/\/ empty $/;"	l
ordered_pins	def/def.y	/^ordered_pins: \/\/ empty  $/;"	l
orient	def/def.y	/^orient: K_N    {$$ = 0;}$/;"	l
orient	def/defiNet.cpp	/^int defiVpin::orient() const  {$/;"	f	class:defiVpin
orient	def/defiPinCap.cpp	/^int defiPin::orient() const {$/;"	f	class:defiPin
orient	def/defiPinCap.cpp	/^int defiPinPort::orient() const {$/;"	f	class:defiPinPort
orient	def/defiRowTrack.cpp	/^int defiRow::orient() const {$/;"	f	class:defiRow
orient	def/defiSite.cpp	/^int defiSite::orient() const {$/;"	f	class:defiSite
orientStr	def/defiNet.cpp	/^const char* defiVpin::orientStr() const  {$/;"	f	class:defiVpin
orientStr	def/defiPinCap.cpp	/^const char* defiPin::orientStr() const {$/;"	f	class:defiPin
orientStr	def/defiPinCap.cpp	/^const char* defiPinPort::orientStr() const {$/;"	f	class:defiPinPort
orientStr	def/defiRowTrack.cpp	/^const char* defiRow::orientStr() const {$/;"	f	class:defiRow
orientStr	def/defiSite.cpp	/^const char* defiSite::orientStr() const {$/;"	f	class:defiSite
orientStr	defrw/defrw.cpp	/^char* orientStr(int orient) {$/;"	f
orient_	def/defiComponent.hpp	/^  int orient_;          \/\/ orientation$/;"	m	class:defiComponent
orient_	def/defiNet.hpp	/^  int orient_;  \/* 0-7  -1 is no orient *\/$/;"	m	class:defiVpin
orient_	def/defiPinCap.hpp	/^  char   orient_;$/;"	m	class:defiPinPort
orient_	def/defiPinCap.hpp	/^  char orient_;          \/\/ orient 0-7$/;"	m	class:defiPin
orient_	def/defiRowTrack.hpp	/^  int orient_;$/;"	m	class:defiRow
orient_	def/defiSite.hpp	/^  int orient_;         \/\/ orientation$/;"	m	class:defiSite
orient_	include/defiComponent.hpp	/^  int orient_;          \/\/ orientation$/;"	m	class:defiComponent
orient_	include/defiNet.hpp	/^  int orient_;  \/* 0-7  -1 is no orient *\/$/;"	m	class:defiVpin
orient_	include/defiPinCap.hpp	/^  char   orient_;$/;"	m	class:defiPinPort
orient_	include/defiPinCap.hpp	/^  char orient_;          \/\/ orient 0-7$/;"	m	class:defiPin
orient_	include/defiRowTrack.hpp	/^  int orient_;$/;"	m	class:defiRow
orient_	include/defiSite.hpp	/^  int orient_;         \/\/ orientation$/;"	m	class:defiSite
orient_is_keyword	def/defrData.hpp	/^    int  orient_is_keyword; $/;"	m	class:defrData
orient_is_keyword	include/defrData.hpp	/^    int  orient_is_keyword; $/;"	m	class:defrData
orient_pt	def/def.y	/^orient_pt: \/\/ empty $/;"	l
origin	def/defiVia.cpp	/^void defiVia::origin(int* xOffset, int* yOffset) const {$/;"	f	class:defiVia
original	def/defiNet.cpp	/^const char* defiNet::original() const {$/;"	f	class:defiNet
original_	def/defiNet.hpp	/^  char* original_;$/;"	m	class:defiNet
original_	include/defiNet.hpp	/^  char* original_;$/;"	m	class:defiNet
otherPts	def/def.y	/^otherPts: \/\/ empty $/;"	l
out	def/defiScanchain.cpp	/^char** defiOrdered::out() const {$/;"	f	class:defiOrdered
out_	def/defiScanchain.hpp	/^  char** out_;$/;"	m	class:defiOrdered
out_	include/defiScanchain.hpp	/^  char** out_;$/;"	m	class:defiOrdered
ownConfig	def/defrData.hpp	/^    int                   ownConfig;$/;"	m	class:defrContext
ownConfig	include/defrData.hpp	/^    int                   ownConfig;$/;"	m	class:defrContext
oxide_	def/defiPinCap.hpp	/^  char* oxide_;$/;"	m	class:defiPinAntennaModel
oxide_	include/defiPinCap.hpp	/^  char* oxide_;$/;"	m	class:defiPinAntennaModel
parallel	def/defiIOTiming.cpp	/^double defiIOTiming::parallel() const {$/;"	f	class:defiIOTiming
parallel_	def/defiIOTiming.hpp	/^  double parallel_;$/;"	m	class:defiIOTiming
parallel_	include/defiIOTiming.hpp	/^  double parallel_;$/;"	m	class:defiIOTiming
partName_	def/defiScanchain.hpp	/^  char* partName_;      \/\/ 5.4.1$/;"	m	class:defiScanchain
partName_	include/defiScanchain.hpp	/^  char* partName_;      \/\/ 5.4.1$/;"	m	class:defiScanchain
partitionMax	def/defiPartition.cpp	/^double defiPartition::partitionMax() const {$/;"	f	class:defiPartition
partitionMaxBits	def/defiScanchain.cpp	/^int defiScanchain::partitionMaxBits() const {$/;"	f	class:defiScanchain
partitionMin	def/defiPartition.cpp	/^double defiPartition::partitionMin() const {$/;"	f	class:defiPartition
partitionName	def/defiScanchain.cpp	/^const char* defiScanchain::partitionName() const {$/;"	f	class:defiScanchain
partition_maxbits	def/def.y	/^partition_maxbits: \/\/ empty $/;"	l
partition_member	def/def.y	/^partition_member: '+' K_FROMCLOCKPIN {defData->dumb_mode=2; defData->no_num = 2;}$/;"	l
partition_members	def/def.y	/^partition_members: \/\/ empty $/;"	l
partition_rule	def/def.y	/^partition_rule: start_partition partition_members ';' $/;"	l
partition_rules	def/def.y	/^partition_rules: \/\/ empty $/;"	l
partitions_end	def/def.y	/^partitions_end: K_END K_PARTITIONS$/;"	l
partitions_section	def/def.y	/^partitions_section: partitions_start partition_rules partitions_end$/;"	l
partitions_start	def/def.y	/^partitions_start: K_PARTITIONS NUMBER ';'$/;"	l
path	def/def.y	/^path:  T_STRING$/;"	l
path	def/defiAssertion.cpp	/^void defiAssertion::path(int index, char** fromInst, char** fromPin,$/;"	f	class:defiAssertion
path	def/defiNet.cpp	/^const defiPath* defiNet::path(int index) const {$/;"	f	class:defiNet
path	def/defiNet.cpp	/^const defiPath* defiShield::path(int index) const {$/;"	f	class:defiShield
path	def/defiNet.cpp	/^const defiPath* defiSubnet::path(int index) const {$/;"	f	class:defiSubnet
path	def/defiNet.cpp	/^const defiPath* defiWire::path(int index) const {$/;"	f	class:defiWire
path	def/defiNet.cpp	/^defiPath* defiNet::path(int index) {$/;"	f	class:defiNet
path	def/defiNet.cpp	/^defiPath* defiShield::path(int index) {$/;"	f	class:defiShield
path	def/defiNet.cpp	/^defiPath* defiSubnet::path(int index) {$/;"	f	class:defiSubnet
path	def/defiNet.cpp	/^defiPath* defiWire::path(int index) {$/;"	f	class:defiWire
pathIsDone	def/def_keywords.cpp	/^defrData::pathIsDone(int  shield, int  reset, int  netOsnet, int  *needCbk)$/;"	f	class:defrData
path_item	def/def.y	/^path_item:$/;"	l
path_item_list	def/def.y	/^path_item_list: \/\/ empty $/;"	l
path_pt	def/def.y	/^path_pt :$/;"	l
paths	def/def.y	/^paths:$/;"	l
pathsAllocated_	def/defiNet.hpp	/^  int        pathsAllocated_;$/;"	m	class:defiShield
pathsAllocated_	def/defiNet.hpp	/^  int        pathsAllocated_;$/;"	m	class:defiWire
pathsAllocated_	def/defiNet.hpp	/^  int pathsAllocated_; \/\/ allocated size of paths array$/;"	m	class:defiNet
pathsAllocated_	def/defiNet.hpp	/^  int pathsAllocated_; \/\/ allocated size of paths array$/;"	m	class:defiSubnet
pathsAllocated_	include/defiNet.hpp	/^  int        pathsAllocated_;$/;"	m	class:defiShield
pathsAllocated_	include/defiNet.hpp	/^  int        pathsAllocated_;$/;"	m	class:defiWire
pathsAllocated_	include/defiNet.hpp	/^  int pathsAllocated_; \/\/ allocated size of paths array$/;"	m	class:defiNet
pathsAllocated_	include/defiNet.hpp	/^  int pathsAllocated_; \/\/ allocated size of paths array$/;"	m	class:defiSubnet
paths_	def/defiNet.hpp	/^  defiPath** paths_;   \/\/ paths for this subnet$/;"	m	class:defiNet
paths_	def/defiNet.hpp	/^  defiPath** paths_;   \/\/ paths for this subnet$/;"	m	class:defiSubnet
paths_	def/defiNet.hpp	/^  defiPath** paths_;$/;"	m	class:defiShield
paths_	def/defiNet.hpp	/^  defiPath** paths_;$/;"	m	class:defiWire
paths_	include/defiNet.hpp	/^  defiPath** paths_;   \/\/ paths for this subnet$/;"	m	class:defiNet
paths_	include/defiNet.hpp	/^  defiPath** paths_;   \/\/ paths for this subnet$/;"	m	class:defiSubnet
paths_	include/defiNet.hpp	/^  defiPath** paths_;$/;"	m	class:defiShield
paths_	include/defiNet.hpp	/^  defiPath** paths_;$/;"	m	class:defiWire
pattern	def/defiNet.cpp	/^const char* defiNet::pattern() const {$/;"	f	class:defiNet
pattern	def/defiVia.cpp	/^const char* defiVia::pattern() const {$/;"	f	class:defiVia
patternLength_	def/defiVia.hpp	/^  int patternLength_;$/;"	m	class:defiVia
patternLength_	include/defiVia.hpp	/^  int patternLength_;$/;"	m	class:defiVia
pattern_	def/defiNet.hpp	/^  char* pattern_;$/;"	m	class:defiNet
pattern_	def/defiVia.hpp	/^  char* pattern_;$/;"	m	class:defiVia
pattern_	include/defiNet.hpp	/^  char* pattern_;$/;"	m	class:defiNet
pattern_	include/defiVia.hpp	/^  char* pattern_;$/;"	m	class:defiVia
pattern_type	def/def.y	/^pattern_type: K_BALANCED$/;"	l
perim	def/defiGroup.cpp	/^int defiGroup::perim() const {$/;"	f	class:defiGroup
perim_	def/defiGroup.hpp	/^  int perim_;$/;"	m	class:defiGroup
perim_	include/defiGroup.hpp	/^  int perim_;$/;"	m	class:defiGroup
pin	def/def.y	/^pin: '-' {defData->dumb_mode = 1; defData->no_num = 1; } T_STRING '+' K_NET$/;"	l
pin	def/defiIOTiming.cpp	/^const char* defiIOTiming::pin() const {$/;"	f	class:defiIOTiming
pin	def/defiNet.cpp	/^const char* defiNet::pin(int index) const {$/;"	f	class:defiNet
pin	def/defiNet.cpp	/^const char* defiSubnet::pin(int index) const {$/;"	f	class:defiSubnet
pin	def/defiPartition.cpp	/^const char* defiPartition::pin(int index) const {$/;"	f	class:defiPartition
pin	def/defiPinCap.cpp	/^int defiPinCap::pin() const {$/;"	f	class:defiPinCap
pinCB	defwrite/defwriteCbs.cpp	/^int pinCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
pinExtWarnings	def/defrData.hpp	/^    int  pinExtWarnings; $/;"	m	class:defrData
pinExtWarnings	include/defrData.hpp	/^    int  pinExtWarnings; $/;"	m	class:defrData
pinIsMustJoin	def/defiNet.cpp	/^int defiNet::pinIsMustJoin(int index) const {$/;"	f	class:defiNet
pinIsMustJoin	def/defiNet.cpp	/^int defiSubnet::pinIsMustJoin(int index) const {$/;"	f	class:defiSubnet
pinIsSynthesized	def/defiNet.cpp	/^int defiNet::pinIsSynthesized(int index) const {$/;"	f	class:defiNet
pinIsSynthesized	def/defiNet.cpp	/^int defiSubnet::pinIsSynthesized(int index) const {$/;"	f	class:defiSubnet
pinLength_	def/defiIOTiming.hpp	/^  int pinLength_;$/;"	m	class:defiIOTiming
pinLength_	def/defiPartition.hpp	/^  int pinLength_;$/;"	m	class:defiPartition
pinLength_	include/defiIOTiming.hpp	/^  int pinLength_;$/;"	m	class:defiIOTiming
pinLength_	include/defiPartition.hpp	/^  int pinLength_;$/;"	m	class:defiPartition
pinName	def/defiPartition.cpp	/^const char* defiPartition::pinName() const {$/;"	f	class:defiPartition
pinName	def/defiPinCap.cpp	/^const char* defiPin::pinName() const {$/;"	f	class:defiPin
pinName	def/defiPinProp.cpp	/^const char* defiPinProp::pinName() const {$/;"	f	class:defiPinProp
pinNameLength_	def/defiPinCap.hpp	/^  int pinNameLength_;    \/\/ allocated size of pin name$/;"	m	class:defiPin
pinNameLength_	include/defiPinCap.hpp	/^  int pinNameLength_;    \/\/ allocated size of pin name$/;"	m	class:defiPin
pinNameSize_	def/defiPinProp.hpp	/^  int pinNameSize_;$/;"	m	class:defiPinProp
pinNameSize_	include/defiPinProp.hpp	/^  int pinNameSize_;$/;"	m	class:defiPinProp
pinName_	def/defiPinCap.hpp	/^  char* pinName_;$/;"	m	class:defiPin
pinName_	def/defiPinProp.hpp	/^  char* pinName_;$/;"	m	class:defiPinProp
pinName_	include/defiPinCap.hpp	/^  char* pinName_;$/;"	m	class:defiPin
pinName_	include/defiPinProp.hpp	/^  char* pinName_;$/;"	m	class:defiPinProp
pinPort	def/defiPinCap.cpp	/^defiPinPort* defiPin::pinPort(int index) const {$/;"	f	class:defiPin
pinPort_	def/defiPinCap.hpp	/^  defiPinPort ** pinPort_;          \/\/ 5.7$/;"	m	class:defiPin
pinPort_	include/defiPinCap.hpp	/^  defiPinPort ** pinPort_;          \/\/ 5.7$/;"	m	class:defiPin
pinWarnings	def/defrData.hpp	/^    int  pinWarnings; $/;"	m	class:defrData
pinWarnings	include/defrData.hpp	/^    int  pinWarnings; $/;"	m	class:defrData
pin_	def/defiIOTiming.hpp	/^  char* pin_;$/;"	m	class:defiIOTiming
pin_	def/defiPartition.hpp	/^  char* pin_;$/;"	m	class:defiPartition
pin_	def/defiPinCap.hpp	/^  int pin_;        \/\/ pin num$/;"	m	class:defiPinCap
pin_	include/defiIOTiming.hpp	/^  char* pin_;$/;"	m	class:defiIOTiming
pin_	include/defiPartition.hpp	/^  char* pin_;$/;"	m	class:defiPartition
pin_	include/defiPinCap.hpp	/^  int pin_;        \/\/ pin num$/;"	m	class:defiPinCap
pin_cap	def/def.y	/^pin_cap: K_MINPINS NUMBER K_WIRECAP NUMBER ';'$/;"	l
pin_cap_rule	def/def.y	/^pin_cap_rule: start_def_cap pin_caps end_def_cap$/;"	l
pin_caps	def/def.y	/^pin_caps: \/\/ empty $/;"	l
pin_layer_mask_opt	def/def.y	/^pin_layer_mask_opt: \/\/ empty $/;"	l
pin_layer_opt	def/def.y	/^pin_layer_opt:$/;"	l
pin_layer_spacing_opt	def/def.y	/^pin_layer_spacing_opt: \/\/ empty $/;"	l
pin_list	def/def.y	/^pin_list: \/\/ empty $/;"	l
pin_option	def/def.y	/^pin_option: '+' K_SPECIAL$/;"	l
pin_options	def/def.y	/^pin_options: \/\/ empty $/;"	l
pin_oxide	def/def.y	/^pin_oxide: K_OXIDE1$/;"	l
pin_poly_mask_opt	def/def.y	/^pin_poly_mask_opt: \/\/ empty $/;"	l
pin_poly_spacing_opt	def/def.y	/^pin_poly_spacing_opt: \/\/ empty $/;"	l
pin_prop	def/def.y	/^pin_prop: '+' K_PROPERTY { defData->dumb_mode = DEF_MAX_INT; }$/;"	l
pin_prop_list	def/def.y	/^pin_prop_list: \/\/ empty $/;"	l
pin_prop_name_value	def/def.y	/^pin_prop_name_value : T_STRING NUMBER$/;"	l
pin_prop_name_value_list	def/def.y	/^pin_prop_name_value_list : \/\/ empty $/;"	l
pin_prop_options	def/def.y	/^pin_prop_options : \/\/ empty $/;"	l
pin_prop_terminal	def/def.y	/^pin_prop_terminal: '-' { defData->dumb_mode = 2; defData->no_num = 2; } T_STRING T_STRING$/;"	l
pin_props_section	def/def.y	/^pin_props_section: begin_pin_props pin_prop_list end_pin_props ;$/;"	l
pin_rule	def/def.y	/^pin_rule: start_pins pins end_pins$/;"	l
pin_via_mask_opt	def/def.y	/^pin_via_mask_opt: $/;"	l
pinpropCB	defwrite/defwriteCbs.cpp	/^int pinpropCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
pins	def/def.y	/^pins: \/\/ empty $/;"	l
pinsAllocated_	def/defiNet.hpp	/^  int pinsAllocated_;     \/\/ number of pins allocated in array.$/;"	m	class:defiSubnet
pinsAllocated_	def/defiNet.hpp	/^  int pinsAllocated_;   \/\/ number of pins allocated in array.$/;"	m	class:defiNet
pinsAllocated_	def/defiPartition.hpp	/^  int pinsAllocated_;$/;"	m	class:defiPartition
pinsAllocated_	include/defiNet.hpp	/^  int pinsAllocated_;     \/\/ number of pins allocated in array.$/;"	m	class:defiSubnet
pinsAllocated_	include/defiNet.hpp	/^  int pinsAllocated_;   \/\/ number of pins allocated in array.$/;"	m	class:defiNet
pinsAllocated_	include/defiPartition.hpp	/^  int pinsAllocated_;$/;"	m	class:defiPartition
pins_	def/defiNet.hpp	/^  char** pins_;           \/\/ pin names for connections$/;"	m	class:defiSubnet
pins_	def/defiNet.hpp	/^  char** pins_;         \/\/ pin names for connections$/;"	m	class:defiNet
pins_	def/defiPartition.hpp	/^  char** pins_;$/;"	m	class:defiPartition
pins_	include/defiNet.hpp	/^  char** pins_;           \/\/ pin names for connections$/;"	m	class:defiSubnet
pins_	include/defiNet.hpp	/^  char** pins_;         \/\/ pin names for connections$/;"	m	class:defiNet
pins_	include/defiPartition.hpp	/^  char** pins_;$/;"	m	class:defiPartition
placeType_	def/defiPinCap.hpp	/^  char   placeType_;$/;"	m	class:defiPinPort
placeType_	def/defiPinCap.hpp	/^  char placeType_;$/;"	m	class:defiPin
placeType_	include/defiPinCap.hpp	/^  char   placeType_;$/;"	m	class:defiPinPort
placeType_	include/defiPinCap.hpp	/^  char placeType_;$/;"	m	class:defiPin
placementComponentName	def/defiBlockage.cpp	/^const char* defiBlockage::placementComponentName() const {$/;"	f	class:defiBlockage
placementMaxDensity	def/defiBlockage.cpp	/^double defiBlockage::placementMaxDensity() const {$/;"	f	class:defiBlockage
placementOrient	def/defiComponent.cpp	/^int defiComponent::placementOrient() const {$/;"	f	class:defiComponent
placementOrientStr	def/defiComponent.cpp	/^const char* defiComponent::placementOrientStr() const {$/;"	f	class:defiComponent
placementStatus	def/defiComponent.cpp	/^int defiComponent::placementStatus() const {$/;"	f	class:defiComponent
placementX	def/defiComponent.cpp	/^int defiComponent::placementX() const {$/;"	f	class:defiComponent
placementX	def/defiPinCap.cpp	/^int defiPin::placementX() const {$/;"	f	class:defiPin
placementX	def/defiPinCap.cpp	/^int defiPinPort::placementX() const {$/;"	f	class:defiPinPort
placementY	def/defiComponent.cpp	/^int defiComponent::placementY() const {$/;"	f	class:defiComponent
placementY	def/defiPinCap.cpp	/^int defiPin::placementY() const {$/;"	f	class:defiPin
placementY	def/defiPinCap.cpp	/^int defiPinPort::placementY() const {$/;"	f	class:defiPinPort
placement_comp_rule	def/def.y	/^placement_comp_rule: \/\/ empty $/;"	l
placement_comp_rules	def/def.y	/^placement_comp_rules: \/\/ empty $/;"	l
placement_status	def/def.y	/^placement_status: '+' K_FIXED $/;"	l
pointer_	def/defiPath.hpp	/^  int* pointer_;        \/\/ traversal pointer, allocated because used$/;"	m	class:defiPath
pointer_	include/defiPath.hpp	/^  int* pointer_;        \/\/ traversal pointer, allocated because used$/;"	m	class:defiPath
points	def/defiMisc.cpp	/^void defiGeometries::points(int index, int* x, int* y) const {$/;"	f	class:defiGeometries
pointsAllocated_	def/defiMisc.hpp	/^  int pointsAllocated_;$/;"	m	class:defiGeometries
pointsAllocated_	include/defiMisc.hpp	/^  int pointsAllocated_;$/;"	m	class:defiGeometries
points_	def/defiSite.hpp	/^  defiPoints* points_;    \/\/ 5.6$/;"	m	class:defiBox
points_	include/defiSite.hpp	/^  defiPoints* points_;    \/\/ 5.6$/;"	m	class:defiBox
polyEffectiveWidth_	def/defiPinCap.hpp	/^  int    *polyEffectiveWidth_;$/;"	m	class:defiPinPort
polyEffectiveWidth_	def/defiPinCap.hpp	/^  int *polyEffectiveWidth_;         \/\/ 5.6, DESIGNRULEWIDTH in POLYGON$/;"	m	class:defiPin
polyEffectiveWidth_	include/defiPinCap.hpp	/^  int    *polyEffectiveWidth_;$/;"	m	class:defiPinPort
polyEffectiveWidth_	include/defiPinCap.hpp	/^  int *polyEffectiveWidth_;         \/\/ 5.6, DESIGNRULEWIDTH in POLYGON$/;"	m	class:defiPin
polyMask	def/defiNet.cpp	/^int defiNet::polyMask(int index) const {$/;"	f	class:defiNet
polyMask	def/defiVia.cpp	/^int defiVia::polyMask(int index) const {$/;"	f	class:defiVia
polyMask_	def/defiPinCap.hpp	/^  int    *polyMask_;$/;"	m	class:defiPinPort
polyMask_	def/defiPinCap.hpp	/^  int *polyMask_;                   \/\/ 5.8$/;"	m	class:defiPin
polyMask_	def/defiVia.hpp	/^  int*  polyMask_;          \/\/ 5.8$/;"	m	class:defiVia
polyMask_	include/defiPinCap.hpp	/^  int    *polyMask_;$/;"	m	class:defiPinPort
polyMask_	include/defiPinCap.hpp	/^  int *polyMask_;                   \/\/ 5.8$/;"	m	class:defiPin
polyMask_	include/defiVia.hpp	/^  int*  polyMask_;          \/\/ 5.8$/;"	m	class:defiVia
polyMasks_	def/defiNet.hpp	/^  int*   polyMasks_;$/;"	m	class:defiNet
polyMasks_	include/defiNet.hpp	/^  int*   polyMasks_;$/;"	m	class:defiNet
polyMinSpacing_	def/defiPinCap.hpp	/^  int    *polyMinSpacing_;$/;"	m	class:defiPinPort
polyMinSpacing_	def/defiPinCap.hpp	/^  int *polyMinSpacing_;             \/\/ 5.6, SPACING in POLYGON$/;"	m	class:defiPin
polyMinSpacing_	include/defiPinCap.hpp	/^  int    *polyMinSpacing_;$/;"	m	class:defiPinPort
polyMinSpacing_	include/defiPinCap.hpp	/^  int *polyMinSpacing_;             \/\/ 5.6, SPACING in POLYGON$/;"	m	class:defiPin
polyRouteStatus	def/defiNet.cpp	/^const char* defiNet::polyRouteStatus(int index) const {$/;"	f	class:defiNet
polyRouteStatusShieldName	def/defiNet.cpp	/^const char* defiNet::polyRouteStatusShieldName(int index) const {$/;"	f	class:defiNet
polyRouteStatusShieldNames_	def/defiNet.hpp	/^  char** polyRouteStatusShieldNames_;$/;"	m	class:defiNet
polyRouteStatusShieldNames_	include/defiNet.hpp	/^  char** polyRouteStatusShieldNames_;$/;"	m	class:defiNet
polyRouteStatus_	def/defiNet.hpp	/^  char** polyRouteStatus_;$/;"	m	class:defiNet
polyRouteStatus_	include/defiNet.hpp	/^  char** polyRouteStatus_;$/;"	m	class:defiNet
polyShapeType	def/defiNet.cpp	/^const char* defiNet::polyShapeType(int index) const {$/;"	f	class:defiNet
polyShapeTypes_	def/defiNet.hpp	/^  char** polyShapeTypes_;$/;"	m	class:defiNet
polyShapeTypes_	include/defiNet.hpp	/^  char** polyShapeTypes_;$/;"	m	class:defiNet
polygonDesignRuleWidth	def/defiPinCap.cpp	/^int defiPin::polygonDesignRuleWidth(int index) const {$/;"	f	class:defiPin
polygonDesignRuleWidth	def/defiPinCap.cpp	/^int defiPinPort::polygonDesignRuleWidth(int index) const {$/;"	f	class:defiPinPort
polygonMask	def/defiPinCap.cpp	/^int defiPin::polygonMask(int index) const {$/;"	f	class:defiPin
polygonMask	def/defiPinCap.cpp	/^int defiPinPort::polygonMask(int index) const {$/;"	f	class:defiPinPort
polygonName	def/defiNet.cpp	/^const char* defiNet::polygonName(int index) const {$/;"	f	class:defiNet
polygonName	def/defiPinCap.cpp	/^const char* defiPin::polygonName(int index) const {$/;"	f	class:defiPin
polygonName	def/defiPinCap.cpp	/^const char* defiPinPort::polygonName(int index) const {$/;"	f	class:defiPinPort
polygonName	def/defiVia.cpp	/^const char* defiVia::polygonName(int index) const {$/;"	f	class:defiVia
polygonNames_	def/defiNet.hpp	/^  char** polygonNames_;             \/\/ 5.6 layerName for POLYGON$/;"	m	class:defiNet
polygonNames_	def/defiPinCap.hpp	/^  char** polygonNames_;             \/\/ 5.6 layerName for POLYGON$/;"	m	class:defiPin
polygonNames_	def/defiPinCap.hpp	/^  char** polygonNames_;$/;"	m	class:defiPinPort
polygonNames_	def/defiVia.hpp	/^  char** polygonNames_;     \/\/ 5.6 layerName for POLYGON$/;"	m	class:defiVia
polygonNames_	include/defiNet.hpp	/^  char** polygonNames_;             \/\/ 5.6 layerName for POLYGON$/;"	m	class:defiNet
polygonNames_	include/defiPinCap.hpp	/^  char** polygonNames_;             \/\/ 5.6 layerName for POLYGON$/;"	m	class:defiPin
polygonNames_	include/defiPinCap.hpp	/^  char** polygonNames_;$/;"	m	class:defiPinPort
polygonNames_	include/defiVia.hpp	/^  char** polygonNames_;     \/\/ 5.6 layerName for POLYGON$/;"	m	class:defiVia
polygonSpacing	def/defiPinCap.cpp	/^int defiPin::polygonSpacing(int index) const {$/;"	f	class:defiPin
polygonSpacing	def/defiPinCap.cpp	/^int defiPinPort::polygonSpacing(int index) const {$/;"	f	class:defiPinPort
polygon_	def/defiMisc.hpp	/^    struct defiPoints* polygon_;$/;"	m	class:defiStyles	typeref:struct:defiStyles::defiPoints
polygon_	include/defiMisc.hpp	/^    struct defiPoints* polygon_;$/;"	m	class:defiStyles	typeref:struct:defiStyles::defiPoints
polygons_	def/defiBlockage.hpp	/^  struct defiPoints** polygons_;         \/\/ 5.6$/;"	m	class:defiBlockage	typeref:struct:defiBlockage::defiPoints
polygons_	def/defiFill.hpp	/^  struct defiPoints** polygons_;    \/\/ 5.6$/;"	m	class:defiFill	typeref:struct:defiFill::defiPoints
polygons_	def/defiNet.hpp	/^  struct defiPoints** polygons_;    \/\/ 5.6$/;"	m	class:defiNet	typeref:struct:defiNet::defiPoints
polygons_	def/defiPinCap.hpp	/^  defiPoints** polygons_;    \/\/ 5.6 $/;"	m	class:defiPin
polygons_	def/defiPinCap.hpp	/^  defiPoints** polygons_;$/;"	m	class:defiPinPort
polygons_	def/defiSlot.hpp	/^  defiPoints** polygons_;    \/\/ 5.6$/;"	m	class:defiSlot
polygons_	def/defiVia.hpp	/^  defiPoints** polygons_; \/\/ 5.6$/;"	m	class:defiVia
polygons_	include/defiBlockage.hpp	/^  struct defiPoints** polygons_;         \/\/ 5.6$/;"	m	class:defiBlockage	typeref:struct:defiBlockage::defiPoints
polygons_	include/defiFill.hpp	/^  struct defiPoints** polygons_;    \/\/ 5.6$/;"	m	class:defiFill	typeref:struct:defiFill::defiPoints
polygons_	include/defiNet.hpp	/^  struct defiPoints** polygons_;    \/\/ 5.6$/;"	m	class:defiNet	typeref:struct:defiNet::defiPoints
polygons_	include/defiPinCap.hpp	/^  defiPoints** polygons_;    \/\/ 5.6 $/;"	m	class:defiPin
polygons_	include/defiPinCap.hpp	/^  defiPoints** polygons_;$/;"	m	class:defiPinPort
polygons_	include/defiSlot.hpp	/^  defiPoints** polygons_;    \/\/ 5.6$/;"	m	class:defiSlot
polygons_	include/defiVia.hpp	/^  defiPoints** polygons_; \/\/ 5.6$/;"	m	class:defiVia
polysAllocated_	def/defiBlockage.hpp	/^  int    polysAllocated_;                \/\/ 5.6$/;"	m	class:defiBlockage
polysAllocated_	def/defiFill.hpp	/^  int   polysAllocated_;            \/\/ 5.6$/;"	m	class:defiFill
polysAllocated_	def/defiNet.hpp	/^  int polysAllocated_;              \/\/ 5.6$/;"	m	class:defiNet
polysAllocated_	def/defiPinCap.hpp	/^  int    polysAllocated_;$/;"	m	class:defiPinPort
polysAllocated_	def/defiPinCap.hpp	/^  int polysAllocated_;              \/\/ 5.6$/;"	m	class:defiPin
polysAllocated_	def/defiSlot.hpp	/^  int   polysAllocated_;            \/\/ 5.6$/;"	m	class:defiSlot
polysAllocated_	def/defiVia.hpp	/^  int polysAllocated_;      \/\/ 5.6$/;"	m	class:defiVia
polysAllocated_	include/defiBlockage.hpp	/^  int    polysAllocated_;                \/\/ 5.6$/;"	m	class:defiBlockage
polysAllocated_	include/defiFill.hpp	/^  int   polysAllocated_;            \/\/ 5.6$/;"	m	class:defiFill
polysAllocated_	include/defiNet.hpp	/^  int polysAllocated_;              \/\/ 5.6$/;"	m	class:defiNet
polysAllocated_	include/defiPinCap.hpp	/^  int    polysAllocated_;$/;"	m	class:defiPinPort
polysAllocated_	include/defiPinCap.hpp	/^  int polysAllocated_;              \/\/ 5.6$/;"	m	class:defiPin
polysAllocated_	include/defiSlot.hpp	/^  int   polysAllocated_;            \/\/ 5.6$/;"	m	class:defiSlot
polysAllocated_	include/defiVia.hpp	/^  int polysAllocated_;      \/\/ 5.6$/;"	m	class:defiVia
portsAllocated_	def/defiPinCap.hpp	/^  int portsAllocated_;              \/\/ 5.7$/;"	m	class:defiPin
portsAllocated_	include/defiPinCap.hpp	/^  int portsAllocated_;              \/\/ 5.7$/;"	m	class:defiPin
prev	def/defiPath.cpp	/^int defiPath::prev()  const{$/;"	f	class:defiPath
print	def/defiAssertion.cpp	/^void defiAssertion::print(FILE* f) const {$/;"	f	class:defiAssertion
print	def/defiBlockage.cpp	/^void defiBlockage::print(FILE* f) const {$/;"	f	class:defiBlockage
print	def/defiComponent.cpp	/^void defiComponent::print(FILE* fout) const {$/;"	f	class:defiComponent
print	def/defiFPC.cpp	/^void defiFPC::print(FILE* f) const {$/;"	f	class:defiFPC
print	def/defiFill.cpp	/^void defiFill::print(FILE* f) const {$/;"	f	class:defiFill
print	def/defiGroup.cpp	/^void defiGroup::print(FILE* f) const {$/;"	f	class:defiGroup
print	def/defiIOTiming.cpp	/^void defiIOTiming::print(FILE* f) const {$/;"	f	class:defiIOTiming
print	def/defiNet.cpp	/^void defiNet::print(FILE* f) const {$/;"	f	class:defiNet
print	def/defiNet.cpp	/^void defiSubnet::print(FILE* f) const {$/;"	f	class:defiSubnet
print	def/defiNonDefault.cpp	/^void defiNonDefault::print(FILE* f) const { $/;"	f	class:defiNonDefault
print	def/defiPartition.cpp	/^void defiPartition::print(FILE* f) const {$/;"	f	class:defiPartition
print	def/defiPath.cpp	/^void defiPath::print(FILE* fout) const {$/;"	f	class:defiPath
print	def/defiPinCap.cpp	/^void defiPin::print(FILE* f) const {$/;"	f	class:defiPin
print	def/defiPinCap.cpp	/^void defiPinCap::print(FILE* f) const {$/;"	f	class:defiPinCap
print	def/defiPinProp.cpp	/^void defiPinProp::print(FILE* f) const {$/;"	f	class:defiPinProp
print	def/defiProp.cpp	/^void defiProp::print(FILE* f) const {$/;"	f	class:defiProp
print	def/defiRegion.cpp	/^void defiRegion::print(FILE* f) const {$/;"	f	class:defiRegion
print	def/defiRowTrack.cpp	/^void defiGcellGrid::print(FILE* f) const {$/;"	f	class:defiGcellGrid
print	def/defiRowTrack.cpp	/^void defiRow::print(FILE* f) const {$/;"	f	class:defiRow
print	def/defiRowTrack.cpp	/^void defiTrack::print(FILE* f) const {$/;"	f	class:defiTrack
print	def/defiScanchain.cpp	/^void defiScanchain::print(FILE* f) const {$/;"	f	class:defiScanchain
print	def/defiSite.cpp	/^void defiBox::print(FILE* f) const {$/;"	f	class:defiBox
print	def/defiSite.cpp	/^void defiSite::print(FILE* f) const {$/;"	f	class:defiSite
print	def/defiSlot.cpp	/^void defiSlot::print(FILE* f) const {$/;"	f	class:defiSlot
print	def/defiTimingDisable.cpp	/^void defiTimingDisable::print(FILE* f) const {$/;"	f	class:defiTimingDisable
print	def/defiVia.cpp	/^void defiVia::print(FILE* f) const {$/;"	f	class:defiVia
printPoints	def/defwWriter.cpp	/^static void printPoints(FILE *file, double x, double y, $/;"	f	file:
printPointsNum	def/defwWriter.cpp	/^static int printPointsNum = 0;$/;"	v	file:
printWarning	defrw/defrw.cpp	/^void printWarning(const char *str)$/;"	f
print_lines	def/def_keywords.cpp	/^defrData::print_lines(long long lines) $/;"	f	class:defrData
prop	defdiff/diffDefRW.cpp	/^int prop(defrCallbackType_e c, defiProp* p, defiUserData ud) {$/;"	f
prop	defrw/defrw.cpp	/^int prop(defrCallbackType_e c, defiProp* p, defiUserData ud) {$/;"	f
propDValues_	def/defiGroup.hpp	/^  double* propDValues_;$/;"	m	class:defiGroup
propDValues_	def/defiNet.hpp	/^  double* propDValues_; \/\/ Prop values in numbers!$/;"	m	class:defiNet
propDValues_	def/defiPinProp.hpp	/^  double* propDValues_;$/;"	m	class:defiPinProp
propDValues_	def/defiRegion.hpp	/^  double* propDValues_;$/;"	m	class:defiRegion
propDValues_	def/defiRowTrack.hpp	/^  double* propDValues_;$/;"	m	class:defiRow
propDValues_	include/defiGroup.hpp	/^  double* propDValues_;$/;"	m	class:defiGroup
propDValues_	include/defiNet.hpp	/^  double* propDValues_; \/\/ Prop values in numbers!$/;"	m	class:defiNet
propDValues_	include/defiPinProp.hpp	/^  double* propDValues_;$/;"	m	class:defiPinProp
propDValues_	include/defiRegion.hpp	/^  double* propDValues_;$/;"	m	class:defiRegion
propDValues_	include/defiRowTrack.hpp	/^  double* propDValues_;$/;"	m	class:defiRow
propIsNumber	def/defiComponent.cpp	/^int defiComponent::propIsNumber(int index) const {$/;"	f	class:defiComponent
propIsNumber	def/defiGroup.cpp	/^int defiGroup::propIsNumber(int index) const {$/;"	f	class:defiGroup
propIsNumber	def/defiNet.cpp	/^int defiNet::propIsNumber(int index) const {$/;"	f	class:defiNet
propIsNumber	def/defiNonDefault.cpp	/^int defiNonDefault::propIsNumber(int index) const {$/;"	f	class:defiNonDefault
propIsNumber	def/defiPinProp.cpp	/^int defiPinProp::propIsNumber(int index) const {$/;"	f	class:defiPinProp
propIsNumber	def/defiRegion.cpp	/^int defiRegion::propIsNumber(int index) const {$/;"	f	class:defiRegion
propIsNumber	def/defiRowTrack.cpp	/^int defiRow::propIsNumber(int index) const {$/;"	f	class:defiRow
propIsString	def/defiComponent.cpp	/^int defiComponent::propIsString(int index) const {$/;"	f	class:defiComponent
propIsString	def/defiGroup.cpp	/^int defiGroup::propIsString(int index) const {$/;"	f	class:defiGroup
propIsString	def/defiNet.cpp	/^int defiNet::propIsString(int index) const {$/;"	f	class:defiNet
propIsString	def/defiNonDefault.cpp	/^int defiNonDefault::propIsString(int index) const {$/;"	f	class:defiNonDefault
propIsString	def/defiPinProp.cpp	/^int defiPinProp::propIsString(int index) const {$/;"	f	class:defiPinProp
propIsString	def/defiRegion.cpp	/^int defiRegion::propIsString(int index) const {$/;"	f	class:defiRegion
propIsString	def/defiRowTrack.cpp	/^int defiRow::propIsString(int index) const {$/;"	f	class:defiRow
propName	def/defiComponent.cpp	/^char* defiComponent::propName(int index) const {$/;"	f	class:defiComponent
propName	def/defiGroup.cpp	/^const char* defiGroup::propName(int index) const {$/;"	f	class:defiGroup
propName	def/defiNet.cpp	/^const char* defiNet::propName(int index) const {$/;"	f	class:defiNet
propName	def/defiNonDefault.cpp	/^const char* defiNonDefault::propName(int index) const {$/;"	f	class:defiNonDefault
propName	def/defiPinProp.cpp	/^const char* defiPinProp::propName(int index) const {$/;"	f	class:defiPinProp
propName	def/defiProp.cpp	/^const char* defiProp::propName() const {$/;"	f	class:defiProp
propName	def/defiRegion.cpp	/^const char* defiRegion::propName(int index) const {$/;"	f	class:defiRegion
propName	def/defiRowTrack.cpp	/^const char* defiRow::propName(int index) const {$/;"	f	class:defiRow
propName_	def/defiProp.hpp	/^  char* propName_;      \/\/ name.$/;"	m	class:defiProp
propName_	include/defiProp.hpp	/^  char* propName_;      \/\/ name.$/;"	m	class:defiProp
propNames_	def/defiGroup.hpp	/^  char**  propNames_;$/;"	m	class:defiGroup
propNames_	def/defiNet.hpp	/^  char**  propNames_;   \/\/ Prop names$/;"	m	class:defiNet
propNames_	def/defiPinProp.hpp	/^  char**  propNames_;$/;"	m	class:defiPinProp
propNames_	def/defiPropType.hpp	/^  char** propNames_;      \/\/ name.$/;"	m	class:defiPropType
propNames_	def/defiRegion.hpp	/^  char**  propNames_;$/;"	m	class:defiRegion
propNames_	def/defiRowTrack.hpp	/^  char**  propNames_;$/;"	m	class:defiRow
propNames_	include/defiGroup.hpp	/^  char**  propNames_;$/;"	m	class:defiGroup
propNames_	include/defiNet.hpp	/^  char**  propNames_;   \/\/ Prop names$/;"	m	class:defiNet
propNames_	include/defiPinProp.hpp	/^  char**  propNames_;$/;"	m	class:defiPinProp
propNames_	include/defiPropType.hpp	/^  char** propNames_;      \/\/ name.$/;"	m	class:defiPropType
propNames_	include/defiRegion.hpp	/^  char**  propNames_;$/;"	m	class:defiRegion
propNames_	include/defiRowTrack.hpp	/^  char**  propNames_;$/;"	m	class:defiRow
propNumber	def/defiComponent.cpp	/^double defiComponent::propNumber(int index) const {$/;"	f	class:defiComponent
propNumber	def/defiGroup.cpp	/^double defiGroup::propNumber(int index) const {$/;"	f	class:defiGroup
propNumber	def/defiNet.cpp	/^double defiNet::propNumber(int index) const {$/;"	f	class:defiNet
propNumber	def/defiNonDefault.cpp	/^double defiNonDefault::propNumber(int index) const {$/;"	f	class:defiNonDefault
propNumber	def/defiPinProp.cpp	/^double defiPinProp::propNumber(int index) const {$/;"	f	class:defiPinProp
propNumber	def/defiRegion.cpp	/^double defiRegion::propNumber(int index) const {$/;"	f	class:defiRegion
propNumber	def/defiRowTrack.cpp	/^double defiRow::propNumber(int index) const {$/;"	f	class:defiRow
propType	def/defiComponent.cpp	/^char defiComponent::propType(int index) const {$/;"	f	class:defiComponent
propType	def/defiGroup.cpp	/^const char defiGroup::propType(int index) const {$/;"	f	class:defiGroup
propType	def/defiNet.cpp	/^const char defiNet::propType(int index) const {$/;"	f	class:defiNet
propType	def/defiNonDefault.cpp	/^const char defiNonDefault::propType(int index) const {$/;"	f	class:defiNonDefault
propType	def/defiPinProp.cpp	/^const char defiPinProp::propType(int index) const {$/;"	f	class:defiPinProp
propType	def/defiProp.cpp	/^const char* defiProp::propType() const {$/;"	f	class:defiProp
propType	def/defiPropType.cpp	/^const char defiPropType::propType(char* name) const {$/;"	f	class:defiPropType
propType	def/defiRegion.cpp	/^const char defiRegion::propType(int index) const {$/;"	f	class:defiRegion
propType	def/defiRowTrack.cpp	/^const char defiRow::propType(int index) const {$/;"	f	class:defiRow
propType_	def/defiProp.hpp	/^  char* propType_;      \/\/ "design" ...$/;"	m	class:defiProp
propType_	include/defiProp.hpp	/^  char* propType_;      \/\/ "design" ...$/;"	m	class:defiProp
propTypes_	def/defiGroup.hpp	/^  char*   propTypes_;$/;"	m	class:defiGroup
propTypes_	def/defiNet.hpp	/^  char*   propTypes_;   \/\/ Prop types, 'I' - Integer, 'R' - Real, 'S' - String$/;"	m	class:defiNet
propTypes_	def/defiPinProp.hpp	/^  char*   propTypes_;$/;"	m	class:defiPinProp
propTypes_	def/defiPropType.hpp	/^  char*  propTypes_;      \/\/ 'R' == "REAL", 'I' == "INTEGER"$/;"	m	class:defiPropType
propTypes_	def/defiRegion.hpp	/^  char*   propTypes_;$/;"	m	class:defiRegion
propTypes_	def/defiRowTrack.hpp	/^  char*   propTypes_;$/;"	m	class:defiRow
propTypes_	include/defiGroup.hpp	/^  char*   propTypes_;$/;"	m	class:defiGroup
propTypes_	include/defiNet.hpp	/^  char*   propTypes_;   \/\/ Prop types, 'I' - Integer, 'R' - Real, 'S' - String$/;"	m	class:defiNet
propTypes_	include/defiPinProp.hpp	/^  char*   propTypes_;$/;"	m	class:defiPinProp
propTypes_	include/defiPropType.hpp	/^  char*  propTypes_;      \/\/ 'R' == "REAL", 'I' == "INTEGER"$/;"	m	class:defiPropType
propTypes_	include/defiRegion.hpp	/^  char*   propTypes_;$/;"	m	class:defiRegion
propTypes_	include/defiRowTrack.hpp	/^  char*   propTypes_;$/;"	m	class:defiRow
propValue	def/defiComponent.cpp	/^char* defiComponent::propValue(int index) const {$/;"	f	class:defiComponent
propValue	def/defiGroup.cpp	/^const char* defiGroup::propValue(int index) const {$/;"	f	class:defiGroup
propValue	def/defiNet.cpp	/^const char* defiNet::propValue(int index) const {$/;"	f	class:defiNet
propValue	def/defiNonDefault.cpp	/^const char* defiNonDefault::propValue(int index) const {$/;"	f	class:defiNonDefault
propValue	def/defiPinProp.cpp	/^const char* defiPinProp::propValue(int index) const {$/;"	f	class:defiPinProp
propValue	def/defiRegion.cpp	/^const char* defiRegion::propValue(int index) const {$/;"	f	class:defiRegion
propValue	def/defiRowTrack.cpp	/^const char* defiRow::propValue(int index) const {$/;"	f	class:defiRow
propValues_	def/defiGroup.hpp	/^  char**  propValues_;$/;"	m	class:defiGroup
propValues_	def/defiNet.hpp	/^  char**  propValues_;  \/\/ Prop values All in strings!$/;"	m	class:defiNet
propValues_	def/defiPinProp.hpp	/^  char**  propValues_;$/;"	m	class:defiPinProp
propValues_	def/defiRegion.hpp	/^  char**  propValues_;$/;"	m	class:defiRegion
propValues_	def/defiRowTrack.hpp	/^  char**  propValues_;$/;"	m	class:defiRow
propValues_	include/defiGroup.hpp	/^  char**  propValues_;$/;"	m	class:defiGroup
propValues_	include/defiNet.hpp	/^  char**  propValues_;  \/\/ Prop values All in strings!$/;"	m	class:defiNet
propValues_	include/defiPinProp.hpp	/^  char**  propValues_;$/;"	m	class:defiPinProp
propValues_	include/defiRegion.hpp	/^  char**  propValues_;$/;"	m	class:defiRegion
propValues_	include/defiRowTrack.hpp	/^  char**  propValues_;$/;"	m	class:defiRow
prop_def_section	def/def.y	/^prop_def_section: K_PROPERTYDEFINITIONS$/;"	l
propdefCB	defwrite/defwriteCbs.cpp	/^int propdefCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
propend	defrw/defrw.cpp	/^int propend(defrCallbackType_e c, void*, defiUserData) {$/;"	f
propertiesAllocated_	def/defiPropType.hpp	/^  int    propertiesAllocated_;$/;"	m	class:defiPropType
propertiesAllocated_	include/defiPropType.hpp	/^  int    propertiesAllocated_;$/;"	m	class:defiPropType
property_def	def/def.y	/^property_def: K_DESIGN {defData->dumb_mode = 1; defData->no_num = 1; defData->Prop.clear(); }$/;"	l
property_defs	def/def.y	/^property_defs: \/\/ empty $/;"	l
property_type_and_val	def/def.y	/^property_type_and_val: K_INTEGER { defData->real_num = 0; } opt_range opt_num_val$/;"	l
propsAllocated_	def/defiComponent.hpp	/^  int propsAllocated_;$/;"	m	class:defiComponent
propsAllocated_	def/defiGroup.hpp	/^  int propsAllocated_;$/;"	m	class:defiGroup
propsAllocated_	def/defiNet.hpp	/^  int propsAllocated_;  \/\/ allocated size of props array$/;"	m	class:defiNet
propsAllocated_	def/defiNonDefault.hpp	/^  int     propsAllocated_;$/;"	m	class:defiNonDefault
propsAllocated_	def/defiPinProp.hpp	/^  int propsAllocated_;$/;"	m	class:defiPinProp
propsAllocated_	def/defiRegion.hpp	/^  int propsAllocated_;$/;"	m	class:defiRegion
propsAllocated_	def/defiRowTrack.hpp	/^  int propsAllocated_;$/;"	m	class:defiRow
propsAllocated_	include/defiComponent.hpp	/^  int propsAllocated_;$/;"	m	class:defiComponent
propsAllocated_	include/defiGroup.hpp	/^  int propsAllocated_;$/;"	m	class:defiGroup
propsAllocated_	include/defiNet.hpp	/^  int propsAllocated_;  \/\/ allocated size of props array$/;"	m	class:defiNet
propsAllocated_	include/defiNonDefault.hpp	/^  int     propsAllocated_;$/;"	m	class:defiNonDefault
propsAllocated_	include/defiPinProp.hpp	/^  int propsAllocated_;$/;"	m	class:defiPinProp
propsAllocated_	include/defiRegion.hpp	/^  int propsAllocated_;$/;"	m	class:defiRegion
propsAllocated_	include/defiRowTrack.hpp	/^  int propsAllocated_;$/;"	m	class:defiRow
propstart	defrw/defrw.cpp	/^int propstart(defrCallbackType_e c, void*, defiUserData) {$/;"	f
pt	def/def.y	/^pt: '(' NUMBER NUMBER ')'$/;"	l
pt	def/defiDefs.hpp	/^    defPOINT pt;$/;"	m	struct:deftoken
pt	def/defrData.hpp	/^        struct defpoint pt;$/;"	m	union:__anon12	typeref:struct:__anon12::defpoint
pt	include/defiDefs.hpp	/^    defPOINT pt;$/;"	m	struct:deftoken
pt	include/defrData.hpp	/^        struct defpoint pt;$/;"	m	union:__anon6	typeref:struct:__anon6::defpoint
ptsAllocated_	def/defiFill.hpp	/^  int   ptsAllocated_;              \/\/ 5.7$/;"	m	class:defiFill
ptsAllocated_	def/defiNet.hpp	/^  int   ptsAllocated_;$/;"	m	class:defiNet
ptsAllocated_	include/defiFill.hpp	/^  int   ptsAllocated_;              \/\/ 5.7$/;"	m	class:defiFill
ptsAllocated_	include/defiNet.hpp	/^  int   ptsAllocated_;$/;"	m	class:defiNet
pv_deftoken	def/defrData.hpp	/^    char*  pv_deftoken; $/;"	m	class:defrData
pv_deftoken	include/defrData.hpp	/^    char*  pv_deftoken; $/;"	m	class:defrData
rVal	def/defrData.hpp	/^    double rVal;$/;"	m	class:defrData
rVal	include/defrData.hpp	/^    double rVal;$/;"	m	class:defrData
reader_case_sensitive	def/defrSettings.hpp	/^    int             reader_case_sensitive;$/;"	m	class:defrSession
reader_case_sensitive	include/defrSettings.hpp	/^    int             reader_case_sensitive;$/;"	m	class:defrSession
reader_case_sensitive_set	def/defrSettings.hpp	/^    int reader_case_sensitive_set;$/;"	m	class:defrSettings
reader_case_sensitive_set	include/defrSettings.hpp	/^    int reader_case_sensitive_set;$/;"	m	class:defrSettings
real_num	def/defrData.hpp	/^    int  real_num; $/;"	m	class:defrData
real_num	include/defrData.hpp	/^    int  real_num; $/;"	m	class:defrData
reallocCB	defrw/defrw.cpp	/^void* reallocCB(void* name, size_t size) {$/;"	f
rectMask	def/defiNet.cpp	/^int defiNet::rectMask(int index) const {$/;"	f	class:defiNet
rectMask	def/defiVia.cpp	/^int defiVia::rectMask(int index) const {$/;"	f	class:defiVia
rectMask_	def/defiVia.hpp	/^  int*  rectMask_;          \/\/ 5.8$/;"	m	class:defiVia
rectMask_	include/defiVia.hpp	/^  int*  rectMask_;          \/\/ 5.8$/;"	m	class:defiVia
rectMasks_	def/defiNet.hpp	/^  int* rectMasks_;$/;"	m	class:defiNet
rectMasks_	include/defiNet.hpp	/^  int* rectMasks_;$/;"	m	class:defiNet
rectName	def/defiNet.cpp	/^const char* defiNet::rectName(int index) const {$/;"	f	class:defiNet
rectNames_	def/defiNet.hpp	/^  char** rectNames_;                \/\/ 5.6$/;"	m	class:defiNet
rectNames_	include/defiNet.hpp	/^  char** rectNames_;                \/\/ 5.6$/;"	m	class:defiNet
rectPoly_blockage	def/def.y	/^rectPoly_blockage: K_RECT pt pt$/;"	l
rectPoly_blockage_rules	def/def.y	/^rectPoly_blockage_rules: \/\/ empty $/;"	l
rectRouteStatus	def/defiNet.cpp	/^const char* defiNet::rectRouteStatus(int index) const {$/;"	f	class:defiNet
rectRouteStatusShieldName	def/defiNet.cpp	/^const char* defiNet::rectRouteStatusShieldName(int index) const {$/;"	f	class:defiNet
rectRouteStatusShieldNames_	def/defiNet.hpp	/^  char** rectRouteStatusShieldNames_;$/;"	m	class:defiNet
rectRouteStatusShieldNames_	include/defiNet.hpp	/^  char** rectRouteStatusShieldNames_;$/;"	m	class:defiNet
rectRouteStatus_	def/defiNet.hpp	/^  char** rectRouteStatus_;$/;"	m	class:defiNet
rectRouteStatus_	include/defiNet.hpp	/^  char** rectRouteStatus_;$/;"	m	class:defiNet
rectShapeType	def/defiNet.cpp	/^const char* defiNet::rectShapeType(int index) const {$/;"	f	class:defiNet
rectShapeTypes_	def/defiNet.hpp	/^  char** rectShapeTypes_;$/;"	m	class:defiNet
rectShapeTypes_	include/defiNet.hpp	/^  char** rectShapeTypes_;$/;"	m	class:defiNet
rectXh_	def/defiComponent.hpp	/^  int* rectXh_;$/;"	m	class:defiComponent
rectXh_	include/defiComponent.hpp	/^  int* rectXh_;$/;"	m	class:defiComponent
rectXl_	def/defiComponent.hpp	/^  int* rectXl_;       \/\/ region points$/;"	m	class:defiComponent
rectXl_	include/defiComponent.hpp	/^  int* rectXl_;       \/\/ region points$/;"	m	class:defiComponent
rectYh_	def/defiComponent.hpp	/^  int* rectYh_;$/;"	m	class:defiComponent
rectYh_	include/defiComponent.hpp	/^  int* rectYh_;$/;"	m	class:defiComponent
rectYl_	def/defiComponent.hpp	/^  int* rectYl_;$/;"	m	class:defiComponent
rectYl_	include/defiComponent.hpp	/^  int* rectYl_;$/;"	m	class:defiComponent
rect_is_keyword	def/defrData.hpp	/^    int  rect_is_keyword; $/;"	m	class:defrData
rect_is_keyword	include/defrData.hpp	/^    int  rect_is_keyword; $/;"	m	class:defrData
rect_list	def/def.y	/^rect_list :$/;"	l
rect_pts	def/def.y	/^rect_pts :$/;"	l
rect_statement	def/def.y	/^rect_statement : $/;"	l
rectanglesAllocated_	def/defiRegion.hpp	/^  int rectanglesAllocated_;$/;"	m	class:defiRegion
rectanglesAllocated_	include/defiRegion.hpp	/^  int rectanglesAllocated_;$/;"	m	class:defiRegion
rectsAllocated_	def/defiBlockage.hpp	/^  int    rectsAllocated_;$/;"	m	class:defiBlockage
rectsAllocated_	def/defiComponent.hpp	/^  int rectsAllocated_;$/;"	m	class:defiComponent
rectsAllocated_	def/defiFill.hpp	/^  int   rectsAllocated_;$/;"	m	class:defiFill
rectsAllocated_	def/defiGroup.hpp	/^  int rectsAllocated_;$/;"	m	class:defiGroup
rectsAllocated_	def/defiNet.hpp	/^  int rectsAllocated_;              \/\/ 5.6$/;"	m	class:defiNet
rectsAllocated_	def/defiSlot.hpp	/^  int   rectsAllocated_;$/;"	m	class:defiSlot
rectsAllocated_	include/defiBlockage.hpp	/^  int    rectsAllocated_;$/;"	m	class:defiBlockage
rectsAllocated_	include/defiComponent.hpp	/^  int rectsAllocated_;$/;"	m	class:defiComponent
rectsAllocated_	include/defiFill.hpp	/^  int   rectsAllocated_;$/;"	m	class:defiFill
rectsAllocated_	include/defiGroup.hpp	/^  int rectsAllocated_;$/;"	m	class:defiGroup
rectsAllocated_	include/defiNet.hpp	/^  int rectsAllocated_;              \/\/ 5.6$/;"	m	class:defiNet
rectsAllocated_	include/defiSlot.hpp	/^  int   rectsAllocated_;$/;"	m	class:defiSlot
regTypeDef	def/defrData.hpp	/^    int  regTypeDef; \/\/ keep track that region type is defined $/;"	m	class:defrData
regTypeDef	include/defrData.hpp	/^    int  regTypeDef; \/\/ keep track that region type is defined $/;"	m	class:defrData
regionBounds	def/defiComponent.cpp	/^void defiComponent::regionBounds(int* size,$/;"	f	class:defiComponent
regionCB	defwrite/defwriteCbs.cpp	/^int regionCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
regionLength_	def/defiGroup.hpp	/^  int regionLength_;$/;"	m	class:defiGroup
regionLength_	include/defiGroup.hpp	/^  int regionLength_;$/;"	m	class:defiGroup
regionName	def/defiComponent.cpp	/^const char* defiComponent::regionName() const {$/;"	f	class:defiComponent
regionName	def/defiGroup.cpp	/^const char* defiGroup::regionName() const {$/;"	f	class:defiGroup
regionNameSize_	def/defiComponent.hpp	/^  int regionNameSize_;  \/\/ allocated size of region name$/;"	m	class:defiComponent
regionNameSize_	include/defiComponent.hpp	/^  int regionNameSize_;  \/\/ allocated size of region name$/;"	m	class:defiComponent
regionName_	def/defiComponent.hpp	/^  char* regionName_;    \/\/ name.$/;"	m	class:defiComponent
regionName_	include/defiComponent.hpp	/^  char* regionName_;    \/\/ name.$/;"	m	class:defiComponent
regionRects	def/defiGroup.cpp	/^void defiGroup::regionRects(int* size, int** xl,$/;"	f	class:defiGroup
regionWarnings	def/defrData.hpp	/^    int  regionWarnings; $/;"	m	class:defrData
regionWarnings	include/defrData.hpp	/^    int  regionWarnings; $/;"	m	class:defrData
region_	def/defiGroup.hpp	/^  char* region_;$/;"	m	class:defiGroup
region_	include/defiGroup.hpp	/^  char* region_;$/;"	m	class:defiGroup
region_option	def/def.y	/^region_option : '+' K_PROPERTY {defData->dumb_mode = DEF_MAX_INT; }$/;"	l
region_options	def/def.y	/^region_options: \/\/ empty $/;"	l
region_prop	def/def.y	/^region_prop : T_STRING NUMBER$/;"	l
region_prop_list	def/def.y	/^region_prop_list : \/\/ empty $/;"	l
region_type	def/def.y	/^region_type: K_FENCE$/;"	l
regions_section	def/def.y	/^regions_section: regions_start regions_stmts K_END K_REGIONS$/;"	l
regions_start	def/def.y	/^regions_start: K_REGIONS NUMBER ';'$/;"	l
regions_stmt	def/def.y	/^regions_stmt: '-' { defData->dumb_mode = 1; defData->no_num = 1; } T_STRING$/;"	l
regions_stmts	def/def.y	/^regions_stmts: \/\/ empty $/;"	l
reload_buffer	def/def_keywords.cpp	/^defrData::reload_buffer() {$/;"	f	class:defrData
reverseNetOrder	def/defiComponent.cpp	/^void defiComponent::reverseNetOrder() {$/;"	f	class:defiComponent
reverseOrder	def/defiPath.cpp	/^void defiPath::reverseOrder() {$/;"	f	class:defiPath
right	def/defiProp.cpp	/^double defiProp::right() const {$/;"	f	class:defiProp
rightHalo_	def/defiComponent.hpp	/^  int rightHalo_;$/;"	m	class:defiComponent
rightHalo_	include/defiComponent.hpp	/^  int rightHalo_;$/;"	m	class:defiComponent
right_	def/defiProp.hpp	/^  double left_, right_; \/\/ if it has a range the numbers are here.$/;"	m	class:defiProp
right_	include/defiProp.hpp	/^  double left_, right_; \/\/ if it has a range the numbers are here.$/;"	m	class:defiProp
ring	def/defrData.hpp	/^    char* ring[RING_SIZE];$/;"	m	class:defrData
ring	include/defrData.hpp	/^    char* ring[RING_SIZE];$/;"	m	class:defrData
ringCopy	def/def_keywords.cpp	/^defrData::ringCopy(const char* string) $/;"	f	class:defrData
ringPlace	def/defrData.hpp	/^    int  ringPlace; $/;"	m	class:defrData
ringPlace	include/defrData.hpp	/^    int  ringPlace; $/;"	m	class:defrData
ringSizes	def/defrData.hpp	/^    int ringSizes[RING_SIZE];$/;"	m	class:defrData
ringSizes	include/defrData.hpp	/^    int ringSizes[RING_SIZE];$/;"	m	class:defrData
riseMax	def/defiAssertion.cpp	/^double defiAssertion::riseMax() const {$/;"	f	class:defiAssertion
riseMax	def/defiPartition.cpp	/^double defiPartition::riseMax() const {$/;"	f	class:defiPartition
riseMaxLeft	def/defiPartition.cpp	/^double defiPartition::riseMaxLeft() const {$/;"	f	class:defiPartition
riseMaxLeft_	def/defiPartition.hpp	/^  double riseMaxLeft_;$/;"	m	class:defiPartition
riseMaxLeft_	include/defiPartition.hpp	/^  double riseMaxLeft_;$/;"	m	class:defiPartition
riseMaxRight	def/defiPartition.cpp	/^double defiPartition::riseMaxRight() const {$/;"	f	class:defiPartition
riseMaxRight_	def/defiPartition.hpp	/^  double riseMaxRight_;$/;"	m	class:defiPartition
riseMaxRight_	include/defiPartition.hpp	/^  double riseMaxRight_;$/;"	m	class:defiPartition
riseMax_	def/defiAssertion.hpp	/^  double riseMax_;$/;"	m	class:defiAssertion
riseMax_	def/defiPartition.hpp	/^  double riseMax_;$/;"	m	class:defiPartition
riseMax_	include/defiAssertion.hpp	/^  double riseMax_;$/;"	m	class:defiAssertion
riseMax_	include/defiPartition.hpp	/^  double riseMax_;$/;"	m	class:defiPartition
riseMin	def/defiAssertion.cpp	/^double defiAssertion::riseMin() const {$/;"	f	class:defiAssertion
riseMin	def/defiPartition.cpp	/^double defiPartition::riseMin() const {$/;"	f	class:defiPartition
riseMinLeft	def/defiPartition.cpp	/^double defiPartition::riseMinLeft() const {$/;"	f	class:defiPartition
riseMinLeft_	def/defiPartition.hpp	/^  double riseMinLeft_;$/;"	m	class:defiPartition
riseMinLeft_	include/defiPartition.hpp	/^  double riseMinLeft_;$/;"	m	class:defiPartition
riseMinRight	def/defiPartition.cpp	/^double defiPartition::riseMinRight() const {$/;"	f	class:defiPartition
riseMinRight_	def/defiPartition.hpp	/^  double riseMinRight_;$/;"	m	class:defiPartition
riseMinRight_	include/defiPartition.hpp	/^  double riseMinRight_;$/;"	m	class:defiPartition
riseMin_	def/defiAssertion.hpp	/^  double riseMin_;$/;"	m	class:defiAssertion
riseMin_	def/defiPartition.hpp	/^  double riseMin_;$/;"	m	class:defiPartition
riseMin_	include/defiAssertion.hpp	/^  double riseMin_;$/;"	m	class:defiAssertion
riseMin_	include/defiPartition.hpp	/^  double riseMin_;$/;"	m	class:defiPartition
risefall	def/def.y	/^risefall: K_RISE { $$ = (char*)"RISE"; } | K_FALL { $$ = (char*)"FALL"; }$/;"	l
risefallminmax1	def/def.y	/^risefallminmax1: K_RISEMIN NUMBER$/;"	l
risefallminmax1_list	def/def.y	/^risefallminmax1_list: \/\/ empty $/;"	l
risefallminmax2	def/def.y	/^risefallminmax2: K_RISEMIN NUMBER NUMBER$/;"	l
risefallminmax2_list	def/def.y	/^risefallminmax2_list:$/;"	l
routed_is_keyword	def/defrData.hpp	/^    int  routed_is_keyword; $/;"	m	class:defrData
routed_is_keyword	include/defrData.hpp	/^    int  routed_is_keyword; $/;"	m	class:defrData
rowCB	defwrite/defwriteCbs.cpp	/^int rowCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
rowCol	def/defiVia.cpp	/^void defiVia::rowCol(int* numCutRows, int* numCutCols) const {$/;"	f	class:defiVia
rowName	def/defrData.hpp	/^    char*  rowName; \/\/ to hold the rowName for message$/;"	m	class:defrData
rowName	include/defrData.hpp	/^    char*  rowName; \/\/ to hold the rowName for message$/;"	m	class:defrData
rowOrComp_	def/defiFPC.hpp	/^  char* rowOrComp_;$/;"	m	class:defiFPC
rowOrComp_	include/defiFPC.hpp	/^  char* rowOrComp_;$/;"	m	class:defiFPC
rowWarnings	def/defrData.hpp	/^    int  rowWarnings; $/;"	m	class:defrData
rowWarnings	include/defrData.hpp	/^    int  rowWarnings; $/;"	m	class:defrData
row_do_option	def/def.y	/^row_do_option: \/\/ empty $/;"	l
row_option	def/def.y	/^row_option : '+' K_PROPERTY {defData->dumb_mode = DEF_MAX_INT; }$/;"	l
row_options	def/def.y	/^row_options: \/\/ empty $/;"	l
row_or_comp	def/def.y	/^row_or_comp: '(' K_ROWS  {defData->dumb_mode = 1; defData->no_num = 1; } T_STRING ')'$/;"	l
row_or_comp_list	def/def.y	/^row_or_comp_list: \/\/ empty $/;"	l
row_prop	def/def.y	/^row_prop : T_STRING NUMBER$/;"	l
row_prop_list	def/def.y	/^row_prop_list : \/\/ empty $/;"	l
row_rule	def/def.y	/^row_rule: K_ROW {defData->dumb_mode = 2; defData->no_num = 2; } T_STRING T_STRING NUMBER NUMBER$/;"	l
row_step_option	def/def.y	/^row_step_option: \/\/ empty $/;"	l
rows_	def/defiVia.hpp	/^  int   rows_;              \/\/ 5.6$/;"	m	class:defiVia
rows_	include/defiVia.hpp	/^  int   rows_;              \/\/ 5.6$/;"	m	class:defiVia
rule	def/def.y	/^rule: design_section | assertions_section | blockage_section | comps_section$/;"	l
rules	def/def.y	/^rules: \/\/ empty $/;"	l
sNetWarnings	def/defrData.hpp	/^    int  sNetWarnings; $/;"	m	class:defrData
sNetWarnings	include/defrData.hpp	/^    int  sNetWarnings; $/;"	m	class:defrData
sameMask	def/defiRowTrack.cpp	/^int defiTrack::sameMask() const {$/;"	f	class:defiTrack
same_mask	def/def.y	/^same_mask: $/;"	l
samemask_	def/defiRowTrack.hpp	/^  int samemask_;$/;"	m	class:defiTrack
samemask_	include/defiRowTrack.hpp	/^  int samemask_;$/;"	m	class:defiTrack
save_x	def/defrData.hpp	/^    double save_x; $/;"	m	class:defrData
save_x	include/defrData.hpp	/^    double save_x; $/;"	m	class:defrData
save_y	def/defrData.hpp	/^    double save_y; $/;"	m	class:defrData
save_y	include/defrData.hpp	/^    double save_y; $/;"	m	class:defrData
scan_member	def/def.y	/^scan_member: '+' K_START {defData->dumb_mode = 2; defData->no_num = 2;} T_STRING opt_pin$/;"	l
scan_members	def/def.y	/^scan_members: $/;"	l
scan_rule	def/def.y	/^scan_rule: start_scan scan_members ';' $/;"	l
scanchainWarnings	def/defrData.hpp	/^    int  scanchainWarnings; $/;"	m	class:defrData
scanchainWarnings	include/defrData.hpp	/^    int  scanchainWarnings; $/;"	m	class:defrData
scanchain_end	def/def.y	/^scanchain_end: K_END K_SCANCHAINS$/;"	l
scanchain_rules	def/def.y	/^scanchain_rules: \/\/ empty $/;"	l
scanchain_start	def/def.y	/^scanchain_start: K_SCANCHAINS NUMBER ';'$/;"	l
scanchains_section	def/def.y	/^scanchains_section: scanchain_start scanchain_rules scanchain_end$/;"	l
sdist_	def/defiNet.hpp	/^  double* sdist_;$/;"	m	class:defiNet
sdist_	include/defiNet.hpp	/^  double* sdist_;$/;"	m	class:defiNet
session	def/defrData.hpp	/^    defrSession           *session;$/;"	m	class:defrContext
session	def/defrData.hpp	/^    defrSession         *session;$/;"	m	class:defrData
session	include/defrData.hpp	/^    defrSession           *session;$/;"	m	class:defrContext
session	include/defrData.hpp	/^    defrSession         *session;$/;"	m	class:defrData
set	def/defiPartition.cpp	/^void defiPartition::set(char dir, char typ, const char* inst, const char* pin) {$/;"	f	class:defiPartition
setAlign	def/defiFPC.cpp	/^void defiFPC::setAlign() {$/;"	f	class:defiFPC
setAntennaModel	def/defiPinCap.cpp	/^void defiPinAntennaModel::setAntennaModel(int aOxide) {$/;"	f	class:defiPinAntennaModel
setAssertionMode	def/defiAssertion.cpp	/^void defiAssertion::setAssertionMode() {$/;"	f	class:defiAssertion
setBounds	def/defiNet.cpp	/^void defiVpin::setBounds(int xl, int yl, int xh, int yh) {$/;"	f	class:defiVpin
setCap	def/defiNet.cpp	/^void defiNet::setCap(double w) {$/;"	f	class:defiNet
setCap	def/defiPinCap.cpp	/^void defiPinCap::setCap(double d) {$/;"	f	class:defiPinCap
setCapacitance	def/defiIOTiming.cpp	/^void defiIOTiming::setCapacitance(double num) {$/;"	f	class:defiIOTiming
setCommonIn	def/defiScanchain.cpp	/^void defiScanchain::setCommonIn(const char* pin) {$/;"	f	class:defiScanchain
setCommonOut	def/defiScanchain.cpp	/^void defiScanchain::setCommonOut(const char* pin) {$/;"	f	class:defiScanchain
setComponent	def/defiBlockage.cpp	/^void defiBlockage::setComponent(const char* name) {$/;"	f	class:defiBlockage
setConstraintMode	def/defiAssertion.cpp	/^void defiAssertion::setConstraintMode() {$/;"	f	class:defiAssertion
setDelay	def/defiAssertion.cpp	/^void defiAssertion::setDelay() {$/;"	f	class:defiAssertion
setDesignRuleWidth	def/defiBlockage.cpp	/^void defiBlockage::setDesignRuleWidth(int width) {$/;"	f	class:defiBlockage
setDiff	def/defiAssertion.cpp	/^void defiAssertion::setDiff() {$/;"	f	class:defiAssertion
setDirection	def/defiPinCap.cpp	/^void defiPin::setDirection(const char* dir) {$/;"	f	class:defiPin
setDo	def/defiRowTrack.cpp	/^void defiRow::setDo(double x_num, double y_num,$/;"	f	class:defiRow
setDo	def/defiRowTrack.cpp	/^void defiTrack::setDo(double x, double x_num, double x_step) {$/;"	f	class:defiTrack
setDo	def/defiSite.cpp	/^void defiSite::setDo(double x_num, double y_num, double x_step, double y_step) {$/;"	f	class:defiSite
setDoingBottomLeft	def/defiFPC.cpp	/^void defiFPC::setDoingBottomLeft() {$/;"	f	class:defiFPC
setDoingTopRight	def/defiFPC.cpp	/^void defiFPC::setDoingTopRight() {$/;"	f	class:defiFPC
setDriveCell	def/defiIOTiming.cpp	/^void defiIOTiming::setDriveCell(const char* name) {$/;"	f	class:defiIOTiming
setEEQ	def/defiComponent.cpp	/^void defiComponent::setEEQ(const char* name) {$/;"	f	class:defiComponent
setEqual	def/defiFPC.cpp	/^void defiFPC::setEqual(double num) {$/;"	f	class:defiFPC
setExceptpgnet	def/defiBlockage.cpp	/^void defiBlockage::setExceptpgnet() {$/;"	f	class:defiBlockage
setFallMax	def/defiAssertion.cpp	/^void defiAssertion::setFallMax(double d) {$/;"	f	class:defiAssertion
setFallMin	def/defiAssertion.cpp	/^void defiAssertion::setFallMin(double d) {$/;"	f	class:defiAssertion
setFills	def/defiBlockage.cpp	/^void defiBlockage::setFills() {$/;"	f	class:defiBlockage
setFixedbump	def/defiNet.cpp	/^void defiNet::setFixedbump() {$/;"	f	class:defiNet
setFloatingBits	def/defiScanchain.cpp	/^void defiScanchain::setFloatingBits(int bits) {$/;"	f	class:defiScanchain
setForeignLocation	def/defiComponent.cpp	/^void defiComponent::setForeignLocation(int x, int y, int orient) {$/;"	f	class:defiComponent
setForeignName	def/defiComponent.cpp	/^void defiComponent::setForeignName(const char* name) {$/;"	f	class:defiComponent
setFrequency	def/defiNet.cpp	/^void defiNet::setFrequency(double frequency) {$/;"	f	class:defiNet
setFrom	def/defiIOTiming.cpp	/^void defiIOTiming::setFrom(const char* name) {$/;"	f	class:defiIOTiming
setFromClockPin	def/defiPartition.cpp	/^void defiPartition::setFromClockPin(const char* inst, const char* pin) {$/;"	f	class:defiPartition
setFromCompPin	def/defiPartition.cpp	/^void defiPartition::setFromCompPin(const char* inst, const char* pin) {$/;"	f	class:defiPartition
setFromIOPin	def/defiPartition.cpp	/^void defiPartition::setFromIOPin(const char* pin) {$/;"	f	class:defiPartition
setFromTo	def/defiTimingDisable.cpp	/^void defiTimingDisable::setFromTo(const char* fromInst, const char* fromPin,$/;"	f	class:defiTimingDisable
setGenerate	def/defiComponent.cpp	/^void defiComponent::setGenerate(const char* newName, const char* macroName) {$/;"	f	class:defiComponent
setGroundSens	def/defiPinCap.cpp	/^void defiPin::setGroundSens(const char* name) {$/;"	f	class:defiPin
setHalo	def/defiComponent.cpp	/^void defiComponent::setHalo(int left, int bottom, int right, int top) {$/;"	f	class:defiComponent
setHaloSoft	def/defiComponent.cpp	/^void defiComponent::setHaloSoft() {$/;"	f	class:defiComponent
setHardspacing	def/defiNonDefault.cpp	/^void defiNonDefault::setHardspacing() {$/;"	f	class:defiNonDefault
setHasDoStep	def/defiRowTrack.cpp	/^void defiRow::setHasDoStep() {$/;"	f	class:defiRow
setLayer	def/defiBlockage.cpp	/^void defiBlockage::setLayer(const char* name) {$/;"	f	class:defiBlockage
setLayer	def/defiFill.cpp	/^void defiFill::setLayer(const char* name) {$/;"	f	class:defiFill
setLayer	def/defiNet.cpp	/^void defiVpin::setLayer(const char* lay) {$/;"	f	class:defiVpin
setLayer	def/defiSlot.cpp	/^void defiSlot::setLayer(const char* name) {$/;"	f	class:defiSlot
setLayerOpc	def/defiFill.cpp	/^void defiFill::setLayerOpc() {$/;"	f	class:defiFill
setLoc	def/defiNet.cpp	/^void defiVpin::setLoc(int x, int y) {$/;"	f	class:defiVpin
setLocation	def/defiSite.cpp	/^void defiSite::setLocation(double xorg, double yorg) {$/;"	f	class:defiSite
setMacro	def/defiTimingDisable.cpp	/^void defiTimingDisable::setMacro(const char* name) {$/;"	f	class:defiTimingDisable
setMacroFromTo	def/defiTimingDisable.cpp	/^void defiTimingDisable::setMacroFromTo(const char* fromPin, const char* toPin) {$/;"	f	class:defiTimingDisable
setMacroThru	def/defiTimingDisable.cpp	/^void defiTimingDisable::setMacroThru(const char* thru) {$/;"	f	class:defiTimingDisable
setMask	def/defiBlockage.cpp	/^void defiBlockage::setMask(int colorMask) {$/;"	f	class:defiBlockage
setMask	def/defiFill.cpp	/^void defiFill::setMask(int colorMask) {$/;"	f	class:defiFill
setMaskShift	def/defiComponent.cpp	/^void defiComponent::setMaskShift(const char *shiftMask) {$/;"	f	class:defiComponent
setMax	def/defiFPC.cpp	/^void defiFPC::setMax(double num) {$/;"	f	class:defiFPC
setMax	def/defiPartition.cpp	/^void defiPartition::setMax(double min, double max) {$/;"	f	class:defiPartition
setMaxX	def/defiGroup.cpp	/^void defiGroup::setMaxX(int x) {$/;"	f	class:defiGroup
setMaxY	def/defiGroup.cpp	/^void defiGroup::setMaxY(int y) {$/;"	f	class:defiGroup
setMin	def/defiFPC.cpp	/^void defiFPC::setMin(double num) {$/;"	f	class:defiFPC
setMin	def/defiPartition.cpp	/^void defiPartition::setMin(double min, double max) {$/;"	f	class:defiPartition
setName	def/defiFPC.cpp	/^void defiFPC::setName(const char* name, const char* direction) {$/;"	f	class:defiFPC
setName	def/defiIOTiming.cpp	/^void defiIOTiming::setName(const char* inst, const char* pin) {$/;"	f	class:defiIOTiming
setName	def/defiNet.cpp	/^void defiNet::setName(const char* name) {$/;"	f	class:defiNet
setName	def/defiNet.cpp	/^void defiSubnet::setName(const char* name) {$/;"	f	class:defiSubnet
setName	def/defiNonDefault.cpp	/^void defiNonDefault::setName(const char* name) { $/;"	f	class:defiNonDefault
setName	def/defiPartition.cpp	/^void defiPartition::setName(const char* name) {$/;"	f	class:defiPartition
setName	def/defiPinProp.cpp	/^void defiPinProp::setName(const char* inst, const char* pin) {$/;"	f	class:defiPinProp
setName	def/defiScanchain.cpp	/^void defiScanchain::setName(const char* name) {$/;"	f	class:defiScanchain
setName	def/defiSite.cpp	/^void defiSite::setName(const char* name) {$/;"	f	class:defiSite
setNetExpr	def/defiPinCap.cpp	/^void defiPin::setNetExpr(const char* name) {$/;"	f	class:defiPin
setNetName	def/defiAssertion.cpp	/^void defiAssertion::setNetName(const char* name) {$/;"	f	class:defiAssertion
setNonDefault	def/defiNet.cpp	/^void defiSubnet::setNonDefault(const char* name) {$/;"	f	class:defiSubnet
setNonDefaultRule	def/defiNet.cpp	/^void defiNet::setNonDefaultRule(const char* typ) {$/;"	f	class:defiNet
setNumber	def/defiProp.cpp	/^void defiProp::setNumber(double d) {$/;"	f	class:defiProp
setOrderedBits	def/defiScanchain.cpp	/^void defiOrdered::setOrderedBits(int bits) {$/;"	f	class:defiOrdered
setOrderedBits	def/defiScanchain.cpp	/^void defiScanchain::setOrderedBits(int bits) {$/;"	f	class:defiScanchain
setOrient	def/defiNet.cpp	/^void defiVpin::setOrient(int orient) {$/;"	f	class:defiVpin
setOrient	def/defiSite.cpp	/^void defiSite::setOrient(int orient) {$/;"	f	class:defiSite
setOriginal	def/defiNet.cpp	/^void defiNet::setOriginal(const char* typ) {$/;"	f	class:defiNet
setParallel	def/defiIOTiming.cpp	/^void defiIOTiming::setParallel(double num) {$/;"	f	class:defiIOTiming
setPartial	def/defiBlockage.cpp	/^void defiBlockage::setPartial(double maxDensity) {$/;"	f	class:defiBlockage
setPartition	def/defiScanchain.cpp	/^void defiScanchain::setPartition(const char* partName, int maxBits) {$/;"	f	class:defiScanchain
setPattern	def/defiNet.cpp	/^void defiNet::setPattern(const char* typ) {$/;"	f	class:defiNet
setPerim	def/defiGroup.cpp	/^void defiGroup::setPerim(int p) {$/;"	f	class:defiGroup
setPin	def/defiPinCap.cpp	/^void defiPinCap::setPin(int p) {$/;"	f	class:defiPinCap
setPlacement	def/defiBlockage.cpp	/^void defiBlockage::setPlacement() {$/;"	f	class:defiBlockage
setPlacement	def/defiPinCap.cpp	/^void defiPin::setPlacement(int typ, int x, int y, int orient) {$/;"	f	class:defiPin
setPlacement	def/defiPinCap.cpp	/^void defiPinPort::setPlacement(int typ, int x, int y, int orient) {$/;"	f	class:defiPinPort
setPlacementLocation	def/defiComponent.cpp	/^void defiComponent::setPlacementLocation(int x, int y, int orient) {$/;"	f	class:defiComponent
setPlacementStatus	def/defiComponent.cpp	/^void defiComponent::setPlacementStatus(int n) {$/;"	f	class:defiComponent
setPolygon	def/defiMisc.cpp	/^void defiStyles::setPolygon(defiGeometries* geom) {$/;"	f	class:defiStyles
setPortPlacement	def/defiPinCap.cpp	/^void defiPin::setPortPlacement(int typ, int x, int y, int orient) {$/;"	f	class:defiPin
setPropInteger	def/defiProp.cpp	/^void defiProp::setPropInteger() {$/;"	f	class:defiProp
setPropNameMapString	def/defiProp.cpp	/^void defiProp::setPropNameMapString(const char* string) {$/;"	f	class:defiProp
setPropQString	def/defiProp.cpp	/^void defiProp::setPropQString(const char* string) {$/;"	f	class:defiProp
setPropReal	def/defiProp.cpp	/^void defiProp::setPropReal() {$/;"	f	class:defiProp
setPropString	def/defiProp.cpp	/^void defiProp::setPropString() {$/;"	f	class:defiProp
setPropType	def/defiProp.cpp	/^void defiProp::setPropType(const char* typ, const char* string) {$/;"	f	class:defiProp
setPropType	def/defiPropType.cpp	/^void defiPropType::setPropType(const char* name, const char type) {$/;"	f	class:defiPropType
setPushdown	def/defiBlockage.cpp	/^void defiBlockage::setPushdown() {$/;"	f	class:defiBlockage
setRange	def/defiNet.cpp	/^void defiNet::setRange(double left, double right) {$/;"	f	class:defiNet
setRange	def/defiProp.cpp	/^void defiProp::setRange(double left, double right) {$/;"	f	class:defiProp
setReentrantPathsFlag	def/defiTimingDisable.cpp	/^void defiTimingDisable::setReentrantPathsFlag() {$/;"	f	class:defiTimingDisable
setRegionBounds	def/defiComponent.cpp	/^void defiComponent::setRegionBounds(int xl, int yl, int xh, int yh) {$/;"	f	class:defiComponent
setRegionName	def/defiComponent.cpp	/^void defiComponent::setRegionName(const char* name) {$/;"	f	class:defiComponent
setRegionName	def/defiGroup.cpp	/^void defiGroup::setRegionName(const char* region) {$/;"	f	class:defiGroup
setRiseMax	def/defiAssertion.cpp	/^void defiAssertion::setRiseMax(double d) {$/;"	f	class:defiAssertion
setRiseMin	def/defiAssertion.cpp	/^void defiAssertion::setRiseMin(double d) {$/;"	f	class:defiAssertion
setRouteHalo	def/defiComponent.cpp	/^void defiComponent::setRouteHalo(int haloDist, const char* minLayer,$/;"	f	class:defiComponent
setSNetWireCbk	defrw/defrw.cpp	/^static int setSNetWireCbk = 0;$/;"	v	file:
setSlewRate	def/defiIOTiming.cpp	/^void defiIOTiming::setSlewRate(const char* riseFall, double min, double max) {$/;"	f	class:defiIOTiming
setSlots	def/defiBlockage.cpp	/^void defiBlockage::setSlots() {$/;"	f	class:defiBlockage
setSoft	def/defiBlockage.cpp	/^void defiBlockage::setSoft() {$/;"	f	class:defiBlockage
setSource	def/defiComponent.cpp	/^void defiComponent::setSource(const char* name) {$/;"	f	class:defiComponent
setSource	def/defiNet.cpp	/^void defiNet::setSource(const char* typ) {$/;"	f	class:defiNet
setSpacing	def/defiBlockage.cpp	/^void defiBlockage::setSpacing(int minSpacing) {$/;"	f	class:defiBlockage
setSpacing	def/defiNet.cpp	/^void defiNet::setSpacing(const char* layer, double d) {$/;"	f	class:defiNet
setSpecial	def/defiPinCap.cpp	/^void defiPin::setSpecial() {$/;"	f	class:defiPin
setStart	def/defiScanchain.cpp	/^void defiScanchain::setStart(const char* inst, const char* pin) {$/;"	f	class:defiScanchain
setStatus	def/defiNet.cpp	/^void defiVpin::setStatus(char st) {$/;"	f	class:defiVpin
setStop	def/defiScanchain.cpp	/^void defiScanchain::setStop(const char* inst, const char* pin) {$/;"	f	class:defiScanchain
setStyle	def/defiMisc.cpp	/^void defiStyles::setStyle(int styleNum) {$/;"	f	class:defiStyles
setStyle	def/defiNet.cpp	/^void defiNet::setStyle(int style) {$/;"	f	class:defiNet
setSum	def/defiAssertion.cpp	/^void defiAssertion::setSum() {$/;"	f	class:defiAssertion
setSupplySens	def/defiPinCap.cpp	/^void defiPin::setSupplySens(const char* name) {$/;"	f	class:defiPin
setTaper	def/defiPath.cpp	/^void defiPath::setTaper() {$/;"	f	class:defiPath
setThru	def/defiTimingDisable.cpp	/^void defiTimingDisable::setThru(const char* fromInst, const char* fromPin) {$/;"	f	class:defiTimingDisable
setTo	def/defiIOTiming.cpp	/^void defiIOTiming::setTo(const char* name) {$/;"	f	class:defiIOTiming
setToClockPin	def/defiPartition.cpp	/^void defiPartition::setToClockPin(const char* inst, const char* pin) {$/;"	f	class:defiPartition
setToCompPin	def/defiPartition.cpp	/^void defiPartition::setToCompPin(const char* inst, const char* pin) {$/;"	f	class:defiPartition
setToIOPin	def/defiPartition.cpp	/^void defiPartition::setToIOPin(const char* pin) {$/;"	f	class:defiPartition
setType	def/defiNet.cpp	/^void defiNet::setType(const char* typ) {$/;"	f	class:defiNet
setType	def/defiNet.cpp	/^void defiSubnet::setType(const char* typ) {$/;"	f	class:defiSubnet
setType	def/defiRegion.cpp	/^void defiRegion::setType(const char* type) {$/;"	f	class:defiRegion
setUse	def/defiNet.cpp	/^void defiNet::setUse(const char* typ) {$/;"	f	class:defiNet
setUse	def/defiPinCap.cpp	/^void defiPin::setUse(const char* use) {$/;"	f	class:defiPin
setVariable	def/defiIOTiming.cpp	/^void defiIOTiming::setVariable(const char* riseFall, double min, double max) {$/;"	f	class:defiIOTiming
setVia	def/defiFill.cpp	/^void defiFill::setVia(const char* name) {$/;"	f	class:defiFill
setViaOpc	def/defiFill.cpp	/^void defiFill::setViaOpc() {$/;"	f	class:defiFill
setVoltage	def/defiNet.cpp	/^void defiNet::setVoltage(double v) {$/;"	f	class:defiNet
setWeight	def/defiComponent.cpp	/^void defiComponent::setWeight(int w) {$/;"	f	class:defiComponent
setWeight	def/defiNet.cpp	/^void defiNet::setWeight(int w) {$/;"	f	class:defiNet
setWidth	def/defiNet.cpp	/^void defiNet::setWidth(const char* layer, double d) {$/;"	f	class:defiNet
setWiredlogic	def/defiAssertion.cpp	/^void defiAssertion::setWiredlogic(const char* name, double dist) {$/;"	f	class:defiAssertion
setWiredlogicMode	def/defiAssertion.cpp	/^void defiAssertion::setWiredlogicMode() {$/;"	f	class:defiAssertion
setXTalk	def/defiNet.cpp	/^void defiNet::setXTalk(int i) {$/;"	f	class:defiNet
settings	def/defrData.hpp	/^    const defrSettings  *settings;$/;"	m	class:defrData
settings	def/defrData.hpp	/^    defrSettings          *settings;$/;"	m	class:defrContext
settings	include/defrData.hpp	/^    const defrSettings  *settings;$/;"	m	class:defrData
settings	include/defrData.hpp	/^    defrSettings          *settings;$/;"	m	class:defrContext
setup	def/defiGroup.cpp	/^void defiGroup::setup(const char* name) {$/;"	f	class:defiGroup
setup	def/defiRegion.cpp	/^void defiRegion::setup(const char* name) {$/;"	f	class:defiRegion
setup	def/defiRowTrack.cpp	/^void defiGcellGrid::setup(const char* macro, int x, int xNum, double xStep) {$/;"	f	class:defiGcellGrid
setup	def/defiRowTrack.cpp	/^void defiRow::setup(const char* name, const char* macro, double x, double y,$/;"	f	class:defiRow
setup	def/defiRowTrack.cpp	/^void defiTrack::setup(const char* macro) {$/;"	f	class:defiTrack
setup	def/defiVia.cpp	/^void defiVia::setup(const char* name) {$/;"	f	class:defiVia
setup_	def/defiPartition.hpp	/^  char setup_;$/;"	m	class:defiPartition
setup_	include/defiPartition.hpp	/^  char setup_;$/;"	m	class:defiPartition
shape_type	def/def.y	/^shape_type: K_RING$/;"	l
shield	def/defiNet.cpp	/^const defiShield* defiNet::shield(int index) const {$/;"	f	class:defiNet
shield	def/defiNet.cpp	/^defiShield* defiNet::shield(int index) {$/;"	f	class:defiNet
shield	def/defrData.hpp	/^    int  shield; \/\/ To identify if the path is shield for 5.3$/;"	m	class:defrData
shield	include/defrData.hpp	/^    int  shield; \/\/ To identify if the path is shield for 5.3$/;"	m	class:defrData
shieldName	def/defiNet.cpp	/^const char* defiShield::shieldName() const {$/;"	f	class:defiShield
shieldName	def/defrData.hpp	/^    char*  shieldName; \/\/ to hold the shieldNetName$/;"	m	class:defrData
shieldName	include/defrData.hpp	/^    char*  shieldName; \/\/ to hold the shieldNetName$/;"	m	class:defrData
shieldNet	def/defiNet.cpp	/^const char* defiNet::shieldNet(int index) const {$/;"	f	class:defiNet
shieldNet_	def/defiNet.hpp	/^  char** shieldNet_;          \/\/ name of the SHIELDNET$/;"	m	class:defiNet
shieldNet_	include/defiNet.hpp	/^  char** shieldNet_;          \/\/ name of the SHIELDNET$/;"	m	class:defiNet
shieldNetsAllocated_	def/defiNet.hpp	/^  int shieldNetsAllocated_;   \/\/ number of SHIELDNETS allocated in array.$/;"	m	class:defiNet
shieldNetsAllocated_	include/defiNet.hpp	/^  int shieldNetsAllocated_;   \/\/ number of SHIELDNETS allocated in array.$/;"	m	class:defiNet
shield_layer	def/def.y	/^shield_layer: \/\/ PCR 902306 $/;"	l
shieldsAllocated_	def/defiNet.hpp	/^  int shieldsAllocated_;      \/\/ allocated size of SHIELD paths array$/;"	m	class:defiNet
shieldsAllocated_	include/defiNet.hpp	/^  int shieldsAllocated_;      \/\/ allocated size of SHIELD paths array$/;"	m	class:defiNet
shields_	def/defiNet.hpp	/^  defiShield** shields_;      \/\/ SHIELD data $/;"	m	class:defiNet
shields_	include/defiNet.hpp	/^  defiShield** shields_;      \/\/ SHIELD data $/;"	m	class:defiNet
shiftBuf	def/defrData.hpp	/^    char*  shiftBuf; $/;"	m	class:defrData
shiftBuf	include/defrData.hpp	/^    char*  shiftBuf; $/;"	m	class:defrData
shiftBufLength	def/defrData.hpp	/^    int  shiftBufLength; $/;"	m	class:defrData
shiftBufLength	include/defrData.hpp	/^    int  shiftBufLength; $/;"	m	class:defrData
short	def/def.tab.cpp	456;"	d	file:
siteName_	def/defiSite.hpp	/^  char* siteName_;     \/\/ Name of this.$/;"	m	class:defiSite
siteName_	include/defiSite.hpp	/^  char* siteName_;     \/\/ Name of this.$/;"	m	class:defiSite
slayers_	def/defiNet.hpp	/^  char** slayers_;$/;"	m	class:defiNet
slayers_	include/defiNet.hpp	/^  char** slayers_;$/;"	m	class:defiNet
sleft_	def/defiNet.hpp	/^  double* sleft_;$/;"	m	class:defiNet
sleft_	include/defiNet.hpp	/^  double* sleft_;$/;"	m	class:defiNet
slewFallMax	def/defiIOTiming.cpp	/^double defiIOTiming::slewFallMax() const {$/;"	f	class:defiIOTiming
slewFallMax_	def/defiIOTiming.hpp	/^  double slewFallMax_;$/;"	m	class:defiIOTiming
slewFallMax_	include/defiIOTiming.hpp	/^  double slewFallMax_;$/;"	m	class:defiIOTiming
slewFallMin	def/defiIOTiming.cpp	/^double defiIOTiming::slewFallMin() const {$/;"	f	class:defiIOTiming
slewFallMin_	def/defiIOTiming.hpp	/^  double slewFallMin_;$/;"	m	class:defiIOTiming
slewFallMin_	include/defiIOTiming.hpp	/^  double slewFallMin_;$/;"	m	class:defiIOTiming
slewRiseMax	def/defiIOTiming.cpp	/^double defiIOTiming::slewRiseMax() const {$/;"	f	class:defiIOTiming
slewRiseMax_	def/defiIOTiming.hpp	/^  double slewRiseMax_;$/;"	m	class:defiIOTiming
slewRiseMax_	include/defiIOTiming.hpp	/^  double slewRiseMax_;$/;"	m	class:defiIOTiming
slewRiseMin	def/defiIOTiming.cpp	/^double defiIOTiming::slewRiseMin() const {$/;"	f	class:defiIOTiming
slewRiseMin_	def/defiIOTiming.hpp	/^  double slewRiseMin_;$/;"	m	class:defiIOTiming
slewRiseMin_	include/defiIOTiming.hpp	/^  double slewRiseMin_;$/;"	m	class:defiIOTiming
slot_def	def/def.y	/^slot_def: slot_rule geom_slot_rules ';'$/;"	l
slot_defs	def/def.y	/^slot_defs: \/\/ empty $/;"	l
slot_end	def/def.y	/^slot_end: K_END K_SLOTS$/;"	l
slot_rule	def/def.y	/^slot_rule: '-' K_LAYER { defData->dumb_mode = 1; defData->no_num = 1; } T_STRING $/;"	l
slot_section	def/def.y	/^slot_section: slot_start slot_defs slot_end ;$/;"	l
slot_start	def/def.y	/^slot_start: K_SLOTS NUMBER ';'$/;"	l
snetCB	defwrite/defwriteCbs.cpp	/^int snetCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
snet_option	def/def.y	/^snet_option: snet_width | snet_voltage | $/;"	l
snet_options	def/def.y	/^snet_options: \/\/ empty $/;"	l
snet_other_option	def/def.y	/^snet_other_option: '+' net_type$/;"	l
snet_prop	def/def.y	/^snet_prop: T_STRING NUMBER$/;"	l
snet_prop_list	def/def.y	/^snet_prop_list: snet_prop$/;"	l
snet_rule	def/def.y	/^snet_rule: net_and_connections snet_options ';'$/;"	l
snet_rules	def/def.y	/^snet_rules: \/\/ empty $/;"	l
snet_spacing	def/def.y	/^snet_spacing: '+' K_SPACING { defData->dumb_mode = 1; } T_STRING NUMBER$/;"	l
snet_voltage	def/def.y	/^snet_voltage: '+' K_VOLTAGE  { defData->dumb_mode = 1; defData->no_num = 1; } T_STRING$/;"	l
snet_width	def/def.y	/^snet_width: '+' K_WIDTH { defData->dumb_mode = 1; } T_STRING NUMBER$/;"	l
snetf	defdiff/diffDefRW.cpp	/^int snetf(defrCallbackType_e c, defiNet* net, defiUserData ud) {$/;"	f
snetf	defrw/defrw.cpp	/^int snetf(defrCallbackType_e c, defiNet* net, defiUserData ud) {$/;"	f
snetpath	defrw/defrw.cpp	/^int snetpath(defrCallbackType_e c, defiNet* ppath, defiUserData ud) {$/;"	f
snets_section	def/def.y	/^snets_section :  start_snets snet_rules end_snets$/;"	l
snetwire	defrw/defrw.cpp	/^int snetwire(defrCallbackType_e c, defiNet* ppath, defiUserData ud) {$/;"	f
snew_path	def/def.y	/^snew_path: K_NEW { defData->dumb_mode = 1; } spath$/;"	l
source	def/defiComponent.cpp	/^const char* defiComponent::source() const {$/;"	f	class:defiComponent
source	def/defiNet.cpp	/^const char* defiNet::source() const {$/;"	f	class:defiNet
source_	def/defiComponent.hpp	/^  char* source_;$/;"	m	class:defiComponent
source_	def/defiNet.hpp	/^  char* source_;$/;"	m	class:defiNet
source_	include/defiComponent.hpp	/^  char* source_;$/;"	m	class:defiComponent
source_	include/defiNet.hpp	/^  char* source_;$/;"	m	class:defiNet
source_type	def/def.y	/^source_type: K_NETLIST$/;"	l
spacingAllocated_	def/defiNet.hpp	/^  int spacingAllocated_;$/;"	m	class:defiNet
spacingAllocated_	include/defiNet.hpp	/^  int spacingAllocated_;$/;"	m	class:defiNet
spacingRule	def/defiNet.cpp	/^void defiNet::spacingRule(int index, char** layer, double* dist,$/;"	f	class:defiNet
spacing_	def/defiNonDefault.hpp	/^  double* spacing_;$/;"	m	class:defiNonDefault
spacing_	include/defiNonDefault.hpp	/^  double* spacing_;$/;"	m	class:defiNonDefault
spath	def/def.y	/^spath:  T_STRING$/;"	l
spaths	def/def.y	/^spaths:$/;"	l
specialWire_mask	def/defrData.hpp	/^    int  specialWire_mask; $/;"	m	class:defrData
specialWire_mask	include/defrData.hpp	/^    int  specialWire_mask; $/;"	m	class:defrData
specialWire_routeStatus	def/defrData.hpp	/^    char*  specialWire_routeStatus;$/;"	m	class:defrData
specialWire_routeStatus	include/defrData.hpp	/^    char*  specialWire_routeStatus;$/;"	m	class:defrData
specialWire_routeStatusName	def/defrData.hpp	/^    char*  specialWire_routeStatusName;$/;"	m	class:defrData
specialWire_routeStatusName	include/defrData.hpp	/^    char*  specialWire_routeStatusName;$/;"	m	class:defrData
specialWire_shapeType	def/defrData.hpp	/^    char*  specialWire_shapeType;$/;"	m	class:defrData
specialWire_shapeType	include/defrData.hpp	/^    char*  specialWire_shapeType;$/;"	m	class:defrData
sright_	def/defiNet.hpp	/^  double* sright_;$/;"	m	class:defiNet
sright_	include/defiNet.hpp	/^  double* sright_;$/;"	m	class:defiNet
stack	def/defrData.hpp	/^    std::string stack[20];  \/* the stack itself *\/$/;"	m	class:defrData
stack	include/defrData.hpp	/^    std::string stack[20];  \/* the stack itself *\/$/;"	m	class:defrData
start	def/defiScanchain.cpp	/^void defiScanchain::start(char** inst, char** pin) const {$/;"	f	class:defiScanchain
startInst_	def/defiScanchain.hpp	/^  char* startInst_;$/;"	m	class:defiScanchain
startInst_	include/defiScanchain.hpp	/^  char* startInst_;$/;"	m	class:defiScanchain
startList	def/defiMisc.cpp	/^void defiGeometries::startList(int x, int y) {$/;"	f	class:defiGeometries
startPin_	def/defiScanchain.hpp	/^  char* startPin_;$/;"	m	class:defiScanchain
startPin_	include/defiScanchain.hpp	/^  char* startPin_;$/;"	m	class:defiScanchain
start_comps	def/def.y	/^start_comps: K_COMPS NUMBER ';'$/;"	l
start_def_cap	def/def.y	/^start_def_cap: K_DEFAULTCAP NUMBER $/;"	l
start_group	def/def.y	/^start_group: '-' { defData->dumb_mode = 1; defData->no_num = 1; } T_STRING $/;"	l
start_iotiming	def/def.y	/^start_iotiming: '-' '(' {defData->dumb_mode = 2; defData->no_num = 2; } T_STRING T_STRING ')'$/;"	l
start_nets	def/def.y	/^start_nets: K_NETS NUMBER ';'$/;"	l
start_partition	def/def.y	/^start_partition: '-' { defData->dumb_mode = 1; defData->no_num = 1; } T_STRING turnoff$/;"	l
start_pins	def/def.y	/^start_pins: K_PINS NUMBER ';'$/;"	l
start_scan	def/def.y	/^start_scan: '-' {defData->dumb_mode = 1; defData->no_num = 1;} T_STRING $/;"	l
start_snets	def/def.y	/^start_snets: K_SNETS NUMBER ';'$/;"	l
status	def/defiNet.cpp	/^char defiVpin::status() const {$/;"	f	class:defiVpin
status_	def/defiComponent.hpp	/^  int status_;          \/\/ placement status$/;"	m	class:defiComponent
status_	def/defiNet.hpp	/^  char status_; \/* P-placed  F-fixed  C-cover  ' '- none *\/$/;"	m	class:defiVpin
status_	include/defiComponent.hpp	/^  int status_;          \/\/ placement status$/;"	m	class:defiComponent
status_	include/defiNet.hpp	/^  char status_; \/* P-placed  F-fixed  C-cover  ' '- none *\/$/;"	m	class:defiVpin
stepX	cdef/defiTypedefs.h	/^  int stepX;$/;"	m	struct:defiViaData
stepX	def/defiPath.hpp	/^  int stepX;$/;"	m	struct:defiViaData
stepX	include/defiPath.hpp	/^  int stepX;$/;"	m	struct:defiViaData
stepX	include/defiTypedefs.h	/^  int stepX;$/;"	m	struct:defiViaData
stepX_	def/defiPath.hpp	/^  int stepX_;$/;"	m	class:defiPath
stepX_	include/defiPath.hpp	/^  int stepX_;$/;"	m	class:defiPath
stepY	cdef/defiTypedefs.h	/^  int stepY;$/;"	m	struct:defiViaData
stepY	def/defiPath.hpp	/^  int stepY;$/;"	m	struct:defiViaData
stepY	include/defiPath.hpp	/^  int stepY;$/;"	m	struct:defiViaData
stepY	include/defiTypedefs.h	/^  int stepY;$/;"	m	struct:defiViaData
stepY_	def/defiPath.hpp	/^  int stepY_;$/;"	m	class:defiPath
stepY_	include/defiPath.hpp	/^  int stepY_;$/;"	m	class:defiPath
step_is_keyword	def/defrData.hpp	/^    int  step_is_keyword; $/;"	m	class:defrData
step_is_keyword	include/defrData.hpp	/^    int  step_is_keyword; $/;"	m	class:defrData
stop	def/defiScanchain.cpp	/^void defiScanchain::stop(char** inst, char** pin) const {$/;"	f	class:defiScanchain
stopInst_	def/defiScanchain.hpp	/^  char* stopInst_;$/;"	m	class:defiScanchain
stopInst_	include/defiScanchain.hpp	/^  char* stopInst_;$/;"	m	class:defiScanchain
stopPin_	def/defiScanchain.hpp	/^  char* stopPin_;$/;"	m	class:defiScanchain
stopPin_	include/defiScanchain.hpp	/^  char* stopPin_;$/;"	m	class:defiScanchain
strdup	def/defiDefs.hpp	175;"	d
strdup	include/defiDefs.hpp	175;"	d
string	def/defiProp.cpp	/^const char* defiProp::string() const {$/;"	f	class:defiProp
string	def/defrData.hpp	/^        char * string ;$/;"	m	union:__anon12
string	include/defrData.hpp	/^        char * string ;$/;"	m	union:__anon6
stringData_	def/defiProp.hpp	/^  char* stringData_;    \/\/ if it is a string the data is here.$/;"	m	class:defiProp
stringData_	include/defiProp.hpp	/^  char* stringData_;    \/\/ if it is a string the data is here.$/;"	m	class:defiProp
stringLength_	def/defiProp.hpp	/^  int stringLength_;    \/\/ allocated size of stringData.$/;"	m	class:defiProp
stringLength_	include/defiProp.hpp	/^  int stringLength_;    \/\/ allocated size of stringData.$/;"	m	class:defiProp
style	def/defiMisc.cpp	/^int defiStyles::style() const {$/;"	f	class:defiStyles
style	def/defiNet.cpp	/^int defiNet::style() const {$/;"	f	class:defiNet
styleNum_	def/defiMisc.hpp	/^    int    styleNum_;$/;"	m	class:defiStyles
styleNum_	include/defiMisc.hpp	/^    int    styleNum_;$/;"	m	class:defiStyles
style_	def/defiNet.hpp	/^  int   style_;$/;"	m	class:defiNet
style_	include/defiNet.hpp	/^  int   style_;$/;"	m	class:defiNet
stylesWarnings	def/defrData.hpp	/^    int  stylesWarnings; $/;"	m	class:defrData
stylesWarnings	include/defrData.hpp	/^    int  stylesWarnings; $/;"	m	class:defrData
styles_end	def/def.y	/^styles_end: K_END K_STYLES$/;"	l
styles_rule	def/def.y	/^styles_rule: '-' K_STYLE NUMBER$/;"	l
styles_rules	def/def.y	/^styles_rules: \/\/ empty $/;"	l
styles_section	def/def.y	/^styles_section: styles_start styles_rules styles_end ;$/;"	l
styles_start	def/def.y	/^styles_start: K_STYLES NUMBER ';'$/;"	l
sublex	def/def_keywords.cpp	/^defrData::sublex(YYSTYPE *pYylval)$/;"	f	class:defrData
subnet	def/defiNet.cpp	/^const defiSubnet* defiNet::subnet(int index) const {$/;"	f	class:defiNet
subnet	def/defiNet.cpp	/^defiSubnet* defiNet::subnet(int index) {$/;"	f	class:defiNet
subnetNamef	defrw/defrw.cpp	/^int subnetNamef(defrCallbackType_e c, const char* subnetName, defiUserData ud) {$/;"	f
subnet_opt_syn	def/def.y	/^subnet_opt_syn: \/\/ empty $/;"	l
subnet_option	def/def.y	/^subnet_option: subnet_type$/;"	l
subnet_options	def/def.y	/^subnet_options: \/\/ empty $/;"	l
subnet_type	def/def.y	/^subnet_type: K_FIXED$/;"	l
subnetsAllocated_	def/defiNet.hpp	/^  int subnetsAllocated_; \/\/ allocated size of props array$/;"	m	class:defiNet
subnetsAllocated_	include/defiNet.hpp	/^  int subnetsAllocated_; \/\/ allocated size of props array$/;"	m	class:defiNet
subnets_	def/defiNet.hpp	/^  defiSubnet** subnets_; \/\/ Prop names$/;"	m	class:defiNet
subnets_	include/defiNet.hpp	/^  defiSubnet** subnets_; \/\/ Prop names$/;"	m	class:defiNet
supplySensLength_	def/defiPinCap.hpp	/^  int supplySensLength_;                 \/\/ 5.6$/;"	m	class:defiPin
supplySensLength_	include/defiPinCap.hpp	/^  int supplySensLength_;                 \/\/ 5.6$/;"	m	class:defiPin
supplySens_	def/defiPinCap.hpp	/^  char* supplySens_;                     \/\/ 5.6$/;"	m	class:defiPin
supplySens_	include/defiPinCap.hpp	/^  char* supplySens_;                     \/\/ 5.6$/;"	m	class:defiPin
supplySensitivity	def/defiPinCap.cpp	/^const char* defiPin::supplySensitivity() const {$/;"	f	class:defiPin
synthesized_	def/defiNet.hpp	/^  char* synthesized_;     \/\/ synthesized flags for pins$/;"	m	class:defiSubnet
synthesized_	def/defiNet.hpp	/^  char* synthesized_;   \/\/ synthesized flags for pins$/;"	m	class:defiNet
synthesized_	include/defiNet.hpp	/^  char* synthesized_;     \/\/ synthesized flags for pins$/;"	m	class:defiSubnet
synthesized_	include/defiNet.hpp	/^  char* synthesized_;   \/\/ synthesized flags for pins$/;"	m	class:defiNet
td_macro_option	def/def.y	/^td_macro_option: K_FROMPIN {defData->dumb_mode = 1; defData->no_num = 1;} T_STRING K_TOPIN$/;"	l
tech_name	def/def.y	/^tech_name: K_TECH { defData->dumb_mode = 1; defData->no_num = 1; } T_STRING ';'$/;"	l
technologyCB	defwrite/defwriteCbs.cpp	/^int technologyCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
testDebugPrint	defrw/defrw.cpp	/^static int testDebugPrint = 0;  \/\/ test for ccr1488696$/;"	v	file:
thruInst	def/defiTimingDisable.cpp	/^const char* defiTimingDisable::thruInst() const {$/;"	f	class:defiTimingDisable
thruPin	def/defiTimingDisable.cpp	/^const char* defiTimingDisable::thruPin() const {$/;"	f	class:defiTimingDisable
timingdisables_end	def/def.y	/^timingdisables_end: K_END K_TIMINGDISABLES$/;"	l
timingdisables_rule	def/def.y	/^timingdisables_rule: '-' K_FROMPIN { defData->dumb_mode = 2; defData->no_num = 2;  } T_STRING$/;"	l
timingdisables_rules	def/def.y	/^timingdisables_rules: \/\/ empty $/;"	l
timingdisables_section	def/def.y	/^timingdisables_section: timingdisables_start timingdisables_rules$/;"	l
timingdisables_start	def/def.y	/^timingdisables_start: K_TIMINGDISABLES NUMBER ';'$/;"	l
tk	def/defrData.hpp	/^        defTOKEN *tk;$/;"	m	union:__anon12
tk	include/defrData.hpp	/^        defTOKEN *tk;$/;"	m	union:__anon6
tname	defdiff/diffDefRW.cpp	/^int tname(defrCallbackType_e c, const char* string, defiUserData ud) {$/;"	f
tname	defrw/defrw.cpp	/^int tname(defrCallbackType_e c, const char* string, defiUserData ud) {$/;"	f
to	def/defiIOTiming.cpp	/^const char* defiIOTiming::to() const {$/;"	f	class:defiIOTiming
toInst	def/defiTimingDisable.cpp	/^const char* defiTimingDisable::toInst() const {$/;"	f	class:defiTimingDisable
toInstLength_	def/defiTimingDisable.hpp	/^  int toInstLength_;$/;"	m	class:defiTimingDisable
toInstLength_	include/defiTimingDisable.hpp	/^  int toInstLength_;$/;"	m	class:defiTimingDisable
toInst_	def/defiAssertion.cpp	/^  char* toInst_;$/;"	m	struct:defiAssertPath	file:
toInst_	def/defiTimingDisable.hpp	/^  char* toInst_;$/;"	m	class:defiTimingDisable
toInst_	include/defiTimingDisable.hpp	/^  char* toInst_;$/;"	m	class:defiTimingDisable
toLength_	def/defiIOTiming.hpp	/^  int toLength_;$/;"	m	class:defiIOTiming
toLength_	include/defiIOTiming.hpp	/^  int toLength_;$/;"	m	class:defiIOTiming
toPin	def/defiTimingDisable.cpp	/^const char* defiTimingDisable::toPin() const {$/;"	f	class:defiTimingDisable
toPinLength_	def/defiTimingDisable.hpp	/^  int toPinLength_;$/;"	m	class:defiTimingDisable
toPinLength_	include/defiTimingDisable.hpp	/^  int toPinLength_;$/;"	m	class:defiTimingDisable
toPin_	def/defiAssertion.cpp	/^  char* toPin_;$/;"	m	struct:defiAssertPath	file:
toPin_	def/defiTimingDisable.hpp	/^  char* toPin_;$/;"	m	class:defiTimingDisable
toPin_	include/defiTimingDisable.hpp	/^  char* toPin_;$/;"	m	class:defiTimingDisable
to_	def/defiIOTiming.hpp	/^  char* to_;$/;"	m	class:defiIOTiming
to_	include/defiIOTiming.hpp	/^  char* to_;$/;"	m	class:defiIOTiming
topHalo_	def/defiComponent.hpp	/^  int topHalo_;$/;"	m	class:defiComponent
topHalo_	include/defiComponent.hpp	/^  int topHalo_;$/;"	m	class:defiComponent
topLayerLength_	def/defiVia.hpp	/^  int   topLayerLength_;    \/\/ 5.6$/;"	m	class:defiVia
topLayerLength_	include/defiVia.hpp	/^  int   topLayerLength_;    \/\/ 5.6$/;"	m	class:defiVia
topLayer_	def/defiVia.hpp	/^  char* topLayer_;          \/\/ 5.6$/;"	m	class:defiVia
topLayer_	include/defiVia.hpp	/^  char* topLayer_;          \/\/ 5.6$/;"	m	class:defiVia
topMaskNum	def/defiNet.cpp	/^const int defiNet::topMaskNum(int index) const {$/;"	f	class:defiNet
totalDefMsgLimit	def/defrSettings.hpp	/^    int  totalDefMsgLimit; \/\/ to save the user set total msg limit to output$/;"	m	class:defrSettings
totalDefMsgLimit	include/defrSettings.hpp	/^    int  totalDefMsgLimit; \/\/ to save the user set total msg limit to output$/;"	m	class:defrSettings
trackCB	defwrite/defwriteCbs.cpp	/^int trackCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
trackWarnings	def/defrData.hpp	/^    int  trackWarnings; $/;"	m	class:defrData
trackWarnings	include/defrData.hpp	/^    int  trackWarnings; $/;"	m	class:defrData
track_layer	def/def.y	/^track_layer: T_STRING$/;"	l
track_layer_statement	def/def.y	/^track_layer_statement: \/\/ empty $/;"	l
track_layers	def/def.y	/^track_layers: \/\/ empty $/;"	l
track_mask_statement	def/def.y	/^track_mask_statement: \/\/ empty $/;"	l
track_opts	def/def.y	/^track_opts: track_mask_statement track_layer_statement$/;"	l
track_start	def/def.y	/^track_start: K_TRACKS track_type$/;"	l
track_type	def/def.y	/^track_type: K_X$/;"	l
tracks_rule	def/def.y	/^tracks_rule: track_start NUMBER$/;"	l
turnoff	def/def.y	/^turnoff: \/\/ empty $/;"	l
turnoff_hold	def/def.y	/^turnoff_hold: \/\/ empty $/;"	l
turnoff_setup	def/def.y	/^turnoff_setup: \/\/ empty $/;"	l
type	def/defiRegion.cpp	/^const char* defiRegion::type() const {$/;"	f	class:defiRegion
typeToString	def/defrReader.cpp	/^typeToString(defrCallbackType_e num)$/;"	f
type_	def/defiNet.hpp	/^  char*      type_;$/;"	m	class:defiWire
type_	def/defiPartition.hpp	/^  char type_;        \/\/ 'L'-clock   'I'-IO  'C'-comp$/;"	m	class:defiPartition
type_	def/defiRegion.hpp	/^  char* type_;$/;"	m	class:defiRegion
type_	include/defiNet.hpp	/^  char*      type_;$/;"	m	class:defiWire
type_	include/defiPartition.hpp	/^  char type_;        \/\/ 'L'-clock   'I'-IO  'C'-comp$/;"	m	class:defiPartition
type_	include/defiRegion.hpp	/^  char* type_;$/;"	m	class:defiRegion
types_	def/defiComponent.hpp	/^  char*   types_;$/;"	m	class:defiComponent
types_	def/defiNonDefault.hpp	/^  char*   types_;$/;"	m	class:defiNonDefault
types_	include/defiComponent.hpp	/^  char*   types_;$/;"	m	class:defiComponent
types_	include/defiNonDefault.hpp	/^  char*   types_;$/;"	m	class:defiNonDefault
uc_array	def/def_keywords.cpp	/^defrData::uc_array(char *source, char *dest)$/;"	f	class:defrData
uc_token	def/defrData.hpp	/^    char*  uc_token;$/;"	m	class:defrData
uc_token	include/defrData.hpp	/^    char*  uc_token;$/;"	m	class:defrData
unUsedCB	defrw/defrw.cpp	/^int unUsedCB(defrCallbackType_e, void*, defiUserData) {$/;"	f
units	def/def.y	/^units: K_UNITS K_DISTANCE K_MICRONS NUMBER ';'$/;"	l
units	defdiff/diffDefRW.cpp	/^int units(defrCallbackType_e c, double d, defiUserData ud) {$/;"	f
units	defrw/defrw.cpp	/^int units(defrCallbackType_e c, double d, defiUserData ud) {$/;"	f
unitsCB	defwrite/defwriteCbs.cpp	/^int unitsCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
unitsWarnings	def/defrData.hpp	/^    int  unitsWarnings; $/;"	m	class:defrData
unitsWarnings	include/defrData.hpp	/^    int  unitsWarnings; $/;"	m	class:defrData
unsetSum	def/defiAssertion.cpp	/^void defiAssertion::unsetSum() {$/;"	f	class:defiAssertion
upperCase	cdef/xdefiDebug.cpp	/^const char* upperCase (const char*  c) {$/;"	f
upperCase	def/defiDebug.cpp	/^const char* upperCase(const char* str, defrData *defData) {$/;"	f
upperCase	def/defrData.cpp	/^defrData::upperCase(const char* str) $/;"	f	class:defrData
ur	def/defiDefs.hpp	/^    defPOINT ll,ur;$/;"	m	struct:defrect
ur	include/defiDefs.hpp	/^    defPOINT ll,ur;$/;"	m	struct:defrect
use	def/defiNet.cpp	/^const char* defiNet::use() const {$/;"	f	class:defiNet
use	def/defiPinCap.cpp	/^const char* defiPin::use() const {$/;"	f	class:defiPin
useLength_	def/defiPinCap.hpp	/^  int useLength_;        \/\/ allocated size of length$/;"	m	class:defiPin
useLength_	include/defiPinCap.hpp	/^  int useLength_;        \/\/ allocated size of length$/;"	m	class:defiPin
use_	def/defiNet.hpp	/^  char* use_;$/;"	m	class:defiNet
use_	def/defiPinCap.hpp	/^  char* use_;$/;"	m	class:defiPin
use_	include/defiNet.hpp	/^  char* use_;$/;"	m	class:defiNet
use_	include/defiPinCap.hpp	/^  char* use_;$/;"	m	class:defiPin
use_type	def/def.y	/^use_type: K_SIGNAL$/;"	l
userData	defdiff/diffDefRW.cpp	/^void  *userData;$/;"	v
userData	defrw/defrw.cpp	/^void* userData;$/;"	v
userData	defwrite/defwriteCbs.cpp	/^int   userData;$/;"	v
validateMaskInput	def/defrData.cpp	/^defrData::validateMaskInput(int input, int warningIndex, int getWarningsIndex) $/;"	f	class:defrData
validateMaskShiftInput	def/defrData.cpp	/^defrData::validateMaskShiftInput(const char* shiftMask, int warningIndex, int getWarningsIndex) $/;"	f	class:defrData
values_	def/defiComponent.hpp	/^  char**  values_;$/;"	m	class:defiComponent
values_	def/defiNonDefault.hpp	/^  char**  values_;$/;"	m	class:defiNonDefault
values_	include/defiComponent.hpp	/^  char**  values_;$/;"	m	class:defiComponent
values_	include/defiNonDefault.hpp	/^  char**  values_;$/;"	m	class:defiNonDefault
variableFallMax	def/defiIOTiming.cpp	/^double defiIOTiming::variableFallMax() const {$/;"	f	class:defiIOTiming
variableFallMax_	def/defiIOTiming.hpp	/^  double variableFallMax_;$/;"	m	class:defiIOTiming
variableFallMax_	include/defiIOTiming.hpp	/^  double variableFallMax_;$/;"	m	class:defiIOTiming
variableFallMin	def/defiIOTiming.cpp	/^double defiIOTiming::variableFallMin() const {$/;"	f	class:defiIOTiming
variableFallMin_	def/defiIOTiming.hpp	/^  double variableFallMin_;$/;"	m	class:defiIOTiming
variableFallMin_	include/defiIOTiming.hpp	/^  double variableFallMin_;$/;"	m	class:defiIOTiming
variableRiseMax	def/defiIOTiming.cpp	/^double defiIOTiming::variableRiseMax() const {$/;"	f	class:defiIOTiming
variableRiseMax_	def/defiIOTiming.hpp	/^  double variableRiseMax_;$/;"	m	class:defiIOTiming
variableRiseMax_	include/defiIOTiming.hpp	/^  double variableRiseMax_;$/;"	m	class:defiIOTiming
variableRiseMin	def/defiIOTiming.cpp	/^double defiIOTiming::variableRiseMin() const {$/;"	f	class:defiIOTiming
variableRiseMin_	def/defiIOTiming.hpp	/^  double variableRiseMin_;$/;"	m	class:defiIOTiming
variableRiseMin_	include/defiIOTiming.hpp	/^  double variableRiseMin_;$/;"	m	class:defiIOTiming
vers	defdiff/diffDefRW.cpp	/^int vers(defrCallbackType_e c, double d, defiUserData ud) {$/;"	f
vers	defrw/defrw.cpp	/^int vers(defrCallbackType_e c, double d, defiUserData ud) {$/;"	f
versStr	defrw/defrw.cpp	/^int versStr(defrCallbackType_e c, const char* versionName, defiUserData ud) {$/;"	f
versionCB	defwrite/defwriteCbs.cpp	/^int versionCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
versionWarnings	def/defrData.hpp	/^    int  versionWarnings; $/;"	m	class:defrData
versionWarnings	include/defrData.hpp	/^    int  versionWarnings; $/;"	m	class:defrData
version_stmt	def/def.y	/^version_stmt:  \/\/ empty $/;"	l
via	def/def.y	/^via: K_VIAS NUMBER ';' $/;"	l
viaBottomMask	def/defiFill.cpp	/^int defiFill::viaBottomMask() const {$/;"	f	class:defiFill
viaBottomMask	def/defiPinCap.cpp	/^int defiPin::viaBottomMask(int index) const {$/;"	f	class:defiPin
viaBottomMask	def/defiPinCap.cpp	/^int defiPinPort::viaBottomMask(int index) const {$/;"	f	class:defiPinPort
viaCB	defwrite/defwriteCbs.cpp	/^int viaCB(defwCallbackType_e c, defiUserData ud) {$/;"	f
viaCutMask	def/defiFill.cpp	/^int defiFill::viaCutMask() const {$/;"	f	class:defiFill
viaCutMask	def/defiPinCap.cpp	/^int defiPin::viaCutMask(int index) const {$/;"	f	class:defiPin
viaCutMask	def/defiPinCap.cpp	/^int defiPinPort::viaCutMask(int index) const {$/;"	f	class:defiPinPort
viaMask_	def/defiPinCap.hpp	/^  int    *viaMask_;$/;"	m	class:defiPinPort
viaMask_	def/defiPinCap.hpp	/^  int *viaMask_;                    \/\/ 5.8$/;"	m	class:defiPin
viaMask_	include/defiPinCap.hpp	/^  int    *viaMask_;$/;"	m	class:defiPinPort
viaMask_	include/defiPinCap.hpp	/^  int *viaMask_;                    \/\/ 5.8$/;"	m	class:defiPin
viaMasks_	def/defiNet.hpp	/^  int*  viaMasks_;$/;"	m	class:defiNet
viaMasks_	include/defiNet.hpp	/^  int*  viaMasks_;$/;"	m	class:defiNet
viaName	def/defiFill.cpp	/^const char* defiFill::viaName() const {$/;"	f	class:defiFill
viaName	def/defiNet.cpp	/^const char* defiNet::viaName(int index) const {$/;"	f	class:defiNet
viaName	def/defiNonDefault.cpp	/^const char* defiNonDefault::viaName(int index) const {$/;"	f	class:defiNonDefault
viaName	def/defiPinCap.cpp	/^const char* defiPin::viaName(int index) const {$/;"	f	class:defiPin
viaName	def/defiPinCap.cpp	/^const char* defiPinPort::viaName(int index) const {$/;"	f	class:defiPinPort
viaNameLength_	def/defiFill.hpp	/^  int   viaNameLength_;             \/\/ 5.7$/;"	m	class:defiFill
viaNameLength_	include/defiFill.hpp	/^  int   viaNameLength_;             \/\/ 5.7$/;"	m	class:defiFill
viaName_	def/defiFill.hpp	/^  char* viaName_;                   \/\/ 5.7$/;"	m	class:defiFill
viaName_	include/defiFill.hpp	/^  char* viaName_;                   \/\/ 5.7$/;"	m	class:defiFill
viaNames_	def/defiNet.hpp	/^  char** viaNames_;                   $/;"	m	class:defiNet
viaNames_	def/defiNonDefault.hpp	/^  char**  viaNames_;$/;"	m	class:defiNonDefault
viaNames_	def/defiPinCap.hpp	/^  char** viaNames_;                 \/\/ 5.7$/;"	m	class:defiPin
viaNames_	def/defiPinCap.hpp	/^  char** viaNames_;$/;"	m	class:defiPinPort
viaNames_	include/defiNet.hpp	/^  char** viaNames_;                   $/;"	m	class:defiNet
viaNames_	include/defiNonDefault.hpp	/^  char**  viaNames_;$/;"	m	class:defiNonDefault
viaNames_	include/defiPinCap.hpp	/^  char** viaNames_;                 \/\/ 5.7$/;"	m	class:defiPin
viaNames_	include/defiPinCap.hpp	/^  char** viaNames_;$/;"	m	class:defiPinPort
viaOpc_	def/defiFill.hpp	/^  int   viaOpc_;                    \/\/ 5.7$/;"	m	class:defiFill
viaOpc_	include/defiFill.hpp	/^  int   viaOpc_;                    \/\/ 5.7$/;"	m	class:defiFill
viaOrient	def/defiNet.cpp	/^const int defiNet::viaOrient(int index) const {$/;"	f	class:defiNet
viaOrientStr	def/defiNet.cpp	/^const char* defiNet::viaOrientStr(int index) const  {$/;"	f	class:defiNet
viaOrients_	def/defiNet.hpp	/^  int*  viaOrients_;$/;"	m	class:defiNet
viaOrients_	include/defiNet.hpp	/^  int*  viaOrients_;$/;"	m	class:defiNet
viaPtX	def/defiPinCap.cpp	/^int defiPin::viaPtX(int index) const {$/;"	f	class:defiPin
viaPtX	def/defiPinCap.cpp	/^int defiPinPort::viaPtX(int index) const {$/;"	f	class:defiPinPort
viaPtY	def/defiPinCap.cpp	/^int defiPin::viaPtY(int index) const {$/;"	f	class:defiPin
viaPtY	def/defiPinCap.cpp	/^int defiPinPort::viaPtY(int index) const {$/;"	f	class:defiPinPort
viaPts_	def/defiFill.hpp	/^  struct defiPoints** viaPts_;      \/\/ 5.7$/;"	m	class:defiFill	typeref:struct:defiFill::defiPoints
viaPts_	def/defiNet.hpp	/^  struct defiPoints** viaPts_;      \/\/ 5.8                  $/;"	m	class:defiNet	typeref:struct:defiNet::defiPoints
viaPts_	include/defiFill.hpp	/^  struct defiPoints** viaPts_;      \/\/ 5.7$/;"	m	class:defiFill	typeref:struct:defiFill::defiPoints
viaPts_	include/defiNet.hpp	/^  struct defiPoints** viaPts_;      \/\/ 5.8                  $/;"	m	class:defiNet	typeref:struct:defiNet::defiPoints
viaRouteStatus	def/defiNet.cpp	/^const char* defiNet::viaRouteStatus(int index) const {$/;"	f	class:defiNet
viaRouteStatusShieldName	def/defiNet.cpp	/^const char* defiNet::viaRouteStatusShieldName(int index) const {$/;"	f	class:defiNet
viaRouteStatusShieldNames_	def/defiNet.hpp	/^  char** viaRouteStatusShieldNames_;$/;"	m	class:defiNet
viaRouteStatusShieldNames_	include/defiNet.hpp	/^  char** viaRouteStatusShieldNames_;$/;"	m	class:defiNet
viaRouteStatus_	def/defiNet.hpp	/^  char** viaRouteStatus_;$/;"	m	class:defiNet
viaRouteStatus_	include/defiNet.hpp	/^  char** viaRouteStatus_;$/;"	m	class:defiNet
viaRule	def/defiVia.cpp	/^void defiVia::viaRule(char** viaRuleName, int* xSize, int* ySize,$/;"	f	class:defiVia
viaRule	def/defrData.hpp	/^    int  viaRule; \/\/ keep track the viarule has called first$/;"	m	class:defrData
viaRule	include/defrData.hpp	/^    int  viaRule; \/\/ keep track the viarule has called first$/;"	m	class:defrData
viaRuleLength_	def/defiVia.hpp	/^  int   viaRuleLength_;     \/\/ 5.6$/;"	m	class:defiVia
viaRuleLength_	include/defiVia.hpp	/^  int   viaRuleLength_;     \/\/ 5.6$/;"	m	class:defiVia
viaRuleName	def/defiNonDefault.cpp	/^const char* defiNonDefault::viaRuleName(int index) const {$/;"	f	class:defiNonDefault
viaRuleNames_	def/defiNonDefault.hpp	/^  char**  viaRuleNames_;$/;"	m	class:defiNonDefault
viaRuleNames_	include/defiNonDefault.hpp	/^  char**  viaRuleNames_;$/;"	m	class:defiNonDefault
viaRule_	def/defiVia.hpp	/^  char* viaRule_;           \/\/ 5.6$/;"	m	class:defiVia
viaRule_	include/defiVia.hpp	/^  char* viaRule_;           \/\/ 5.6$/;"	m	class:defiVia
viaRulesAllocated_	def/defiNonDefault.hpp	/^  int     viaRulesAllocated_;$/;"	m	class:defiNonDefault
viaRulesAllocated_	include/defiNonDefault.hpp	/^  int     viaRulesAllocated_;$/;"	m	class:defiNonDefault
viaShapeType	def/defiNet.cpp	/^const char* defiNet::viaShapeType(int index) const {$/;"	f	class:defiNet
viaShapeTypes_	def/defiNet.hpp	/^  char** viaShapeTypes_;$/;"	m	class:defiNet
viaShapeTypes_	include/defiNet.hpp	/^  char** viaShapeTypes_;$/;"	m	class:defiNet
viaTopMask	def/defiFill.cpp	/^int defiFill::viaTopMask() const {$/;"	f	class:defiFill
viaTopMask	def/defiPinCap.cpp	/^int defiPin::viaTopMask(int index) const {$/;"	f	class:defiPin
viaTopMask	def/defiPinCap.cpp	/^int defiPinPort::viaTopMask(int index) const {$/;"	f	class:defiPinPort
viaWarnings	def/defrData.hpp	/^    int  viaWarnings; $/;"	m	class:defrData
viaWarnings	include/defrData.hpp	/^    int  viaWarnings; $/;"	m	class:defrData
viaX_	def/defiPinCap.hpp	/^  int    *viaX_;$/;"	m	class:defiPinPort
viaX_	def/defiPinCap.hpp	/^  int *viaX_;                       \/\/ 5.7$/;"	m	class:defiPin
viaX_	include/defiPinCap.hpp	/^  int    *viaX_;$/;"	m	class:defiPinPort
viaX_	include/defiPinCap.hpp	/^  int *viaX_;                       \/\/ 5.7$/;"	m	class:defiPin
viaY_	def/defiPinCap.hpp	/^  int    *viaY_;$/;"	m	class:defiPinPort
viaY_	def/defiPinCap.hpp	/^  int *viaY_;                       \/\/ 5.7$/;"	m	class:defiPin
viaY_	include/defiPinCap.hpp	/^  int    *viaY_;$/;"	m	class:defiPinPort
viaY_	include/defiPinCap.hpp	/^  int *viaY_;                       \/\/ 5.7$/;"	m	class:defiPin
via_declaration	def/def.y	/^via_declaration: '-' {defData->dumb_mode = 1;defData->no_num = 1; } T_STRING$/;"	l
via_declarations	def/def.y	/^via_declarations: \/\/ empty $/;"	l
via_end	def/def.y	/^via_end: K_END K_VIAS$/;"	l
via_section	def/def.y	/^via_section: via via_declarations via_end$/;"	l
viasAllocated_	def/defiNonDefault.hpp	/^  int     viasAllocated_;$/;"	m	class:defiNonDefault
viasAllocated_	def/defiPinCap.hpp	/^  int    viasAllocated_;$/;"	m	class:defiPinPort
viasAllocated_	def/defiPinCap.hpp	/^  int viasAllocated_;               \/\/ 5.7$/;"	m	class:defiPin
viasAllocated_	include/defiNonDefault.hpp	/^  int     viasAllocated_;$/;"	m	class:defiNonDefault
viasAllocated_	include/defiPinCap.hpp	/^  int    viasAllocated_;$/;"	m	class:defiPinPort
viasAllocated_	include/defiPinCap.hpp	/^  int viasAllocated_;               \/\/ 5.7$/;"	m	class:defiPin
virtual_is_keyword	def/defrData.hpp	/^    int  virtual_is_keyword; $/;"	m	class:defrData
virtual_is_keyword	include/defrData.hpp	/^    int  virtual_is_keyword; $/;"	m	class:defrData
virtual_pt	def/def.y	/^virtual_pt :$/;"	l
virtual_statement	def/def.y	/^virtual_statement :$/;"	l
voltage	def/defiNet.cpp	/^double defiNet::voltage() const {$/;"	f	class:defiNet
voltage_	def/defiNet.hpp	/^  double voltage_;$/;"	m	class:defiNet
voltage_	include/defiNet.hpp	/^  double voltage_;$/;"	m	class:defiNet
vpin	def/defiNet.cpp	/^const defiVpin* defiNet::vpin(int index) const {$/;"	f	class:defiNet
vpin	def/defiNet.cpp	/^defiVpin* defiNet::vpin(int index) {$/;"	f	class:defiNet
vpin_begin	def/def.y	/^vpin_begin: '+' K_VPIN {defData->dumb_mode = 1; defData->no_num = 1;} T_STRING$/;"	l
vpin_layer_opt	def/def.y	/^vpin_layer_opt: \/\/ empty $/;"	l
vpin_options	def/def.y	/^vpin_options: \/\/ empty $/;"	l
vpin_status	def/def.y	/^vpin_status: K_PLACED $/;"	l
vpin_stmt	def/def.y	/^vpin_stmt: vpin_begin vpin_layer_opt pt pt $/;"	l
vpinsAllocated_	def/defiNet.hpp	/^  int vpinsAllocated_;$/;"	m	class:defiNet
vpinsAllocated_	include/defiNet.hpp	/^  int vpinsAllocated_;$/;"	m	class:defiNet
vpins_	def/defiNet.hpp	/^  defiVpin** vpins_;$/;"	m	class:defiNet
vpins_	include/defiNet.hpp	/^  defiVpin** vpins_;$/;"	m	class:defiNet
warningMsg	def/defrData.hpp	/^    char*  warningMsg; $/;"	m	class:defrData
warningMsg	include/defrData.hpp	/^    char*  warningMsg; $/;"	m	class:defrData
wdist_	def/defiNet.hpp	/^  double* wdist_;$/;"	m	class:defiNet
wdist_	include/defiNet.hpp	/^  double* wdist_;$/;"	m	class:defiNet
weight	def/def.y	/^weight: '+' K_WEIGHT NUMBER $/;"	l
weight	def/defiComponent.cpp	/^int defiComponent::weight() const {$/;"	f	class:defiComponent
weight	def/defiNet.cpp	/^int defiNet::weight() const {$/;"	f	class:defiNet
weight_	def/defiComponent.hpp	/^  int weight_;$/;"	m	class:defiComponent
weight_	def/defiNet.hpp	/^  int weight_;          \/\/ net weight$/;"	m	class:defiNet
weight_	include/defiComponent.hpp	/^  int weight_;$/;"	m	class:defiComponent
weight_	include/defiNet.hpp	/^  int weight_;          \/\/ net weight$/;"	m	class:defiNet
what	def/defiDefs.hpp	/^    int what;$/;"	m	struct:deftoken
what	include/defiDefs.hpp	/^    int what;$/;"	m	struct:deftoken
width	def/def.y	/^width: NUMBER$/;"	l
widthRule	def/defiNet.cpp	/^void defiNet::widthRule(int index, char** layer, double* dist) const {$/;"	f	class:defiNet
width_	def/defiBlockage.hpp	/^  int    width_;$/;"	m	class:defiBlockage
width_	def/defiNonDefault.hpp	/^  double* width_;$/;"	m	class:defiNonDefault
width_	include/defiBlockage.hpp	/^  int    width_;$/;"	m	class:defiBlockage
width_	include/defiNonDefault.hpp	/^  double* width_;$/;"	m	class:defiNonDefault
widthsAllocated_	def/defiNet.hpp	/^  int widthsAllocated_;$/;"	m	class:defiNet
widthsAllocated_	include/defiNet.hpp	/^  int widthsAllocated_;$/;"	m	class:defiNet
wire	def/defiNet.cpp	/^const defiWire* defiNet::wire(int index) const {$/;"	f	class:defiNet
wire	def/defiNet.cpp	/^const defiWire* defiSubnet::wire(int index) const {$/;"	f	class:defiSubnet
wire	def/defiNet.cpp	/^defiWire* defiNet::wire(int index) {$/;"	f	class:defiNet
wire	def/defiNet.cpp	/^defiWire* defiSubnet::wire(int index) {$/;"	f	class:defiSubnet
wireExt_	def/defiNonDefault.hpp	/^  double* wireExt_;$/;"	m	class:defiNonDefault
wireExt_	include/defiNonDefault.hpp	/^  double* wireExt_;$/;"	m	class:defiNonDefault
wireShieldName_	def/defiNet.hpp	/^  char*      wireShieldName_;    \/\/ It only set from specialnet SHIELD, 5.4$/;"	m	class:defiWire
wireShieldName_	include/defiNet.hpp	/^  char*      wireShieldName_;    \/\/ It only set from specialnet SHIELD, 5.4$/;"	m	class:defiWire
wireShieldNetName	def/defiNet.cpp	/^const char* defiWire::wireShieldNetName() const {$/;"	f	class:defiWire
wireType	def/defiNet.cpp	/^const char* defiWire::wireType() const {$/;"	f	class:defiWire
wiredlogic_rule	def/def.y	/^wiredlogic_rule: '-' K_WIREDLOGIC { defData->dumb_mode = 1; defData->no_num = 1; } T_STRING$/;"	l
wiresAllocated_	def/defiNet.hpp	/^  int wiresAllocated_;    \/\/ number of wires allocated in the subnet$/;"	m	class:defiSubnet
wiresAllocated_	def/defiNet.hpp	/^  int wiresAllocated_;   \/\/ allocated size of wire paths array$/;"	m	class:defiNet
wiresAllocated_	include/defiNet.hpp	/^  int wiresAllocated_;    \/\/ number of wires allocated in the subnet$/;"	m	class:defiSubnet
wiresAllocated_	include/defiNet.hpp	/^  int wiresAllocated_;   \/\/ allocated size of wire paths array$/;"	m	class:defiNet
wires_	def/defiNet.hpp	/^  defiWire** wires_;      \/\/ this replace the paths$/;"	m	class:defiSubnet
wires_	def/defiNet.hpp	/^  defiWire** wires_;     \/\/ this replace the paths$/;"	m	class:defiNet
wires_	include/defiNet.hpp	/^  defiWire** wires_;      \/\/ this replace the paths$/;"	m	class:defiSubnet
wires_	include/defiNet.hpp	/^  defiWire** wires_;     \/\/ this replace the paths$/;"	m	class:defiNet
wlayers_	def/defiNet.hpp	/^  char** wlayers_;$/;"	m	class:defiNet
wlayers_	include/defiNet.hpp	/^  char** wlayers_;$/;"	m	class:defiNet
x	cdef/defiTypedefs.h	/^  int x;$/;"	m	struct:defiPnt
x	cdef/defiTypedefs.h	/^  int* x;$/;"	m	struct:defiPoints
x	def/defiDefs.hpp	/^    int x;$/;"	m	struct:defpoint
x	def/defiMisc.hpp	/^  int* x;$/;"	m	struct:defiPoints
x	def/defiPath.hpp	/^  int x;$/;"	m	struct:defiPnt
x	def/defiRowTrack.cpp	/^double defiRow::x() const {$/;"	f	class:defiRow
x	def/defiRowTrack.cpp	/^double defiTrack::x() const {$/;"	f	class:defiTrack
x	def/defiRowTrack.cpp	/^int defiGcellGrid::x() const {$/;"	f	class:defiGcellGrid
x	include/defiDefs.hpp	/^    int x;$/;"	m	struct:defpoint
x	include/defiMisc.hpp	/^  int* x;$/;"	m	struct:defiPoints
x	include/defiPath.hpp	/^  int x;$/;"	m	struct:defiPnt
x	include/defiTypedefs.h	/^  int x;$/;"	m	struct:defiPnt
x	include/defiTypedefs.h	/^  int* x;$/;"	m	struct:defiPoints
xBotEnc_	def/defiVia.hpp	/^  int   xBotEnc_;           \/\/ 5.6$/;"	m	class:defiVia
xBotEnc_	include/defiVia.hpp	/^  int   xBotEnc_;           \/\/ 5.6$/;"	m	class:defiVia
xBotOffset_	def/defiVia.hpp	/^  int   xBotOffset_;        \/\/ 5.6$/;"	m	class:defiVia
xBotOffset_	include/defiVia.hpp	/^  int   xBotOffset_;        \/\/ 5.6$/;"	m	class:defiVia
xCutSpacing_	def/defiVia.hpp	/^  int   xCutSpacing_;       \/\/ 5.6$/;"	m	class:defiVia
xCutSpacing_	include/defiVia.hpp	/^  int   xCutSpacing_;       \/\/ 5.6$/;"	m	class:defiVia
xLoc	def/defiNet.cpp	/^int defiVpin::xLoc() const {$/;"	f	class:defiVpin
xLoc_	def/defiNet.hpp	/^  int xLoc_;$/;"	m	class:defiVpin
xLoc_	include/defiNet.hpp	/^  int xLoc_;$/;"	m	class:defiVpin
xNum	def/defiRowTrack.cpp	/^double defiRow::xNum() const {$/;"	f	class:defiRow
xNum	def/defiRowTrack.cpp	/^double defiTrack::xNum() const {$/;"	f	class:defiTrack
xNum	def/defiRowTrack.cpp	/^int defiGcellGrid::xNum() const {$/;"	f	class:defiGcellGrid
xNum_	def/defiRowTrack.hpp	/^  double xNum_;$/;"	m	class:defiRow
xNum_	def/defiRowTrack.hpp	/^  double xNum_;$/;"	m	class:defiTrack
xNum_	def/defiRowTrack.hpp	/^  int xNum_;$/;"	m	class:defiGcellGrid
xNum_	include/defiRowTrack.hpp	/^  double xNum_;$/;"	m	class:defiRow
xNum_	include/defiRowTrack.hpp	/^  double xNum_;$/;"	m	class:defiTrack
xNum_	include/defiRowTrack.hpp	/^  int xNum_;$/;"	m	class:defiGcellGrid
xOffset_	def/defiVia.hpp	/^  int   xOffset_;           \/\/ 5.6$/;"	m	class:defiVia
xOffset_	include/defiVia.hpp	/^  int   xOffset_;           \/\/ 5.6$/;"	m	class:defiVia
xSize_	def/defiVia.hpp	/^  int xSize_;               \/\/ 5.6$/;"	m	class:defiVia
xSize_	include/defiVia.hpp	/^  int xSize_;               \/\/ 5.6$/;"	m	class:defiVia
xStep	def/defiRowTrack.cpp	/^double defiGcellGrid::xStep() const {$/;"	f	class:defiGcellGrid
xStep	def/defiRowTrack.cpp	/^double defiRow::xStep() const {$/;"	f	class:defiRow
xStep	def/defiRowTrack.cpp	/^double defiTrack::xStep() const {$/;"	f	class:defiTrack
xStep	def/defrData.hpp	/^    double xStep;$/;"	m	class:defrData
xStep	include/defrData.hpp	/^    double xStep;$/;"	m	class:defrData
xStep_	def/defiRowTrack.hpp	/^  double xStep_;$/;"	m	class:defiGcellGrid
xStep_	def/defiRowTrack.hpp	/^  double xStep_;$/;"	m	class:defiRow
xStep_	def/defiRowTrack.hpp	/^  double xStep_;$/;"	m	class:defiTrack
xStep_	include/defiRowTrack.hpp	/^  double xStep_;$/;"	m	class:defiGcellGrid
xStep_	include/defiRowTrack.hpp	/^  double xStep_;$/;"	m	class:defiRow
xStep_	include/defiRowTrack.hpp	/^  double xStep_;$/;"	m	class:defiTrack
xTalk_	def/defiNet.hpp	/^  int xTalk_;$/;"	m	class:defiNet
xTalk_	include/defiNet.hpp	/^  int xTalk_;$/;"	m	class:defiNet
xTopEnc_	def/defiVia.hpp	/^  int   xTopEnc_;           \/\/ 5.6$/;"	m	class:defiVia
xTopEnc_	include/defiVia.hpp	/^  int   xTopEnc_;           \/\/ 5.6$/;"	m	class:defiVia
xTopOffset_	def/defiVia.hpp	/^  int   xTopOffset_;        \/\/ 5.6$/;"	m	class:defiVia
xTopOffset_	include/defiVia.hpp	/^  int   xTopOffset_;        \/\/ 5.6$/;"	m	class:defiVia
x_	def/defiComponent.hpp	/^  int x_, y_;           \/\/ placement loc$/;"	m	class:defiComponent
x_	def/defiMisc.hpp	/^  int* x_;$/;"	m	class:defiGeometries
x_	def/defiPinCap.hpp	/^  int    x_, y_;$/;"	m	class:defiPinPort
x_	def/defiPinCap.hpp	/^  int x_, y_;            \/\/ placement$/;"	m	class:defiPin
x_	def/defiRowTrack.hpp	/^  double x_;$/;"	m	class:defiRow
x_	def/defiRowTrack.hpp	/^  double x_;$/;"	m	class:defiTrack
x_	def/defiRowTrack.hpp	/^  int x_;$/;"	m	class:defiGcellGrid
x_	include/defiComponent.hpp	/^  int x_, y_;           \/\/ placement loc$/;"	m	class:defiComponent
x_	include/defiMisc.hpp	/^  int* x_;$/;"	m	class:defiGeometries
x_	include/defiPinCap.hpp	/^  int    x_, y_;$/;"	m	class:defiPinPort
x_	include/defiPinCap.hpp	/^  int x_, y_;            \/\/ placement$/;"	m	class:defiPin
x_	include/defiRowTrack.hpp	/^  double x_;$/;"	m	class:defiRow
x_	include/defiRowTrack.hpp	/^  double x_;$/;"	m	class:defiTrack
x_	include/defiRowTrack.hpp	/^  int x_;$/;"	m	class:defiGcellGrid
x_num	def/defiSite.cpp	/^double defiSite::x_num() const {$/;"	f	class:defiSite
x_num_	def/defiSite.hpp	/^  double x_num_, y_num_; $/;"	m	class:defiSite
x_num_	include/defiSite.hpp	/^  double x_num_, y_num_; $/;"	m	class:defiSite
x_orig	def/defiSite.cpp	/^double defiSite::x_orig() const {$/;"	f	class:defiSite
x_orig_	def/defiSite.hpp	/^  double x_orig_, y_orig_;  \/\/ Origin$/;"	m	class:defiSite
x_orig_	include/defiSite.hpp	/^  double x_orig_, y_orig_;  \/\/ Origin$/;"	m	class:defiSite
x_step	def/defiSite.cpp	/^double defiSite::x_step() const {$/;"	f	class:defiSite
x_step_	def/defiSite.hpp	/^  double x_step_, y_step_;  \/\/ Array step size.$/;"	m	class:defiSite
x_step_	include/defiSite.hpp	/^  double x_step_, y_step_;  \/\/ Array step size.$/;"	m	class:defiSite
xh	def/defiBlockage.cpp	/^int defiBlockage::xh(int index) const {$/;"	f	class:defiBlockage
xh	def/defiFill.cpp	/^int defiFill::xh(int index) const {$/;"	f	class:defiFill
xh	def/defiNet.cpp	/^int defiNet::xh(int index) const {$/;"	f	class:defiNet
xh	def/defiNet.cpp	/^int defiVpin::xh() const  {$/;"	f	class:defiVpin
xh	def/defiRegion.cpp	/^int defiRegion::xh(int index) const {$/;"	f	class:defiRegion
xh	def/defiSite.cpp	/^int defiBox::xh() const {$/;"	f	class:defiBox
xh	def/defiSlot.cpp	/^int defiSlot::xh(int index) const {$/;"	f	class:defiSlot
xh_	def/defiBlockage.hpp	/^  int*   xh_;$/;"	m	class:defiBlockage
xh_	def/defiFill.hpp	/^  int*  xh_;$/;"	m	class:defiFill
xh_	def/defiGroup.hpp	/^  int* xh_;$/;"	m	class:defiGroup
xh_	def/defiNet.hpp	/^  int xh_;$/;"	m	class:defiVpin
xh_	def/defiNet.hpp	/^  int* xh_;$/;"	m	class:defiNet
xh_	def/defiPinCap.hpp	/^  int    *xl_, *yl_, *xh_, *yh_;$/;"	m	class:defiPinPort
xh_	def/defiPinCap.hpp	/^  int *xl_, *yl_, *xh_, *yh_;       \/\/ 5.6, changed to arrays$/;"	m	class:defiPin
xh_	def/defiRegion.hpp	/^  int* xh_;$/;"	m	class:defiRegion
xh_	def/defiSite.hpp	/^  int xh_, yh_;$/;"	m	class:defiBox
xh_	def/defiSlot.hpp	/^  int*  xh_;$/;"	m	class:defiSlot
xh_	def/defiVia.hpp	/^  int* xh_;$/;"	m	class:defiVia
xh_	include/defiBlockage.hpp	/^  int*   xh_;$/;"	m	class:defiBlockage
xh_	include/defiFill.hpp	/^  int*  xh_;$/;"	m	class:defiFill
xh_	include/defiGroup.hpp	/^  int* xh_;$/;"	m	class:defiGroup
xh_	include/defiNet.hpp	/^  int xh_;$/;"	m	class:defiVpin
xh_	include/defiNet.hpp	/^  int* xh_;$/;"	m	class:defiNet
xh_	include/defiPinCap.hpp	/^  int    *xl_, *yl_, *xh_, *yh_;$/;"	m	class:defiPinPort
xh_	include/defiPinCap.hpp	/^  int *xl_, *yl_, *xh_, *yh_;       \/\/ 5.6, changed to arrays$/;"	m	class:defiPin
xh_	include/defiRegion.hpp	/^  int* xh_;$/;"	m	class:defiRegion
xh_	include/defiSite.hpp	/^  int xh_, yh_;$/;"	m	class:defiBox
xh_	include/defiSlot.hpp	/^  int*  xh_;$/;"	m	class:defiSlot
xh_	include/defiVia.hpp	/^  int* xh_;$/;"	m	class:defiVia
xl	def/defiBlockage.cpp	/^int defiBlockage::xl(int index) const {$/;"	f	class:defiBlockage
xl	def/defiFill.cpp	/^int defiFill::xl(int index) const {$/;"	f	class:defiFill
xl	def/defiNet.cpp	/^int defiNet::xl(int index) const {$/;"	f	class:defiNet
xl	def/defiNet.cpp	/^int defiVpin::xl() const  {$/;"	f	class:defiVpin
xl	def/defiRegion.cpp	/^int defiRegion::xl(int index) const {$/;"	f	class:defiRegion
xl	def/defiSite.cpp	/^int defiBox::xl() const {$/;"	f	class:defiBox
xl	def/defiSlot.cpp	/^int defiSlot::xl(int index) const {$/;"	f	class:defiSlot
xl_	def/defiBlockage.hpp	/^  int*   xl_;$/;"	m	class:defiBlockage
xl_	def/defiFill.hpp	/^  int*  xl_;$/;"	m	class:defiFill
xl_	def/defiGroup.hpp	/^  int* xl_;$/;"	m	class:defiGroup
xl_	def/defiNet.hpp	/^  int xl_;$/;"	m	class:defiVpin
xl_	def/defiNet.hpp	/^  int* xl_;$/;"	m	class:defiNet
xl_	def/defiPinCap.hpp	/^  int    *xl_, *yl_, *xh_, *yh_;$/;"	m	class:defiPinPort
xl_	def/defiPinCap.hpp	/^  int *xl_, *yl_, *xh_, *yh_;       \/\/ 5.6, changed to arrays$/;"	m	class:defiPin
xl_	def/defiRegion.hpp	/^  int* xl_;$/;"	m	class:defiRegion
xl_	def/defiSite.hpp	/^  int xl_, yl_;$/;"	m	class:defiBox
xl_	def/defiSlot.hpp	/^  int*  xl_;$/;"	m	class:defiSlot
xl_	def/defiVia.hpp	/^  int* xl_;$/;"	m	class:defiVia
xl_	include/defiBlockage.hpp	/^  int*   xl_;$/;"	m	class:defiBlockage
xl_	include/defiFill.hpp	/^  int*  xl_;$/;"	m	class:defiFill
xl_	include/defiGroup.hpp	/^  int* xl_;$/;"	m	class:defiGroup
xl_	include/defiNet.hpp	/^  int xl_;$/;"	m	class:defiVpin
xl_	include/defiNet.hpp	/^  int* xl_;$/;"	m	class:defiNet
xl_	include/defiPinCap.hpp	/^  int    *xl_, *yl_, *xh_, *yh_;$/;"	m	class:defiPinPort
xl_	include/defiPinCap.hpp	/^  int *xl_, *yl_, *xh_, *yh_;       \/\/ 5.6, changed to arrays$/;"	m	class:defiPin
xl_	include/defiRegion.hpp	/^  int* xl_;$/;"	m	class:defiRegion
xl_	include/defiSite.hpp	/^  int xl_, yl_;$/;"	m	class:defiBox
xl_	include/defiSlot.hpp	/^  int*  xl_;$/;"	m	class:defiSlot
xl_	include/defiVia.hpp	/^  int* xl_;$/;"	m	class:defiVia
y	cdef/defiTypedefs.h	/^  int y;$/;"	m	struct:defiPnt
y	cdef/defiTypedefs.h	/^  int* y;$/;"	m	struct:defiPoints
y	def/defiDefs.hpp	/^    int y;$/;"	m	struct:defpoint
y	def/defiMisc.hpp	/^  int* y;$/;"	m	struct:defiPoints
y	def/defiPath.hpp	/^  int y;$/;"	m	struct:defiPnt
y	def/defiRowTrack.cpp	/^double defiRow::y() const {$/;"	f	class:defiRow
y	include/defiDefs.hpp	/^    int y;$/;"	m	struct:defpoint
y	include/defiMisc.hpp	/^  int* y;$/;"	m	struct:defiPoints
y	include/defiPath.hpp	/^  int y;$/;"	m	struct:defiPnt
y	include/defiTypedefs.h	/^  int y;$/;"	m	struct:defiPnt
y	include/defiTypedefs.h	/^  int* y;$/;"	m	struct:defiPoints
yBotEnc_	def/defiVia.hpp	/^  int   yBotEnc_;           \/\/ 5.6$/;"	m	class:defiVia
yBotEnc_	include/defiVia.hpp	/^  int   yBotEnc_;           \/\/ 5.6$/;"	m	class:defiVia
yBotOffset_	def/defiVia.hpp	/^  int   yBotOffset_;        \/\/ 5.6$/;"	m	class:defiVia
yBotOffset_	include/defiVia.hpp	/^  int   yBotOffset_;        \/\/ 5.6$/;"	m	class:defiVia
yCutSpacing_	def/defiVia.hpp	/^  int   yCutSpacing_;       \/\/ 5.6$/;"	m	class:defiVia
yCutSpacing_	include/defiVia.hpp	/^  int   yCutSpacing_;       \/\/ 5.6$/;"	m	class:defiVia
yLoc	def/defiNet.cpp	/^int defiVpin::yLoc() const {$/;"	f	class:defiVpin
yLoc_	def/defiNet.hpp	/^  int yLoc_;$/;"	m	class:defiVpin
yLoc_	include/defiNet.hpp	/^  int yLoc_;$/;"	m	class:defiVpin
yNum	def/defiRowTrack.cpp	/^double defiRow::yNum() const {$/;"	f	class:defiRow
yNum_	def/defiRowTrack.hpp	/^  double yNum_;$/;"	m	class:defiRow
yNum_	include/defiRowTrack.hpp	/^  double yNum_;$/;"	m	class:defiRow
yOffset_	def/defiVia.hpp	/^  int   yOffset_;           \/\/ 5.6$/;"	m	class:defiVia
yOffset_	include/defiVia.hpp	/^  int   yOffset_;           \/\/ 5.6$/;"	m	class:defiVia
ySize_	def/defiVia.hpp	/^  int ySize_;               \/\/ 5.6$/;"	m	class:defiVia
ySize_	include/defiVia.hpp	/^  int ySize_;               \/\/ 5.6$/;"	m	class:defiVia
yStep	def/defiRowTrack.cpp	/^double defiRow::yStep() const {$/;"	f	class:defiRow
yStep	def/defrData.hpp	/^    double yStep;$/;"	m	class:defrData
yStep	include/defrData.hpp	/^    double yStep;$/;"	m	class:defrData
yStep_	def/defiRowTrack.hpp	/^  double yStep_;$/;"	m	class:defiRow
yStep_	include/defiRowTrack.hpp	/^  double yStep_;$/;"	m	class:defiRow
yTopEnc_	def/defiVia.hpp	/^  int   yTopEnc_;           \/\/ 5.6$/;"	m	class:defiVia
yTopEnc_	include/defiVia.hpp	/^  int   yTopEnc_;           \/\/ 5.6$/;"	m	class:defiVia
yTopOffset_	def/defiVia.hpp	/^  int   yTopOffset_;        \/\/ 5.6$/;"	m	class:defiVia
yTopOffset_	include/defiVia.hpp	/^  int   yTopOffset_;        \/\/ 5.6$/;"	m	class:defiVia
y_	def/defiComponent.hpp	/^  int x_, y_;           \/\/ placement loc$/;"	m	class:defiComponent
y_	def/defiMisc.hpp	/^  int* y_;$/;"	m	class:defiGeometries
y_	def/defiPinCap.hpp	/^  int    x_, y_;$/;"	m	class:defiPinPort
y_	def/defiPinCap.hpp	/^  int x_, y_;            \/\/ placement$/;"	m	class:defiPin
y_	def/defiRowTrack.hpp	/^  double y_;$/;"	m	class:defiRow
y_	include/defiComponent.hpp	/^  int x_, y_;           \/\/ placement loc$/;"	m	class:defiComponent
y_	include/defiMisc.hpp	/^  int* y_;$/;"	m	class:defiGeometries
y_	include/defiPinCap.hpp	/^  int    x_, y_;$/;"	m	class:defiPinPort
y_	include/defiPinCap.hpp	/^  int x_, y_;            \/\/ placement$/;"	m	class:defiPin
y_	include/defiRowTrack.hpp	/^  double y_;$/;"	m	class:defiRow
y_num	def/defiSite.cpp	/^double defiSite::y_num() const {$/;"	f	class:defiSite
y_num_	def/defiSite.hpp	/^  double x_num_, y_num_; $/;"	m	class:defiSite
y_num_	include/defiSite.hpp	/^  double x_num_, y_num_; $/;"	m	class:defiSite
y_orig	def/defiSite.cpp	/^double defiSite::y_orig() const {$/;"	f	class:defiSite
y_orig_	def/defiSite.hpp	/^  double x_orig_, y_orig_;  \/\/ Origin$/;"	m	class:defiSite
y_orig_	include/defiSite.hpp	/^  double x_orig_, y_orig_;  \/\/ Origin$/;"	m	class:defiSite
y_step	def/defiSite.cpp	/^double defiSite::y_step() const {$/;"	f	class:defiSite
y_step_	def/defiSite.hpp	/^  double x_step_, y_step_;  \/\/ Array step size.$/;"	m	class:defiSite
y_step_	include/defiSite.hpp	/^  double x_step_, y_step_;  \/\/ Array step size.$/;"	m	class:defiSite
yh	def/defiBlockage.cpp	/^int defiBlockage::yh(int index) const {$/;"	f	class:defiBlockage
yh	def/defiFill.cpp	/^int defiFill::yh(int index) const {$/;"	f	class:defiFill
yh	def/defiNet.cpp	/^int defiNet::yh(int index) const {$/;"	f	class:defiNet
yh	def/defiNet.cpp	/^int defiVpin::yh() const  {$/;"	f	class:defiVpin
yh	def/defiRegion.cpp	/^int defiRegion::yh(int index) const {$/;"	f	class:defiRegion
yh	def/defiSite.cpp	/^int defiBox::yh() const {$/;"	f	class:defiBox
yh	def/defiSlot.cpp	/^int defiSlot::yh(int index) const {$/;"	f	class:defiSlot
yh_	def/defiBlockage.hpp	/^  int*   yh_;$/;"	m	class:defiBlockage
yh_	def/defiFill.hpp	/^  int*  yh_;$/;"	m	class:defiFill
yh_	def/defiGroup.hpp	/^  int* yh_;$/;"	m	class:defiGroup
yh_	def/defiNet.hpp	/^  int yh_;$/;"	m	class:defiVpin
yh_	def/defiNet.hpp	/^  int* yh_;$/;"	m	class:defiNet
yh_	def/defiPinCap.hpp	/^  int    *xl_, *yl_, *xh_, *yh_;$/;"	m	class:defiPinPort
yh_	def/defiPinCap.hpp	/^  int *xl_, *yl_, *xh_, *yh_;       \/\/ 5.6, changed to arrays$/;"	m	class:defiPin
yh_	def/defiRegion.hpp	/^  int* yh_;$/;"	m	class:defiRegion
yh_	def/defiSite.hpp	/^  int xh_, yh_;$/;"	m	class:defiBox
yh_	def/defiSlot.hpp	/^  int*  yh_;$/;"	m	class:defiSlot
yh_	def/defiVia.hpp	/^  int* yh_;$/;"	m	class:defiVia
yh_	include/defiBlockage.hpp	/^  int*   yh_;$/;"	m	class:defiBlockage
yh_	include/defiFill.hpp	/^  int*  yh_;$/;"	m	class:defiFill
yh_	include/defiGroup.hpp	/^  int* yh_;$/;"	m	class:defiGroup
yh_	include/defiNet.hpp	/^  int yh_;$/;"	m	class:defiVpin
yh_	include/defiNet.hpp	/^  int* yh_;$/;"	m	class:defiNet
yh_	include/defiPinCap.hpp	/^  int    *xl_, *yl_, *xh_, *yh_;$/;"	m	class:defiPinPort
yh_	include/defiPinCap.hpp	/^  int *xl_, *yl_, *xh_, *yh_;       \/\/ 5.6, changed to arrays$/;"	m	class:defiPin
yh_	include/defiRegion.hpp	/^  int* yh_;$/;"	m	class:defiRegion
yh_	include/defiSite.hpp	/^  int xh_, yh_;$/;"	m	class:defiBox
yh_	include/defiSlot.hpp	/^  int*  yh_;$/;"	m	class:defiSlot
yh_	include/defiVia.hpp	/^  int* yh_;$/;"	m	class:defiVia
yl	def/defiBlockage.cpp	/^int defiBlockage::yl(int index) const {$/;"	f	class:defiBlockage
yl	def/defiFill.cpp	/^int defiFill::yl(int index) const {$/;"	f	class:defiFill
yl	def/defiNet.cpp	/^int defiNet::yl(int index) const {$/;"	f	class:defiNet
yl	def/defiNet.cpp	/^int defiVpin::yl() const  {$/;"	f	class:defiVpin
yl	def/defiRegion.cpp	/^int defiRegion::yl(int index) const {$/;"	f	class:defiRegion
yl	def/defiSite.cpp	/^int defiBox::yl() const {$/;"	f	class:defiBox
yl	def/defiSlot.cpp	/^int defiSlot::yl(int index) const {$/;"	f	class:defiSlot
yl_	def/defiBlockage.hpp	/^  int*   yl_;$/;"	m	class:defiBlockage
yl_	def/defiFill.hpp	/^  int*  yl_;$/;"	m	class:defiFill
yl_	def/defiGroup.hpp	/^  int* yl_;$/;"	m	class:defiGroup
yl_	def/defiNet.hpp	/^  int yl_;$/;"	m	class:defiVpin
yl_	def/defiNet.hpp	/^  int* yl_;$/;"	m	class:defiNet
yl_	def/defiPinCap.hpp	/^  int    *xl_, *yl_, *xh_, *yh_;$/;"	m	class:defiPinPort
yl_	def/defiPinCap.hpp	/^  int *xl_, *yl_, *xh_, *yh_;       \/\/ 5.6, changed to arrays$/;"	m	class:defiPin
yl_	def/defiRegion.hpp	/^  int* yl_;$/;"	m	class:defiRegion
yl_	def/defiSite.hpp	/^  int xl_, yl_;$/;"	m	class:defiBox
yl_	def/defiSlot.hpp	/^  int*  yl_;$/;"	m	class:defiSlot
yl_	def/defiVia.hpp	/^  int* yl_;$/;"	m	class:defiVia
yl_	include/defiBlockage.hpp	/^  int*   yl_;$/;"	m	class:defiBlockage
yl_	include/defiFill.hpp	/^  int*  yl_;$/;"	m	class:defiFill
yl_	include/defiGroup.hpp	/^  int* yl_;$/;"	m	class:defiGroup
yl_	include/defiNet.hpp	/^  int yl_;$/;"	m	class:defiVpin
yl_	include/defiNet.hpp	/^  int* yl_;$/;"	m	class:defiNet
yl_	include/defiPinCap.hpp	/^  int    *xl_, *yl_, *xh_, *yh_;$/;"	m	class:defiPinPort
yl_	include/defiPinCap.hpp	/^  int *xl_, *yl_, *xh_, *yh_;       \/\/ 5.6, changed to arrays$/;"	m	class:defiPin
yl_	include/defiRegion.hpp	/^  int* yl_;$/;"	m	class:defiRegion
yl_	include/defiSite.hpp	/^  int xl_, yl_;$/;"	m	class:defiBox
yl_	include/defiSlot.hpp	/^  int*  yl_;$/;"	m	class:defiSlot
yl_	include/defiVia.hpp	/^  int* yl_;$/;"	m	class:defiVia
yy_reduce_print	def/def.tab.cpp	/^yy_reduce_print (yytype_int16 *yyssp, YYSTYPE *yyvsp, int yyrule, defrData *defData)$/;"	f	file:
yy_stack_print	def/def.tab.cpp	/^yy_stack_print (yytype_int16 *yybottom, yytype_int16 *yytop)$/;"	f	file:
yy_symbol_print	def/def.tab.cpp	/^yy_symbol_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, defrData *defData)$/;"	f	file:
yy_symbol_value_print	def/def.tab.cpp	/^yy_symbol_value_print (FILE *yyoutput, int yytype, YYSTYPE const * const yyvaluep, defrData *defData)$/;"	f	file:
yyalloc	def/def.tab.cpp	/^union yyalloc$/;"	u	file:
yycheck	def/def.tab.cpp	/^static const yytype_int16 yycheck[] =$/;"	v	file:
yyclearin	def/def.tab.cpp	2241;"	d	file:
yydebug	def/def.tab.cpp	/^int yydebug;$/;"	v
yydebug	def/def.tab.cpp	66;"	d	file:
yydefact	def/def.tab.cpp	/^static const yytype_uint16 yydefact[] =$/;"	v	file:
yydefgoto	def/def.tab.cpp	/^static const yytype_int16 yydefgoto[] =$/;"	v	file:
yydestruct	def/def.tab.cpp	/^yydestruct (const char *yymsg, int yytype, YYSTYPE *yyvaluep, defrData *defData)$/;"	f	file:
yyerrok	def/def.tab.cpp	2240;"	d	file:
yyerror	def/def.tab.cpp	/^void yyerror(defrData *defData, const char *s)$/;"	f
yyerror	def/def.tab.cpp	65;"	d	file:
yylex	def/def.tab.cpp	/^int yylex(YYSTYPE *pYylval, defrData *defData)$/;"	f
yylex	def/def.tab.cpp	64;"	d	file:
yylval	def/defrData.hpp	/^    YYSTYPE yylval;$/;"	m	class:defrData
yylval	include/defrData.hpp	/^    YYSTYPE yylval;$/;"	m	class:defrData
yynerrs	def/def.tab.cpp	67;"	d	file:
yypact	def/def.tab.cpp	/^static const yytype_int16 yypact[] =$/;"	v	file:
yypact_value_is_default	def/def.tab.cpp	1084;"	d	file:
yyparse	def/def.tab.cpp	/^yyparse (defrData *defData)$/;"	f
yyparse	def/def.tab.cpp	63;"	d	file:
yypgoto	def/def.tab.cpp	/^static const yytype_int16 yypgoto[] =$/;"	v	file:
yyr1	def/def.tab.cpp	/^static const yytype_uint16 yyr1[] =$/;"	v	file:
yyr2	def/def.tab.cpp	/^static const yytype_uint8 yyr2[] =$/;"	v	file:
yyrline	def/def.tab.cpp	/^static const yytype_uint16 yyrline[] =$/;"	v	file:
yyss_alloc	def/def.tab.cpp	/^  yytype_int16 yyss_alloc;$/;"	m	union:yyalloc	file:
yystos	def/def.tab.cpp	/^static const yytype_uint16 yystos[] =$/;"	v	file:
yystpcpy	def/def.tab.cpp	/^yystpcpy (char *yydest, const char *yysrc)$/;"	f	file:
yystpcpy	def/def.tab.cpp	2443;"	d	file:
yystrlen	def/def.tab.cpp	/^yystrlen (const char *yystr)$/;"	f	file:
yystrlen	def/def.tab.cpp	2427;"	d	file:
yysyntax_error	def/def.tab.cpp	/^yysyntax_error (YYSIZE_T *yymsg_alloc, char **yymsg,$/;"	f	file:
yytable	def/def.tab.cpp	/^static const yytype_int16 yytable[] =$/;"	v	file:
yytable_value_is_error	def/def.tab.cpp	1089;"	d	file:
yytname	def/def.tab.cpp	/^static const char *const yytname[] =$/;"	v	file:
yytnamerr	def/def.tab.cpp	/^yytnamerr (char *yyres, const char *yystr)$/;"	f	file:
yytokentype	def/def.tab.cpp	/^  enum yytokentype$/;"	g	file:
yytokentype	def/def.tab.h	/^  enum yytokentype$/;"	g
yytoknum	def/def.tab.cpp	/^static const yytype_uint16 yytoknum[] =$/;"	v	file:
yytranslate	def/def.tab.cpp	/^static const yytype_uint16 yytranslate[] =$/;"	v	file:
yytype_int16	def/def.tab.cpp	/^typedef YYTYPE_INT16 yytype_int16;$/;"	t	file:
yytype_int16	def/def.tab.cpp	/^typedef short int yytype_int16;$/;"	t	file:
yytype_int8	def/def.tab.cpp	/^typedef YYTYPE_INT8 yytype_int8;$/;"	t	file:
yytype_int8	def/def.tab.cpp	/^typedef signed char yytype_int8;$/;"	t	file:
yytype_uint16	def/def.tab.cpp	/^typedef YYTYPE_UINT16 yytype_uint16;$/;"	t	file:
yytype_uint16	def/def.tab.cpp	/^typedef unsigned short int yytype_uint16;$/;"	t	file:
yytype_uint8	def/def.tab.cpp	/^typedef YYTYPE_UINT8 yytype_uint8;$/;"	t	file:
yytype_uint8	def/def.tab.cpp	/^typedef unsigned char yytype_uint8;$/;"	t	file:
yyvs_alloc	def/def.tab.cpp	/^  YYSTYPE yyvs_alloc;$/;"	m	union:yyalloc	file:
~defiAlias_itr	def/defiAlias.cpp	/^defiAlias_itr::~defiAlias_itr() {$/;"	f	class:defiAlias_itr
~defiAssertion	def/defiAssertion.cpp	/^defiAssertion::~defiAssertion() {$/;"	f	class:defiAssertion
~defiBlockage	def/defiBlockage.cpp	/^defiBlockage::~defiBlockage() {$/;"	f	class:defiBlockage
~defiBox	def/defiSite.cpp	/^defiBox::~defiBox() {$/;"	f	class:defiBox
~defiComponent	def/defiComponent.cpp	/^defiComponent::~defiComponent() {$/;"	f	class:defiComponent
~defiComponentMaskShiftLayer	def/defiComponent.cpp	/^defiComponentMaskShiftLayer::~defiComponentMaskShiftLayer() {$/;"	f	class:defiComponentMaskShiftLayer
~defiFPC	def/defiFPC.cpp	/^defiFPC::~defiFPC() {$/;"	f	class:defiFPC
~defiFill	def/defiFill.cpp	/^defiFill::~defiFill() {$/;"	f	class:defiFill
~defiGcellGrid	def/defiRowTrack.cpp	/^defiGcellGrid::~defiGcellGrid() {$/;"	f	class:defiGcellGrid
~defiGeometries	def/defiMisc.cpp	/^defiGeometries::~defiGeometries() {$/;"	f	class:defiGeometries
~defiGroup	def/defiGroup.cpp	/^defiGroup::~defiGroup() {$/;"	f	class:defiGroup
~defiIOTiming	def/defiIOTiming.cpp	/^defiIOTiming::~defiIOTiming() {$/;"	f	class:defiIOTiming
~defiNet	def/defiNet.cpp	/^defiNet::~defiNet() {$/;"	f	class:defiNet
~defiNonDefault	def/defiNonDefault.cpp	/^defiNonDefault::~defiNonDefault() { $/;"	f	class:defiNonDefault
~defiOrdered	def/defiScanchain.cpp	/^defiOrdered::~defiOrdered()$/;"	f	class:defiOrdered
~defiPartition	def/defiPartition.cpp	/^defiPartition::~defiPartition() {$/;"	f	class:defiPartition
~defiPath	def/defiPath.cpp	/^defiPath::~defiPath() {$/;"	f	class:defiPath
~defiPin	def/defiPinCap.cpp	/^defiPin::~defiPin() {$/;"	f	class:defiPin
~defiPinAntennaModel	def/defiPinCap.cpp	/^defiPinAntennaModel::~defiPinAntennaModel() {$/;"	f	class:defiPinAntennaModel
~defiPinPort	def/defiPinCap.cpp	/^defiPinPort::~defiPinPort() {$/;"	f	class:defiPinPort
~defiPinProp	def/defiPinProp.cpp	/^defiPinProp::~defiPinProp() {$/;"	f	class:defiPinProp
~defiProp	def/defiProp.cpp	/^defiProp::~defiProp() {$/;"	f	class:defiProp
~defiPropType	def/defiPropType.cpp	/^defiPropType::~defiPropType() {$/;"	f	class:defiPropType
~defiRegion	def/defiRegion.cpp	/^defiRegion::~defiRegion() {$/;"	f	class:defiRegion
~defiRow	def/defiRowTrack.cpp	/^defiRow::~defiRow() {$/;"	f	class:defiRow
~defiScanchain	def/defiScanchain.cpp	/^defiScanchain::~defiScanchain() {$/;"	f	class:defiScanchain
~defiShield	def/defiNet.cpp	/^defiShield::~defiShield() {$/;"	f	class:defiShield
~defiSite	def/defiSite.cpp	/^defiSite::~defiSite() {$/;"	f	class:defiSite
~defiSlot	def/defiSlot.cpp	/^defiSlot::~defiSlot() {$/;"	f	class:defiSlot
~defiStyles	def/defiMisc.cpp	/^defiStyles::~defiStyles() {$/;"	f	class:defiStyles
~defiSubnet	def/defiNet.cpp	/^defiSubnet::~defiSubnet() {$/;"	f	class:defiSubnet
~defiTimingDisable	def/defiTimingDisable.cpp	/^defiTimingDisable::~defiTimingDisable() {$/;"	f	class:defiTimingDisable
~defiTrack	def/defiRowTrack.cpp	/^defiTrack::~defiTrack() {$/;"	f	class:defiTrack
~defiVia	def/defiVia.cpp	/^defiVia::~defiVia() {$/;"	f	class:defiVia
~defiVpin	def/defiNet.cpp	/^defiVpin::~defiVpin() {$/;"	f	class:defiVpin
~defiWire	def/defiNet.cpp	/^defiWire::~defiWire() {$/;"	f	class:defiWire
~defrData	def/defrData.cpp	/^defrData::~defrData()$/;"	f	class:defrData
